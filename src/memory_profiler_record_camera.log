Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   397    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   398                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   399                                             """
   400                                             Function for recording from BlackFly.
   401                                             Gets camera specs from cam_specs (user input in main).
   402                                         
   403                                             All calls starting with blackFly.something makes physical changes to setup,
   404                                             so they must be updated each time we run the camera.
   405                                         
   406                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   407                                             and is set in the getUserInput thread.
   408                                             """
   409    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
   410                                         
   411    317.5 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
   412                                             
   413    317.6 MiB      0.1 MiB           1       faulthandler.enable()
   414                                         
   415                                             # Clean up any previous attachments
   416    317.6 MiB      0.0 MiB           1       try:
   417    347.0 MiB     29.4 MiB           1           tmp_cam = Camera()
   418    367.4 MiB     20.4 MiB           1           tmp_cam.init()
   419    366.9 MiB     -0.5 MiB           1           tmp_cam.close()
   420                                         
   421    367.0 MiB      0.1 MiB           1           blackFly = Camera()
   422                                             except (NameError , CameraError):
   423                                                 print("Camera not connected!")
   424                                                 sys.exit()
   425                                         
   426    367.7 MiB      0.6 MiB           1       blackFly.init()
   427                                         
   428                                             # Enable parameter editing
   429    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   430    367.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   431    367.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   432    367.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   433                                         
   434                                             # Settings for hardware trigger - do not edit
   435    367.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   436    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   437    367.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   438    367.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   439    367.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   440    367.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   441    367.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   442    367.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   443    367.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   444                                         
   445                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   446    368.0 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   447    368.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   448    368.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   449    368.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   450                                         
   451                                         
   452                                             # Setup counters to count missed triggers
   453    368.0 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   454    368.0 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   455    368.0 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   456    368.0 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   457    368.0 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   458    368.0 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   459                                         
   460    368.0 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   461                                         
   462    368.0 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   463    368.0 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   464    368.0 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   465    368.0 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   466    368.0 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   467    368.0 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   468                                         
   469    368.0 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   470                                         
   471    368.0 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   472    368.0 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   473                                         
   474    368.0 MiB      0.0 MiB           1       tot_count = [0,0]
   475    368.0 MiB      0.0 MiB           1       counter = [0,0]
   476    368.0 MiB      0.0 MiB           1       curr_count = [0,0]
   477                                         
   478                                             # Setting dimensions of camera images
   479    368.0 MiB      0.0 MiB           1       try:
   480    368.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   481    368.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   482    368.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   483    368.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   484                                             except CameraError:
   485                                                 print("Could not set camera height. Current properties:")
   486                                                 print(F"Height: {blackFly.Height}")
   487                                                 print(F"Width: {blackFly.Width}")
   488                                                 print(F"OffsetX: {blackFly.OffsetX}")
   489                                                 print(F"OffsetY: {blackFly.OffsetY}")
   490                                         
   491                                             #Save camera specs for later use
   492    368.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   493                                             
   494                                             # Queue for processing images
   495    368.0 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   496                                         
   497                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   498    368.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   499    368.4 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   500                                         
   501    368.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   502                                         
   503    368.6 MiB      0.2 MiB           1       blackFly.start()
   504                                                 
   505    368.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   506    368.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   507    368.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   508    368.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   509    368.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   510    368.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   511                                         
   512    368.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   513    368.6 MiB      0.0 MiB           1       w_start = time.time()
   514    368.6 MiB      0.0 MiB           1       img_process_ready.wait()
   515    368.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   516    368.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   517    368.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   518                                         
   519    368.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   520    369.3 MiB      0.7 MiB           1       im = blackFly.get_array()
   521    369.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   522                                             
   523    369.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   524    370.0 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   525    370.3 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   526    370.3 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   527                                         
   528                                         
   529    370.3 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   530                                             
   531    370.3 MiB      0.0 MiB           1       rec_frames = 1
   532    370.3 MiB      0.0 MiB           1       e = 0
   533    370.3 MiB      0.0 MiB           1       n = 0
   534    370.3 MiB      0.0 MiB           1       n_else = 0
   535    370.3 MiB      0.0 MiB           1       t_start = time.time()
   536                                         
   537    370.3 MiB      0.0 MiB           1       avg_while = 0
   538    370.3 MiB      0.0 MiB           1       t_else_avg = 0
   539                                         
   540    370.3 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   541                                         
   542                                             # Record until user asks for restart or quit
   543    371.4 MiB      0.0 MiB       28986       while cam_recording_ready.is_set():
   544    371.4 MiB      0.0 MiB       28985           t_while_start = time.time()
   545    371.4 MiB      0.0 MiB       28985           try:
   546    371.4 MiB      0.0 MiB       28985               im = blackFly.get_array(False)
   547    371.4 MiB      0.0 MiB       28985               t = time.time()
   548    371.4 MiB      0.0 MiB       28985               rec_frames += 1
   549    371.4 MiB      0.0 MiB       28985               img_proc_queue.put_nowait([im,rec_frames])
   550                                         
   551                                                     """
   552                                                     # These counters count number of triggers and exposures
   553                                                     # of the camera to make sure the FPS is around 500.
   554                                                     # However, introducing this reduces fps to about 400, so 
   555                                                     # only use for debugging.
   556                                         
   557                                                     blackFly.CounterSelector = 'Counter0' 
   558                                                     curr_count[0] = blackFly.CounterValue
   559                                                     
   560                                                     blackFly.CounterSelector = 'Counter1'
   561                                                     curr_count[1] = blackFly.CounterValue
   562                                                     
   563                                                     for i in [0,1]:
   564                                                         if curr_count[i] < counter[i]: 
   565                                                             tot_count[i] += 1
   566                                                         counter[i] = curr_count[i]
   567                                                     """
   568                                                     
   569    371.4 MiB      0.0 MiB       28985               t_while_end = time.time()
   570    371.4 MiB      0.0 MiB       28985               avg_while += t_while_end - t_while_start
   571    371.4 MiB      0.0 MiB       28985               n += 1
   572                                                     
   573                                                 except SpinnakerException:              # If no new frame - pass
   574                                                     e += 1
   575                                                     pass
   576                                                 else:
   577    371.4 MiB      0.0 MiB       28985               t_else_start = time.time()
   578                                                                         # Else we want to show the most recent frame
   579    371.4 MiB      0.0 MiB       28985               try:
   580    371.4 MiB      1.0 MiB       28985                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   581    371.4 MiB      0.0 MiB       26026                   pass
   582    371.4 MiB      0.0 MiB        2959               except queue.Empty:                 # Unless it is already been showed
   583    371.4 MiB      0.0 MiB        2959                   pass
   584                                                     finally:                            
   585    371.4 MiB      0.0 MiB       28985                   try:
   586    371.4 MiB      0.0 MiB       28985                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   587    371.4 MiB      0.0 MiB        1083                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   588    371.4 MiB      0.0 MiB        1083                       pass
   589                                                     
   590    371.4 MiB      0.0 MiB       28985               t_else_end = time.time()
   591                                         
   592    371.4 MiB      0.0 MiB       28985               t_else_avg += t_else_end - t_else_start
   593    371.4 MiB      0.0 MiB       28985               n_else += 1
   594                                         
   595                                             
   596    371.4 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   397    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   398                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   399                                             """
   400                                             Function for recording from BlackFly.
   401                                             Gets camera specs from cam_specs (user input in main).
   402                                         
   403                                             All calls starting with blackFly.something makes physical changes to setup,
   404                                             so they must be updated each time we run the camera.
   405                                         
   406                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   407                                             and is set in the getUserInput thread.
   408                                             """
   409    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
   410                                         
   411    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
   412                                             
   413    317.5 MiB      0.0 MiB           1       faulthandler.enable()
   414                                         
   415                                             # Clean up any previous attachments
   416    317.5 MiB      0.0 MiB           1       try:
   417    347.0 MiB     29.5 MiB           1           tmp_cam = Camera()
   418    367.4 MiB     20.4 MiB           1           tmp_cam.init()
   419    367.0 MiB     -0.5 MiB           1           tmp_cam.close()
   420                                         
   421    367.1 MiB      0.1 MiB           1           blackFly = Camera()
   422                                             except (NameError , CameraError):
   423                                                 print("Camera not connected!")
   424                                                 sys.exit()
   425                                         
   426    367.9 MiB      0.8 MiB           1       blackFly.init()
   427                                         
   428                                             # Enable parameter editing
   429    367.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   430    367.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   431    367.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   432    367.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   433                                         
   434                                             # Settings for hardware trigger - do not edit
   435    367.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   436    367.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   437    367.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   438    367.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   439    367.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   440    367.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   441    367.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   442    367.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   443    367.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   444                                         
   445                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   446    367.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   447    367.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   448    367.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   449    367.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   450                                         
   451                                         
   452                                             # Setup counters to count missed triggers
   453    367.9 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   454    367.9 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   455    367.9 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   456    367.9 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   457    367.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   458    367.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   459                                         
   460    367.9 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   461                                         
   462    367.9 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   463    367.9 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   464    367.9 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   465    367.9 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   466    367.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   467    367.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   468                                         
   469    367.9 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   470                                         
   471    367.9 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   472    367.9 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   473                                         
   474    367.9 MiB      0.0 MiB           1       tot_count = [0,0]
   475    367.9 MiB      0.0 MiB           1       counter = [0,0]
   476    367.9 MiB      0.0 MiB           1       curr_count = [0,0]
   477                                         
   478                                             # Setting dimensions of camera images
   479    367.9 MiB      0.0 MiB           1       try:
   480    367.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   481    367.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   482    367.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   483    367.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   484                                             except CameraError:
   485                                                 print("Could not set camera height. Current properties:")
   486                                                 print(F"Height: {blackFly.Height}")
   487                                                 print(F"Width: {blackFly.Width}")
   488                                                 print(F"OffsetX: {blackFly.OffsetX}")
   489                                                 print(F"OffsetY: {blackFly.OffsetY}")
   490                                         
   491                                             #Save camera specs for later use
   492    367.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   493                                             
   494                                             # Queue for processing images
   495    367.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   496                                         
   497                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   498    368.4 MiB      0.5 MiB           1       n_used_proc = os.cpu_count() - 1
   499    368.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   500                                         
   501    368.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   502                                         
   503    368.5 MiB      0.1 MiB           1       blackFly.start()
   504                                                 
   505    368.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   506    368.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   507    368.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   508    368.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   509    368.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   510    368.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   511                                         
   512    368.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   513    368.5 MiB      0.0 MiB           1       w_start = time.time()
   514    368.5 MiB      0.0 MiB           1       img_process_ready.wait()
   515    368.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   516    368.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   517    368.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   518                                         
   519    368.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   520    368.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   521    368.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   522                                             
   523    368.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   524    369.5 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   525    369.5 MiB      0.0 MiB           1       img_show_queue.put([im,0])
   526    369.7 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   527                                         
   528                                         
   529    369.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   530                                             
   531    369.7 MiB      0.0 MiB           1       rec_frames = 1
   532    369.7 MiB      0.0 MiB           1       e = 0
   533    369.7 MiB      0.0 MiB           1       n = 0
   534    369.7 MiB      0.0 MiB           1       n_else = 0
   535    369.7 MiB      0.0 MiB           1       t_start = time.time()
   536                                         
   537    369.7 MiB      0.0 MiB           1       avg_while = 0
   538    369.7 MiB      0.0 MiB           1       t_else_avg = 0
   539                                         
   540    370.0 MiB      0.3 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   541                                         
   542                                             # Record until user asks for restart or quit
   543    372.0 MiB      0.0 MiB       30059       while cam_recording_ready.is_set():
   544    372.0 MiB      0.0 MiB       30058           t_while_start = time.time()
   545    372.0 MiB      0.0 MiB       30058           try:
   546    372.0 MiB      0.8 MiB       30058               im = blackFly.get_array(False)
   547    372.0 MiB      0.0 MiB       30058               t = time.time()
   548    372.0 MiB      0.0 MiB       30058               rec_frames += 1
   549    372.0 MiB      0.0 MiB       30058               img_proc_queue.put_nowait([im,rec_frames])
   550                                         
   551                                                     """
   552                                                     # These counters count number of triggers and exposures
   553                                                     # of the camera to make sure the FPS is around 500.
   554                                                     # However, introducing this reduces fps to about 400, so 
   555                                                     # only use for debugging.
   556                                         
   557                                                     blackFly.CounterSelector = 'Counter0' 
   558                                                     curr_count[0] = blackFly.CounterValue
   559                                                     
   560                                                     blackFly.CounterSelector = 'Counter1'
   561                                                     curr_count[1] = blackFly.CounterValue
   562                                                     
   563                                                     for i in [0,1]:
   564                                                         if curr_count[i] < counter[i]: 
   565                                                             tot_count[i] += 1
   566                                                         counter[i] = curr_count[i]
   567                                                     """
   568                                                     
   569    372.0 MiB      0.0 MiB       30058               t_while_end = time.time()
   570    372.0 MiB      0.0 MiB       30058               avg_while += t_while_end - t_while_start
   571    372.0 MiB      0.0 MiB       30058               n += 1
   572                                                     
   573                                                 except SpinnakerException:              # If no new frame - pass
   574                                                     e += 1
   575                                                     pass
   576                                                 else:
   577    372.0 MiB      0.0 MiB       30058               t_else_start = time.time()
   578                                                                         # Else we want to show the most recent frame
   579    372.0 MiB      0.0 MiB       30058               try:
   580    372.0 MiB      1.1 MiB       30058                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   581    372.0 MiB      0.1 MiB       26849                   pass
   582    372.0 MiB      0.0 MiB        3209               except queue.Empty:                 # Unless it is already been showed
   583    372.0 MiB      0.0 MiB        3209                   pass
   584                                                     finally:                            
   585    372.0 MiB      0.0 MiB       30058                   try:
   586    372.0 MiB      0.0 MiB       30058                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   587    372.0 MiB      0.0 MiB        1137                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   588    372.0 MiB      0.0 MiB        1137                       pass
   589                                                     
   590    372.0 MiB      0.0 MiB       30058               t_else_end = time.time()
   591                                         
   592    372.0 MiB      0.0 MiB       30058               t_else_avg += t_else_end - t_else_start
   593    372.0 MiB      0.0 MiB       30058               n_else += 1
   594                                         
   595                                             
   596    372.0 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   397    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   398                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   399                                             """
   400                                             Function for recording from BlackFly.
   401                                             Gets camera specs from cam_specs (user input in main).
   402                                         
   403                                             All calls starting with blackFly.something makes physical changes to setup,
   404                                             so they must be updated each time we run the camera.
   405                                         
   406                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   407                                             and is set in the getUserInput thread.
   408                                             """
   409    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
   410                                         
   411    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
   412                                             
   413    317.6 MiB      0.0 MiB           1       faulthandler.enable()
   414                                         
   415                                             # Clean up any previous attachments
   416    317.6 MiB      0.0 MiB           1       try:
   417    346.6 MiB     29.0 MiB           1           tmp_cam = Camera()
   418    366.9 MiB     20.3 MiB           1           tmp_cam.init()
   419    366.4 MiB     -0.4 MiB           1           tmp_cam.close()
   420                                         
   421    366.6 MiB      0.1 MiB           1           blackFly = Camera()
   422                                             except (NameError , CameraError):
   423                                                 print("Camera not connected!")
   424                                                 sys.exit()
   425                                         
   426    367.4 MiB      0.8 MiB           1       blackFly.init()
   427                                         
   428                                             # Enable parameter editing
   429    367.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   430    367.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   431    367.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   432    367.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   433                                         
   434                                             # Settings for hardware trigger - do not edit
   435    367.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   436    367.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   437    367.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   438    367.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   439    367.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   440    367.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   441    367.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   442    367.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   443    367.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   444                                         
   445                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   446    367.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   447    367.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   448    367.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   449    367.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   450                                         
   451                                         
   452                                             # Setup counters to count missed triggers
   453    367.4 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   454    367.4 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   455    367.4 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   456    367.4 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   457    367.4 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   458    367.4 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   459                                         
   460    367.4 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   461                                         
   462    367.4 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   463    367.4 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   464    367.4 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   465    367.4 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   466    367.4 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   467    367.4 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   468                                         
   469    367.4 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   470                                         
   471    367.4 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   472    367.4 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   473                                         
   474    367.4 MiB      0.0 MiB           1       tot_count = [0,0]
   475    367.4 MiB      0.0 MiB           1       counter = [0,0]
   476    367.4 MiB      0.0 MiB           1       curr_count = [0,0]
   477                                         
   478                                             # Setting dimensions of camera images
   479    367.4 MiB      0.0 MiB           1       try:
   480    367.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   481    367.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   482    367.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   483    367.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   484                                             except CameraError:
   485                                                 print("Could not set camera height. Current properties:")
   486                                                 print(F"Height: {blackFly.Height}")
   487                                                 print(F"Width: {blackFly.Width}")
   488                                                 print(F"OffsetX: {blackFly.OffsetX}")
   489                                                 print(F"OffsetY: {blackFly.OffsetY}")
   490                                         
   491                                             #Save camera specs for later use
   492    367.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   493                                             
   494                                             # Queue for processing images
   495    367.9 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   496                                         
   497                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   498    367.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   499    368.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   500                                         
   501    368.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   502                                         
   503    368.1 MiB      0.1 MiB           1       blackFly.start()
   504                                                 
   505    368.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   506    368.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   507    368.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   508    368.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   509    368.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   510    368.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   511                                         
   512    368.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   513    368.1 MiB      0.0 MiB           1       w_start = time.time()
   514    368.1 MiB      0.0 MiB           1       img_process_ready.wait()
   515    368.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   516    368.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   517    368.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   518                                         
   519    368.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   520    368.4 MiB      0.3 MiB           1       im = blackFly.get_array()
   521    368.4 MiB      0.0 MiB           1       print("record_camera: got first array!")
   522                                             
   523    368.4 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   524    369.1 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   525    369.4 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   526    369.6 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   527                                         
   528                                         
   529    369.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   530                                             
   531    369.6 MiB      0.0 MiB           1       rec_frames = 1
   532    369.6 MiB      0.0 MiB           1       e = 0
   533    369.6 MiB      0.0 MiB           1       n = 0
   534    369.6 MiB      0.0 MiB           1       n_else = 0
   535    369.6 MiB      0.0 MiB           1       t_start = time.time()
   536                                         
   537    369.6 MiB      0.0 MiB           1       avg_while = 0
   538    369.6 MiB      0.0 MiB           1       t_else_avg = 0
   539                                         
   540    369.6 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   541                                         
   542                                             # Record until user asks for restart or quit
   543    372.0 MiB      0.0 MiB     1962621       while cam_recording_ready.is_set():
   544    372.0 MiB      0.0 MiB     1962620           t_while_start = time.time()
   545    372.0 MiB      0.0 MiB     1962620           try:
   546    372.0 MiB      1.0 MiB     1962620               im = blackFly.get_array(False)
   547    372.0 MiB      0.0 MiB     1962529               t = time.time()
   548    372.0 MiB      0.0 MiB     1962529               rec_frames += 1
   549    372.0 MiB      0.0 MiB     1962529               img_proc_queue.put_nowait([im,rec_frames])
   550                                         
   551                                                     """
   552                                                     # These counters count number of triggers and exposures
   553                                                     # of the camera to make sure the FPS is around 500.
   554                                                     # However, introducing this reduces fps to about 400, so 
   555                                                     # only use for debugging.
   556                                         
   557                                                     blackFly.CounterSelector = 'Counter0' 
   558                                                     curr_count[0] = blackFly.CounterValue
   559                                                     
   560                                                     blackFly.CounterSelector = 'Counter1'
   561                                                     curr_count[1] = blackFly.CounterValue
   562                                                     
   563                                                     for i in [0,1]:
   564                                                         if curr_count[i] < counter[i]: 
   565                                                             tot_count[i] += 1
   566                                                         counter[i] = curr_count[i]
   567                                                     """
   568                                                     
   569    372.0 MiB      0.0 MiB     1962529               t_while_end = time.time()
   570    372.0 MiB      0.0 MiB     1962529               avg_while += t_while_end - t_while_start
   571    372.0 MiB      0.0 MiB     1962529               n += 1
   572                                                     
   573    372.0 MiB      0.0 MiB          91           except SpinnakerException:              # If no new frame - pass
   574    372.0 MiB      0.0 MiB          91               e += 1
   575    372.0 MiB      0.0 MiB          91               pass
   576                                                 else:
   577    372.0 MiB      0.0 MiB     1962529               t_else_start = time.time()
   578                                                                         # Else we want to show the most recent frame
   579    372.0 MiB      0.0 MiB     1962529               try:
   580    372.0 MiB      1.3 MiB     1962529                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   581    372.0 MiB      0.0 MiB     1761306                   pass
   582    372.0 MiB      0.0 MiB      201223               except queue.Empty:                 # Unless it is already been showed
   583    372.0 MiB      0.0 MiB      201223                   pass
   584                                                     finally:                            
   585    372.0 MiB      0.0 MiB     1962529                   try:
   586    372.0 MiB      0.0 MiB     1962529                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   587    372.0 MiB      0.0 MiB      127033                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   588    372.0 MiB      0.0 MiB      127033                       pass
   589                                                     
   590    372.0 MiB      0.0 MiB     1962529               t_else_end = time.time()
   591                                         
   592    372.0 MiB      0.0 MiB     1962529               t_else_avg += t_else_end - t_else_start
   593    372.0 MiB      0.0 MiB     1962529               n_else += 1
   594                                         
   595                                             
   596    372.0 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   397    317.7 MiB    317.7 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   398                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   399                                             """
   400                                             Function for recording from BlackFly.
   401                                             Gets camera specs from cam_specs (user input in main).
   402                                         
   403                                             All calls starting with blackFly.something makes physical changes to setup,
   404                                             so they must be updated each time we run the camera.
   405                                         
   406                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   407                                             and is set in the getUserInput thread.
   408                                             """
   409    317.7 MiB      0.0 MiB           1       queue_check_interval = 10
   410                                         
   411    317.7 MiB      0.0 MiB           1       img_process_ready = multiprocessing.Event()
   412                                             
   413    317.9 MiB      0.1 MiB           1       faulthandler.enable()
   414                                         
   415                                             # Clean up any previous attachments
   416    317.9 MiB      0.0 MiB           1       try:
   417    347.1 MiB     29.2 MiB           1           tmp_cam = Camera()
   418    367.8 MiB     20.7 MiB           1           tmp_cam.init()
   419    367.3 MiB     -0.5 MiB           1           tmp_cam.close()
   420                                         
   421    367.4 MiB      0.1 MiB           1           blackFly = Camera()
   422                                             except (NameError , CameraError):
   423                                                 print("Camera not connected!")
   424                                                 sys.exit()
   425                                         
   426    368.2 MiB      0.8 MiB           1       blackFly.init()
   427                                         
   428                                             # Enable parameter editing
   429    368.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   430    368.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   431    368.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   432    368.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   433                                         
   434                                             # Settings for hardware trigger - do not edit
   435    368.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   436    368.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   437    368.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   438    368.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   439    368.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   440    368.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   441    368.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   442    368.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   443    368.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   444                                         
   445                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   446    368.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   447    368.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   448    368.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   449    368.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   450                                         
   451                                         
   452                                             # Setup counters to count missed triggers
   453    368.2 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   454    368.2 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   455    368.2 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   456    368.2 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   457    368.2 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   458    368.2 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   459                                         
   460    368.2 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   461                                         
   462    368.2 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   463    368.2 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   464    368.2 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   465    368.2 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   466    368.2 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   467    368.2 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   468                                         
   469    368.2 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   470                                         
   471    368.2 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   472    368.2 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   473                                         
   474    368.2 MiB      0.0 MiB           1       tot_count = [0,0]
   475    368.2 MiB      0.0 MiB           1       counter = [0,0]
   476    368.2 MiB      0.0 MiB           1       curr_count = [0,0]
   477                                         
   478                                             # Setting dimensions of camera images
   479    368.2 MiB      0.0 MiB           1       try:
   480    368.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   481    368.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   482    368.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   483    368.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   484                                             except CameraError:
   485                                                 print("Could not set camera height. Current properties:")
   486                                                 print(F"Height: {blackFly.Height}")
   487                                                 print(F"Width: {blackFly.Width}")
   488                                                 print(F"OffsetX: {blackFly.OffsetX}")
   489                                                 print(F"OffsetY: {blackFly.OffsetY}")
   490                                         
   491                                             #Save camera specs for later use
   492    368.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   493                                             
   494                                             # Queue for processing images
   495    368.8 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   496                                         
   497                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   498    368.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   499    368.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   500                                         
   501    368.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   502                                         
   503    369.0 MiB      0.2 MiB           1       blackFly.start()
   504                                                 
   505    369.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   506    369.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   507    369.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   508    369.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   509    369.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   510    369.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   511                                         
   512    369.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   513    369.0 MiB      0.0 MiB           1       w_start = time.time()
   514    369.0 MiB      0.0 MiB           1       img_process_ready.wait()
   515    369.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   516    369.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   517    369.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   518                                         
   519    369.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   520    369.2 MiB      0.2 MiB           1       im = blackFly.get_array()
   521    369.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   522                                             
   523    369.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   524    370.3 MiB      1.1 MiB           1       img_proc_queue.put([im,0])
   525    370.6 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   526    370.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   527                                         
   528                                         
   529    370.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   530                                             
   531    370.6 MiB      0.0 MiB           1       rec_frames = 1
   532    370.6 MiB      0.0 MiB           1       e = 0
   533    370.6 MiB      0.0 MiB           1       n = 0
   534    370.6 MiB      0.0 MiB           1       n_else = 0
   535    370.6 MiB      0.0 MiB           1       t_start = time.time()
   536                                         
   537    370.6 MiB      0.0 MiB           1       avg_while = 0
   538    370.6 MiB      0.0 MiB           1       t_else_avg = 0
   539                                         
   540    370.6 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   541                                         
   542                                             # Record until user asks for restart or quit
   543    372.1 MiB      0.0 MiB       10172       while cam_recording_ready.is_set():
   544    372.1 MiB      0.0 MiB       10171           t_while_start = time.time()
   545    372.1 MiB      0.0 MiB       10171           try:
   546    372.1 MiB      0.2 MiB       10171               im = blackFly.get_array(False)
   547    372.1 MiB      0.0 MiB       10171               t = time.time()
   548    372.1 MiB      0.0 MiB       10171               rec_frames += 1
   549    372.1 MiB      0.0 MiB       10171               img_proc_queue.put_nowait([im,rec_frames])
   550                                         
   551                                                     """
   552                                                     # These counters count number of triggers and exposures
   553                                                     # of the camera to make sure the FPS is around 500.
   554                                                     # However, introducing this reduces fps to about 400, so 
   555                                                     # only use for debugging.
   556                                         
   557                                                     blackFly.CounterSelector = 'Counter0' 
   558                                                     curr_count[0] = blackFly.CounterValue
   559                                                     
   560                                                     blackFly.CounterSelector = 'Counter1'
   561                                                     curr_count[1] = blackFly.CounterValue
   562                                                     
   563                                                     for i in [0,1]:
   564                                                         if curr_count[i] < counter[i]: 
   565                                                             tot_count[i] += 1
   566                                                         counter[i] = curr_count[i]
   567                                                     """
   568                                                     
   569    372.1 MiB      0.0 MiB       10171               t_while_end = time.time()
   570    372.1 MiB      0.0 MiB       10171               avg_while += t_while_end - t_while_start
   571    372.1 MiB      0.0 MiB       10171               n += 1
   572                                                     
   573                                                 except SpinnakerException:              # If no new frame - pass
   574                                                     e += 1
   575                                                     pass
   576                                                 else:
   577    372.1 MiB      0.0 MiB       10171               t_else_start = time.time()
   578                                                                         # Else we want to show the most recent frame
   579    372.1 MiB      0.0 MiB       10171               try:
   580    372.1 MiB      1.2 MiB       10171                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   581    372.1 MiB      0.0 MiB        9223                   pass
   582    372.1 MiB      0.0 MiB         948               except queue.Empty:                 # Unless it is already been showed
   583    372.1 MiB      0.0 MiB         948                   pass
   584                                                     finally:                            
   585    372.1 MiB      0.0 MiB       10171                   try:
   586    372.1 MiB      0.0 MiB       10171                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   587    372.1 MiB      0.0 MiB         333                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   588    372.1 MiB      0.0 MiB         333                       pass
   589                                                     
   590    372.1 MiB      0.0 MiB       10171               t_else_end = time.time()
   591                                         
   592    372.1 MiB      0.0 MiB       10171               t_else_avg += t_else_end - t_else_start
   593    372.1 MiB      0.0 MiB       10171               n_else += 1
   594                                         
   595                                             
   596    372.1 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.5 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.5 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.5 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.5 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.5 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.5 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.5 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.5 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.5 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.5 MiB      0.0 MiB           1       except CameraError:
   111    362.5 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    362.5 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    362.5 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    362.5 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    362.5 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.1 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.1 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.1 MiB      0.0 MiB           1       w_start = time.time()
   140    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.6 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.6 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.3 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    364.6 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   152    364.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.6 MiB      0.0 MiB           1       rec_frames = 1
   158    364.6 MiB      0.0 MiB           1       e = 0
   159    364.6 MiB      0.0 MiB           1       n = 0
   160    364.6 MiB      0.0 MiB           1       n_else = 0
   161    364.6 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    364.6 MiB      0.0 MiB           1       avg_while = 0
   164    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    364.6 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    364.6 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    364.6 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    364.6 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    366.7 MiB      0.0 MiB       66020       while cam_recording_ready.is_set():
   176    366.7 MiB      0.0 MiB       66019           t_while_start = time.time()
   177    366.7 MiB      0.0 MiB       66019           try:
   178    366.7 MiB      1.1 MiB       66019               im = blackFly.get_array(False)
   179    366.7 MiB      0.0 MiB       66019               t = time.time()
   180    366.7 MiB      0.0 MiB       66019               rec_frames += 1
   181    366.7 MiB      0.0 MiB       66019               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    366.7 MiB      0.0 MiB       66019               t_while_end = time.time()
   202    366.7 MiB      0.0 MiB       66019               avg_while += t_while_end - t_while_start
   203    366.7 MiB      0.0 MiB       66019               n += 1
   204                                                 except SpinnakerException:              # If no new frame - pass
   205                                                     e += 1
   206                                                     pass
   207                                                 else:
   208    366.7 MiB      0.0 MiB       66019               t_else_start = time.time()
   209                                                                         # Else we want to show the most recent frame
   210    366.7 MiB      0.0 MiB       66019               try:
   211    366.7 MiB      1.0 MiB       66019                   _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   212    366.7 MiB      0.0 MiB        5069               except queue.Empty:                 # Unless it is already been showed
   213    366.7 MiB      0.0 MiB        5069                   pass
   214                                                     finally:
   215    366.7 MiB      0.0 MiB       66019                   try:
   216    366.7 MiB      0.0 MiB       66019                       img_show_queue.put_nowait([im,rec_frames, t])
   217    366.7 MiB      0.0 MiB        2316                   except queue.Full:
   218    366.7 MiB      0.0 MiB        2316                       pass
   219                                         
   220    366.7 MiB      0.0 MiB       66019               t_else_end = time.time()
   221                                         
   222    366.7 MiB      0.0 MiB       66019               t_else_avg += t_else_end - t_else_start
   223    366.7 MiB      0.0 MiB       66019               n_else += 1
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.2 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.7 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.7 MiB      0.0 MiB           1       counter = [0,0]
   102    362.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.7 MiB      0.0 MiB           1       try:
   106    362.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.7 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.7 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.7 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.1 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.1 MiB      0.0 MiB           1       w_start = time.time()
   140    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.8 MiB      0.6 MiB           1       im = blackFly.get_array()
   147    363.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.8 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.8 MiB      0.0 MiB           1       rec_frames = 1
   158    364.8 MiB      0.0 MiB           1       e = 0
   159    364.8 MiB      0.0 MiB           1       n = 0
   160    364.8 MiB      0.0 MiB           1       n_else = 0
   161    364.8 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    364.8 MiB      0.0 MiB           1       avg_while = 0
   164    364.8 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    364.8 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    364.8 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    364.8 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    364.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    376.4 MiB   -214.9 MiB      108338       while cam_recording_ready.is_set():
   176    376.4 MiB   -214.9 MiB      108337           t_while_start = time.time()
   177    376.4 MiB   -214.9 MiB      108337           try:
   178    376.4 MiB   -205.0 MiB      108337               im = blackFly.get_array(False)
   179    376.4 MiB   -153.6 MiB       79503               t = time.time()
   180    376.4 MiB   -153.6 MiB       79503               rec_frames += 1
   181    376.4 MiB   -152.2 MiB       79503               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    376.4 MiB   -153.5 MiB       79503               t_while_end = time.time()
   202                                                     
   203                                         
   204    376.4 MiB   -153.5 MiB       79503               try:
   205    376.4 MiB   -153.0 MiB       79503                   img_show_queue.put_nowait([im,rec_frames, t])
   206    376.4 MiB   -148.2 MiB       76133               except queue.Full:
   207    376.4 MiB   -148.2 MiB       76133                   pass
   208                                         
   209    376.4 MiB   -153.7 MiB       79503               avg_while += t_while_end - t_while_start
   210    376.4 MiB   -153.7 MiB       79503               n += 1
   211    376.4 MiB    -61.2 MiB       28834           except SpinnakerException:              # If no new frame - pass
   212    376.4 MiB    -58.5 MiB       28834               e += 1
   213                                                     """
   214                                                     else:
   215                                                         t_else_start = time.time()
   216                                                                             # Else we want to show the most recent frame
   217                                                         try:
   218                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   219                                                         except queue.Empty:                 # Unless it is already been showed
   220                                                             pass
   221                                                         finally:
   222                                                             try:
   223                                                                 img_show_queue.put_nowait([im,rec_frames, t])
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.5 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.0 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.2 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.2 MiB      0.0 MiB           1       w_start = time.time()
   140    363.2 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.6 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.6 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.3 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.3 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.3 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.3 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.3 MiB      0.0 MiB           1       rec_frames = 1
   158    364.3 MiB      0.0 MiB           1       e = 0
   159    364.3 MiB      0.0 MiB           1       n = 0
   160    364.3 MiB      0.0 MiB           1       n_else = 0
   161    364.3 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    364.3 MiB      0.0 MiB           1       avg_while = 0
   164    364.3 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    364.3 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    364.3 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    364.3 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    364.3 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    372.5 MiB    -18.5 MiB       80744       while cam_recording_ready.is_set():
   176    372.5 MiB    -18.5 MiB       80743           t_while_start = time.time()
   177    372.5 MiB    -18.5 MiB       80743           try:
   178    372.5 MiB    -12.1 MiB       80743               im = blackFly.get_array(False)
   179    372.5 MiB    -13.1 MiB       65928               t = time.time()
   180    372.5 MiB    -13.1 MiB       65928               rec_frames += 1
   181    372.5 MiB    -12.2 MiB       65928               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    372.5 MiB    -12.9 MiB       65928               t_while_end = time.time()
   202                                                     
   203                                         
   204    372.5 MiB    -13.2 MiB       65928               try:
   205    372.5 MiB    -12.9 MiB       65928                   img_show_queue.put_nowait([im,rec_frames, t])
   206    372.5 MiB    -12.4 MiB       63634               except queue.Full:
   207    372.5 MiB    -12.6 MiB       63634                   pass
   208                                         
   209    372.5 MiB    -13.1 MiB       65928               avg_while += t_while_end - t_while_start
   210    372.5 MiB    -13.2 MiB       65928               n += 1
   211    372.5 MiB     -5.3 MiB       14815           except SpinnakerException:              # If no new frame - pass
   212    372.5 MiB     -2.7 MiB       14815               e += 1
   213                                                     """
   214                                                     else:
   215                                                         t_else_start = time.time()
   216                                                                             # Else we want to show the most recent frame
   217                                                         try:
   218                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   219                                                         except queue.Empty:                 # Unless it is already been showed
   220                                                             pass
   221                                                         finally:
   222                                                             try:
   223                                                                 img_show_queue.put_nowait([im,rec_frames, t])
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    362.4 MiB     20.7 MiB           1           tmp_cam.init()
    44    361.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    362.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.8 MiB      0.0 MiB           1       counter = [0,0]
   102    362.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.8 MiB      0.0 MiB           1       try:
   106    363.4 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    363.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    363.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    363.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.4 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.4 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.4 MiB      0.0 MiB           1       w_start = time.time()
   140    363.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.7 MiB      0.9 MiB           1       img_proc_queue.put([im,0])
   151    364.9 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.9 MiB      0.0 MiB           1       rec_frames = 1
   158    364.9 MiB      0.0 MiB           1       e = 0
   159    364.9 MiB      0.0 MiB           1       n = 0
   160    364.9 MiB      0.0 MiB           1       n_else = 0
   161    364.9 MiB      0.0 MiB           1       t_start = time.time()
   162    364.9 MiB      0.0 MiB           1       avg_while = 0
   163    364.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.9 MiB      0.0 MiB           1       curr_FPS = []
   165    364.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    385.6 MiB    -48.6 MiB      157754       while cam_recording_ready.is_set():
   171    385.6 MiB    -48.6 MiB      157753           t_while_start = time.time()
   172    385.6 MiB    -48.4 MiB      157753           try:
   173    385.6 MiB    -33.3 MiB      157753               im = blackFly.get_array(False)
   174    385.6 MiB    -32.6 MiB      106588               t = time.time()
   175    385.6 MiB    -32.6 MiB      106588               rec_frames += 1
   176    385.6 MiB    -31.0 MiB      106588               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    385.6 MiB    -30.5 MiB      106588               t_while_end = time.time()
   197                                                     
   198                                         
   199    385.6 MiB    -32.4 MiB      106588               try:
   200    385.6 MiB    -32.4 MiB      106588                   img_show_queue.put_nowait([im,rec_frames, t])
   201    385.6 MiB    -30.1 MiB      102042               except queue.Full:
   202    385.6 MiB    -30.8 MiB      102042                   pass
   203                                         
   204    385.6 MiB    -32.6 MiB      106588               avg_while += t_while_end - t_while_start
   205    385.6 MiB    -32.6 MiB      106588               n += 1
   206    385.6 MiB    -15.3 MiB       51165           except SpinnakerException:              # If no new frame - pass
   207    385.6 MiB    -16.0 MiB       51165               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    385.6 MiB    -16.1 MiB       51165               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.4 MiB      0.0 MiB           1       counter = [0,0]
   102    362.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.4 MiB      0.0 MiB           1       try:
   106    362.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.0 MiB      0.6 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.0 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.3 MiB      0.3 MiB           1       blackFly.start()
   130                                                 
   131    363.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.3 MiB      0.0 MiB           1       w_start = time.time()
   140    363.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.7 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.6 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    364.8 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.8 MiB      0.0 MiB           1       rec_frames = 1
   158    364.8 MiB      0.0 MiB           1       e = 0
   159    364.8 MiB      0.0 MiB           1       n = 0
   160    364.8 MiB      0.0 MiB           1       n_else = 0
   161    364.8 MiB      0.0 MiB           1       t_start = time.time()
   162    364.8 MiB      0.0 MiB           1       avg_while = 0
   163    364.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.8 MiB      0.0 MiB           1       curr_FPS = []
   165    364.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    374.2 MiB   -237.4 MiB       65086       while cam_recording_ready.is_set():
   171    374.2 MiB   -237.4 MiB       65085           t_while_start = time.time()
   172    374.2 MiB   -237.4 MiB       65085           try:
   173    374.2 MiB   -231.0 MiB       65085               im = blackFly.get_array(False)
   174    374.2 MiB   -160.1 MiB       44162               t = time.time()
   175    374.2 MiB   -160.1 MiB       44162               rec_frames += 1
   176    374.2 MiB   -157.8 MiB       44162               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    374.2 MiB   -160.1 MiB       44162               t_while_end = time.time()
   197                                                     
   198                                         
   199    374.2 MiB   -154.1 MiB       44162               try:
   200    374.2 MiB   -154.1 MiB       44162                   img_show_queue.put_nowait([im,rec_frames, t])
   201    374.2 MiB   -149.1 MiB       42789               except queue.Full:
   202    374.2 MiB   -149.2 MiB       42789                   pass
   203                                         
   204    374.2 MiB   -154.2 MiB       44162               avg_while += t_while_end - t_while_start
   205    374.2 MiB   -154.4 MiB       44162               n += 1
   206    374.2 MiB    -77.2 MiB       20923           except SpinnakerException:              # If no new frame - pass
   207    374.2 MiB    -77.2 MiB       20923               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    374.2 MiB    -77.2 MiB       20923               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.4 MiB      0.4 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.4 MiB      0.0 MiB           1       counter = [0,0]
   102    362.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.4 MiB      0.0 MiB           1       try:
   106    362.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.2 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    396.2 MiB   -530.0 MiB      264232       while cam_recording_ready.is_set():
   171    396.2 MiB   -530.0 MiB      264231           t_while_start = time.time()
   172    396.2 MiB   -530.0 MiB      264231           try:
   173    396.2 MiB   -503.5 MiB      264231               im = blackFly.get_array(False)
   174    396.2 MiB   -352.1 MiB      181096               t = time.time()
   175    396.2 MiB   -352.3 MiB      181096               rec_frames += 1
   176    396.2 MiB   -346.5 MiB      181096               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    396.2 MiB   -355.3 MiB      181096               t_while_end = time.time()
   197                                                     
   198                                         
   199    396.2 MiB   -349.9 MiB      181096               try:
   200    396.2 MiB   -348.2 MiB      181096                   img_show_queue.put_nowait([im,rec_frames, t])
   201    396.2 MiB   -342.9 MiB      173577               except queue.Full:
   202    396.2 MiB   -333.0 MiB      173577                   pass
   203                                         
   204    396.2 MiB   -347.4 MiB      181096               avg_while += t_while_end - t_while_start
   205    396.2 MiB   -352.6 MiB      181096               n += 1
   206    396.2 MiB   -177.4 MiB       83135           except SpinnakerException:              # If no new frame - pass
   207    396.2 MiB   -173.4 MiB       83135               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    396.2 MiB   -173.5 MiB       83135               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    362.1 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.9 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.6 MiB      0.0 MiB           1       counter = [0,0]
   102    362.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.6 MiB      0.0 MiB           1       try:
   106    362.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.6 MiB      0.0 MiB           1       except CameraError:
   111    362.6 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    363.2 MiB      0.6 MiB           1           print(F"Height: {blackFly.Height}")
   113    363.2 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    363.2 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    363.2 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.2 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.4 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.4 MiB      0.0 MiB           1       w_start = time.time()
   140    363.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.5 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.7 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.7 MiB      0.0 MiB           1       rec_frames = 1
   158    364.7 MiB      0.0 MiB           1       e = 0
   159    364.7 MiB      0.0 MiB           1       n = 0
   160    364.7 MiB      0.0 MiB           1       n_else = 0
   161    364.7 MiB      0.0 MiB           1       t_start = time.time()
   162    364.7 MiB      0.0 MiB           1       avg_while = 0
   163    364.7 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.7 MiB      0.0 MiB           1       curr_FPS = []
   165    364.7 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.7 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.7 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    377.5 MiB   -753.0 MiB      104334       while cam_recording_ready.is_set():
   171    377.5 MiB   -753.1 MiB      104333           t_while_start = time.time()
   172    377.5 MiB   -753.1 MiB      104333           try:
   173    377.5 MiB   -743.4 MiB      104333               im = blackFly.get_array(False)
   174    377.5 MiB   -544.8 MiB       76368               t = time.time()
   175    377.5 MiB   -544.9 MiB       76368               rec_frames += 1
   176    377.5 MiB   -542.2 MiB       76368               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    377.5 MiB   -544.9 MiB       76368               t_while_end = time.time()
   197                                                     
   198                                         
   199    377.5 MiB   -544.9 MiB       76368               try:
   200    377.5 MiB   -544.5 MiB       76368                   img_show_queue.put_nowait([im,rec_frames, t])
   201    377.5 MiB   -514.4 MiB       72258               except queue.Full:
   202    377.5 MiB   -514.4 MiB       72258                   pass
   203                                         
   204    377.5 MiB   -545.1 MiB       76368               avg_while += t_while_end - t_while_start
   205    377.5 MiB   -545.1 MiB       76368               n += 1
   206    377.5 MiB   -207.9 MiB       27965           except SpinnakerException:              # If no new frame - pass
   207    377.5 MiB   -205.3 MiB       27965               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    377.5 MiB   -205.3 MiB       27965               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.5 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.5 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.5 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.5 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.5 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.5 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.5 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.5 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.5 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    363.1 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    363.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    363.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    363.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.1 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.1 MiB      0.0 MiB           1       w_start = time.time()
   140    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.8 MiB      0.6 MiB           1       im = blackFly.get_array()
   147    363.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.4 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.6 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.6 MiB      0.0 MiB           1       rec_frames = 1
   158    364.6 MiB      0.0 MiB           1       e = 0
   159    364.6 MiB      0.0 MiB           1       n = 0
   160    364.6 MiB      0.0 MiB           1       n_else = 0
   161    364.6 MiB      0.0 MiB           1       t_start = time.time()
   162    364.6 MiB      0.0 MiB           1       avg_while = 0
   163    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.6 MiB      0.0 MiB           1       curr_FPS = []
   165    364.6 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.6 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.6 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    405.2 MiB -100581.3 MiB      335092       while cam_recording_ready.is_set():
   171    405.2 MiB -100583.1 MiB      335091           t_while_start = time.time()
   172    405.2 MiB -100583.1 MiB      335091           try:
   173    405.2 MiB -100543.2 MiB      335091               im = blackFly.get_array(False)
   174    405.2 MiB -71325.7 MiB      233693               t = time.time()
   175    405.2 MiB -71325.6 MiB      233693               rec_frames += 1
   176    405.2 MiB -71320.4 MiB      233693               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    405.2 MiB -71323.8 MiB      233693               t_while_end = time.time()
   197                                                     
   198                                         
   199    405.2 MiB -71328.8 MiB      233693               try:
   200    405.2 MiB -71328.0 MiB      233693                   img_show_queue.put_nowait([im,rec_frames, t])
   201    405.2 MiB -68916.4 MiB      226966               except queue.Full:
   202    405.2 MiB -68916.4 MiB      226966                   pass
   203                                         
   204    405.2 MiB -71329.5 MiB      233693               avg_while += t_while_end - t_while_start
   205    405.2 MiB -71329.5 MiB      233693               n += 1
   206    405.2 MiB -29253.6 MiB      101398           except SpinnakerException:              # If no new frame - pass
   207    405.2 MiB -29250.9 MiB      101398               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    405.2 MiB -29250.9 MiB      101398               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.9 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.3 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.3 MiB      0.0 MiB           1       counter = [0,0]
   102    362.3 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.3 MiB      0.0 MiB           1       try:
   106    362.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.9 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.9 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.9 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.4 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.8 MiB      0.4 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.6 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    364.8 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.8 MiB      0.0 MiB           1       rec_frames = 1
   158    364.8 MiB      0.0 MiB           1       e = 0
   159    364.8 MiB      0.0 MiB           1       n = 0
   160    364.8 MiB      0.0 MiB           1       n_else = 0
   161    364.8 MiB      0.0 MiB           1       t_start = time.time()
   162    364.8 MiB      0.0 MiB           1       avg_while = 0
   163    364.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.8 MiB      0.0 MiB           1       curr_FPS = []
   165    364.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    402.2 MiB -169568.6 MiB      375621       while cam_recording_ready.is_set():
   171    402.2 MiB -169573.7 MiB      375620           t_while_start = time.time()
   172    402.2 MiB -169573.7 MiB      375620           try:
   173    402.2 MiB -169535.4 MiB      375620               im = blackFly.get_array(False)
   174    402.2 MiB -117441.9 MiB      278664               t = time.time()
   175    402.2 MiB -117441.9 MiB      278664               rec_frames += 1
   176    402.2 MiB -117435.8 MiB      278664               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    402.2 MiB -117437.7 MiB      278664               t_while_end = time.time()
   197                                                     
   198                                         
   199    402.2 MiB -117437.8 MiB      278664               try:
   200    402.2 MiB -117435.7 MiB      278664                   img_show_queue.put_nowait([im,rec_frames, t])
   201    402.2 MiB -114148.1 MiB      270231               except queue.Full:
   202    402.2 MiB -114148.4 MiB      270231                   pass
   203                                         
   204    402.2 MiB -117441.2 MiB      278664               avg_while += t_while_end - t_while_start
   205    402.2 MiB -117441.2 MiB      278664               n += 1
   206    402.2 MiB -52132.4 MiB       96956           except SpinnakerException:              # If no new frame - pass
   207    402.2 MiB -45840.7 MiB       96956               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.4 MiB      0.0 MiB           1       counter = [0,0]
   102    362.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.4 MiB      0.0 MiB           1       try:
   106    362.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.0 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.1 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.1 MiB      0.0 MiB           1       w_start = time.time()
   140    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.1 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.3 MiB      0.3 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.3 MiB      0.0 MiB           1       rec_frames = 1
   158    364.3 MiB      0.0 MiB           1       e = 0
   159    364.3 MiB      0.0 MiB           1       n = 0
   160    364.3 MiB      0.0 MiB           1       n_else = 0
   161    364.3 MiB      0.0 MiB           1       t_start = time.time()
   162    364.3 MiB      0.0 MiB           1       avg_while = 0
   163    364.3 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.3 MiB      0.0 MiB           1       curr_FPS = []
   165    364.3 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.3 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.3 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    391.7 MiB -325840.5 MiB      256453       while cam_recording_ready.is_set():
   171    391.7 MiB -325847.5 MiB      256452           t_while_start = time.time()
   172    391.7 MiB -325853.1 MiB      256452           try:
   173    391.7 MiB -325820.9 MiB      256452               im = blackFly.get_array(False)
   174    391.7 MiB -236495.6 MiB      186867               t = time.time()
   175    391.7 MiB -236495.3 MiB      186867               rec_frames += 1
   176    391.7 MiB -236489.5 MiB      186867               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    391.7 MiB -236492.6 MiB      186867               t_while_end = time.time()
   197                                                     
   198                                         
   199    391.7 MiB -236498.1 MiB      186867               try:
   200    391.7 MiB -236496.8 MiB      186867                   img_show_queue.put_nowait([im,rec_frames, t])
   201    391.7 MiB -229498.0 MiB      180553               except queue.Full:
   202    391.7 MiB -229498.5 MiB      180553                   pass
   203                                         
   204    391.7 MiB -236500.4 MiB      186867               avg_while += t_while_end - t_while_start
   205    391.7 MiB -236500.5 MiB      186867               n += 1
   206    391.2 MiB -89347.5 MiB       69585           except SpinnakerException:              # If no new frame - pass
   207    391.2 MiB -33526.7 MiB       69585               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.2 MiB           1           tmp_cam = Camera()
    43    362.1 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.5 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.5 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.5 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.5 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.5 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.5 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.5 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.5 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.5 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    363.1 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    363.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    363.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    363.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.2 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.2 MiB      0.0 MiB           1       w_start = time.time()
   140    363.2 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.6 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.6 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.6 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.4 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.6 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.6 MiB      0.0 MiB           1       rec_frames = 1
   158    364.6 MiB      0.0 MiB           1       e = 0
   159    364.6 MiB      0.0 MiB           1       n = 0
   160    364.6 MiB      0.0 MiB           1       n_else = 0
   161    364.6 MiB      0.0 MiB           1       t_start = time.time()
   162    364.6 MiB      0.0 MiB           1       avg_while = 0
   163    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.6 MiB      0.0 MiB           1       curr_FPS = []
   165    364.6 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.6 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.6 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    417.1 MiB -37585.7 MiB      487254       while cam_recording_ready.is_set():
   171    417.1 MiB -37585.7 MiB      487253           t_while_start = time.time()
   172    417.1 MiB -37585.7 MiB      487253           try:
   173    417.1 MiB -37536.6 MiB      487253               im = blackFly.get_array(False)
   174    417.1 MiB -27996.0 MiB      352229               t = time.time()
   175    417.1 MiB -27996.0 MiB      352229               rec_frames += 1
   176    417.1 MiB -27987.0 MiB      352229               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    417.1 MiB -27993.0 MiB      352229               t_while_end = time.time()
   197                                                     
   198                                         
   199    417.1 MiB -27993.3 MiB      352229               try:
   200    417.1 MiB -27990.8 MiB      352229                   img_show_queue.put_nowait([im,rec_frames, t])
   201    417.1 MiB -27266.0 MiB      342000               except queue.Full:
   202    417.1 MiB -27266.2 MiB      342000                   pass
   203                                         
   204    417.1 MiB -28001.3 MiB      352229               avg_while += t_while_end - t_while_start
   205    417.1 MiB -28001.3 MiB      352229               n += 1
   206    417.1 MiB  -9584.3 MiB      135024           except SpinnakerException:              # If no new frame - pass
   207    417.1 MiB  -5941.0 MiB      135024               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    417.1 MiB  -5941.0 MiB      135024               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.0 MiB    317.0 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.0 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.2 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.2 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.2 MiB      0.0 MiB           1       try:
    42    341.0 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.4 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.7 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.3 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.0 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.6 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.0 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.0 MiB      0.0 MiB           1       rec_frames = 1
   158    364.0 MiB      0.0 MiB           1       e = 0
   159    364.0 MiB      0.0 MiB           1       n = 0
   160    364.0 MiB      0.0 MiB           1       n_else = 0
   161    364.0 MiB      0.0 MiB           1       t_start = time.time()
   162    364.0 MiB      0.0 MiB           1       avg_while = 0
   163    364.0 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.0 MiB      0.0 MiB           1       curr_FPS = []
   165    364.0 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.0 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.0 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    393.3 MiB   -395.6 MiB      238648       while cam_recording_ready.is_set():
   171    393.3 MiB   -395.6 MiB      238647           t_while_start = time.time()
   172    393.3 MiB   -395.6 MiB      238647           try:
   173    393.3 MiB   -372.6 MiB      238647               im = blackFly.get_array(False)
   174    393.3 MiB   -265.3 MiB      162673               t = time.time()
   175    393.3 MiB   -265.1 MiB      162673               rec_frames += 1
   176    393.3 MiB   -261.2 MiB      162673               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    393.3 MiB   -270.5 MiB      162673               t_while_end = time.time()
   197                                                     
   198                                         
   199    393.3 MiB   -264.6 MiB      162673               try:
   200    393.3 MiB   -262.8 MiB      162673                   img_show_queue.put_nowait([im,rec_frames, t])
   201    393.3 MiB   -253.7 MiB      155867               except queue.Full:
   202    393.3 MiB   -248.5 MiB      155867                   pass
   203                                         
   204    393.3 MiB   -259.7 MiB      162673               avg_while += t_while_end - t_while_start
   205    393.3 MiB   -259.5 MiB      162673               n += 1
   206    393.3 MiB   -130.1 MiB       75974           except SpinnakerException:              # If no new frame - pass
   207    393.3 MiB   -130.1 MiB       75974               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    393.3 MiB   -129.9 MiB       75974               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    316.9 MiB    316.9 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    316.9 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.0 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.1 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.1 MiB      0.0 MiB           1       try:
    42    340.7 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.6 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    362.4 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    372.8 MiB   -310.0 MiB       64615       while cam_recording_ready.is_set():
   171    372.8 MiB   -310.0 MiB       64614           t_while_start = time.time()
   172    372.8 MiB   -310.0 MiB       64614           try:
   173    372.8 MiB   -304.2 MiB       64614               im = blackFly.get_array(False)
   174    372.8 MiB   -209.2 MiB       43573               t = time.time()
   175    372.8 MiB   -209.2 MiB       43573               rec_frames += 1
   176    372.8 MiB   -207.0 MiB       43573               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    372.8 MiB   -209.0 MiB       43573               t_while_end = time.time()
   197                                                     
   198                                         
   199    372.8 MiB   -208.9 MiB       43573               try:
   200    372.8 MiB   -208.6 MiB       43573                   img_show_queue.put_nowait([im,rec_frames, t])
   201    372.8 MiB   -197.4 MiB       41262               except queue.Full:
   202    372.8 MiB   -197.4 MiB       41262                   pass
   203                                         
   204    372.8 MiB   -209.2 MiB       43573               avg_while += t_while_end - t_while_start
   205    372.8 MiB   -209.2 MiB       43573               n += 1
   206    372.8 MiB   -100.5 MiB       21041           except SpinnakerException:              # If no new frame - pass
   207    372.8 MiB    -95.4 MiB       21041               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    372.8 MiB    -95.4 MiB       21041               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    316.8 MiB    316.8 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    316.8 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.0 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.0 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.0 MiB      0.0 MiB           1       try:
    42    340.9 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.3 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.6 MiB      0.0 MiB           1       counter = [0,0]
   102    361.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.6 MiB      0.0 MiB           1       try:
   106    361.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.3 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.3 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.3 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.5 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    407.2 MiB  -1851.7 MiB      351951       while cam_recording_ready.is_set():
   171    407.2 MiB  -1851.7 MiB      351950           t_while_start = time.time()
   172    407.2 MiB  -1851.7 MiB      351950           try:
   173    407.2 MiB  -1814.7 MiB      351950               im = blackFly.get_array(False)
   174    407.2 MiB  -1464.0 MiB      241851               t = time.time()
   175    407.2 MiB  -1464.1 MiB      241851               rec_frames += 1
   176    407.2 MiB  -1456.8 MiB      241851               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    407.2 MiB  -1482.8 MiB      241851               t_while_end = time.time()
   197                                                     
   198                                         
   199    407.2 MiB  -1483.0 MiB      241851               try:
   200    407.2 MiB  -1480.4 MiB      241851                   img_show_queue.put_nowait([im,rec_frames, t])
   201    407.2 MiB  -1389.2 MiB      231548               except queue.Full:
   202    407.2 MiB  -1365.6 MiB      231548                   pass
   203                                         
   204    407.2 MiB  -1451.3 MiB      241851               avg_while += t_while_end - t_while_start
   205    407.2 MiB  -1454.9 MiB      241851               n += 1
   206    407.2 MiB   -386.7 MiB      110099           except SpinnakerException:              # If no new frame - pass
   207    407.2 MiB   -256.1 MiB      110099               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    407.2 MiB   -256.1 MiB      110099               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.2 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    361.8 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.4 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.4 MiB      0.0 MiB           1       w_start = time.time()
   140    362.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.9 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    491.9 MiB -110181.7 MiB     1358134       while cam_recording_ready.is_set():
   171    491.9 MiB -110182.0 MiB     1358133           t_while_start = time.time()
   172    491.9 MiB -110182.3 MiB     1358133           try:
   173    491.9 MiB -110061.0 MiB     1358133               im = blackFly.get_array(False)
   174    491.9 MiB -80406.5 MiB     1010634               t = time.time()
   175    491.9 MiB -80400.0 MiB     1010634               rec_frames += 1
   176    491.9 MiB -80384.7 MiB     1010634               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    491.9 MiB -80391.0 MiB     1010634               t_while_end = time.time()
   197                                                     
   198                                         
   199    491.9 MiB -80391.6 MiB     1010634               try:
   200    491.9 MiB -80386.0 MiB     1010634                   img_show_queue.put_nowait([im,rec_frames, t])
   201    491.9 MiB -78164.4 MiB      981349               except queue.Full:
   202    491.9 MiB -78159.2 MiB      981349                   pass
   203                                         
   204    491.9 MiB -80395.4 MiB     1010634               avg_while += t_while_end - t_while_start
   205    491.9 MiB -80395.1 MiB     1010634               n += 1
   206    491.9 MiB -29777.8 MiB      347499           except SpinnakerException:              # If no new frame - pass
   207    491.9 MiB -13758.4 MiB      347499               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    491.9 MiB -13758.4 MiB      347499               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.3 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.3 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.5 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.1 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.7 MiB      0.6 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.7 MiB      0.0 MiB           1       rec_frames = 1
   158    363.7 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.2 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    371.8 MiB     -0.2 MiB       48027       while cam_recording_ready.is_set():
   171    371.8 MiB     -0.2 MiB       48026           t_while_start = time.time()
   172    371.8 MiB      0.1 MiB       48026           try:
   173    371.8 MiB      5.0 MiB       48026               im = blackFly.get_array(False)
   174    371.8 MiB     -0.2 MiB       32437               t = time.time()
   175    371.8 MiB     -0.2 MiB       32437               rec_frames += 1
   176    371.8 MiB      1.7 MiB       32437               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    371.8 MiB     -0.0 MiB       32437               t_while_end = time.time()
   197                                                     
   198                                         
   199    371.8 MiB      0.2 MiB       32437               try:
   200    371.8 MiB      0.4 MiB       32437                   img_show_queue.put_nowait([im,rec_frames, t])
   201    371.8 MiB     -0.1 MiB       30580               except queue.Full:
   202    371.8 MiB     -0.2 MiB       30580                   pass
   203                                         
   204    371.8 MiB     -0.2 MiB       32437               avg_while += t_while_end - t_while_start
   205    371.8 MiB     -0.2 MiB       32437               n += 1
   206    371.8 MiB     -0.0 MiB       15589           except SpinnakerException:              # If no new frame - pass
   207    371.8 MiB     -0.0 MiB       15589               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    371.8 MiB     -0.0 MiB       15589               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.0 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.4 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.9 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.9 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.2 MiB           1       im = blackFly.get_array()
   147    363.6 MiB      0.4 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.3 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.5 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.5 MiB      0.0 MiB           1       rec_frames = 1
   158    364.5 MiB      0.0 MiB           1       e = 0
   159    364.5 MiB      0.0 MiB           1       n = 0
   160    364.5 MiB      0.0 MiB           1       n_else = 0
   161    364.5 MiB      0.0 MiB           1       t_start = time.time()
   162    364.5 MiB      0.0 MiB           1       avg_while = 0
   163    364.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.5 MiB      0.0 MiB           1       curr_FPS = []
   165    364.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    550.1 MiB  -3628.5 MiB     1576429       while cam_recording_ready.is_set():
   171    550.1 MiB  -3628.7 MiB     1576428           t_while_start = time.time()
   172    550.1 MiB  -3628.6 MiB     1576428           try:
   173    550.1 MiB  -3464.1 MiB     1576428               im = blackFly.get_array(False)
   174    550.1 MiB  -2418.0 MiB     1065354               t = time.time()
   175    550.1 MiB  -2411.3 MiB     1065354               rec_frames += 1
   176    550.1 MiB  -2393.8 MiB     1065354               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    550.1 MiB  -2407.4 MiB     1065354               t_while_end = time.time()
   197                                                     
   198                                         
   199    550.1 MiB  -2408.0 MiB     1065354               try:
   200    550.1 MiB  -2401.2 MiB     1065354                   img_show_queue.put_nowait([im,rec_frames, t])
   201    550.1 MiB  -2328.3 MiB     1027051               except queue.Full:
   202    550.1 MiB  -2314.0 MiB     1027051                   pass
   203                                         
   204    550.1 MiB  -2398.6 MiB     1065354               avg_while += t_while_end - t_while_start
   205    550.1 MiB  -2398.0 MiB     1065354               n += 1
   206    550.1 MiB  -1218.0 MiB      511074           except SpinnakerException:              # If no new frame - pass
   207    550.1 MiB  -1204.4 MiB      511074               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    550.1 MiB  -1204.4 MiB      511074               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.4 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.8 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    370.1 MiB   -119.8 MiB       35653       while cam_recording_ready.is_set():
   171    370.1 MiB   -119.9 MiB       35652           t_while_start = time.time()
   172    370.1 MiB   -119.9 MiB       35652           try:
   173    370.1 MiB   -115.0 MiB       35652               im = blackFly.get_array(False)
   174    370.1 MiB    -82.2 MiB       24281               t = time.time()
   175    370.1 MiB    -82.2 MiB       24281               rec_frames += 1
   176    370.1 MiB    -81.5 MiB       24281               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    370.1 MiB    -82.2 MiB       24281               t_while_end = time.time()
   197                                                     
   198                                         
   199    370.1 MiB    -82.2 MiB       24281               try:
   200    370.1 MiB    -82.2 MiB       24281                   img_show_queue.put_nowait([im,rec_frames, t])
   201    370.1 MiB    -78.1 MiB       22949               except queue.Full:
   202    370.1 MiB    -78.1 MiB       22949                   pass
   203                                         
   204    370.1 MiB    -82.1 MiB       24281               avg_while += t_while_end - t_while_start
   205    370.1 MiB    -82.3 MiB       24281               n += 1
   206    370.1 MiB    -37.6 MiB       11371           except SpinnakerException:              # If no new frame - pass
   207    370.1 MiB    -37.6 MiB       11371               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    370.1 MiB    -37.6 MiB       11371               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.9 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.3 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.3 MiB      0.0 MiB           1       counter = [0,0]
   102    362.3 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.3 MiB      0.0 MiB           1       try:
   106    362.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.9 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.4 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.4 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.4 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.4 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.7 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.2 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    506.6 MiB  -2968.0 MiB     1145567       while cam_recording_ready.is_set():
   171    506.6 MiB  -2968.1 MiB     1145566           t_while_start = time.time()
   172    506.6 MiB  -2968.3 MiB     1145566           try:
   173    506.6 MiB  -2843.1 MiB     1145566               im = blackFly.get_array(False)
   174    506.6 MiB  -1911.3 MiB      753401               t = time.time()
   175    506.6 MiB  -1910.8 MiB      753401               rec_frames += 1
   176    506.6 MiB  -1895.0 MiB      753401               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    506.6 MiB  -1907.1 MiB      753401               t_while_end = time.time()
   197                                                     
   198                                         
   199    506.6 MiB  -1908.0 MiB      753401               try:
   200    506.6 MiB  -1903.2 MiB      753401                   img_show_queue.put_nowait([im,rec_frames, t])
   201    506.6 MiB  -1845.2 MiB      726130               except queue.Full:
   202    506.6 MiB  -1845.4 MiB      726130                   pass
   203                                         
   204    506.6 MiB  -1912.8 MiB      753401               avg_while += t_while_end - t_while_start
   205    506.6 MiB  -1912.8 MiB      753401               n += 1
   206    506.6 MiB  -1055.5 MiB      392165           except SpinnakerException:              # If no new frame - pass
   207    506.6 MiB  -1047.3 MiB      392165               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    506.6 MiB  -1047.3 MiB      392165               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.1 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.2 MiB      0.0 MiB       10740       while cam_recording_ready.is_set():
   171    368.2 MiB      0.0 MiB       10739           t_while_start = time.time()
   172    368.2 MiB      0.0 MiB       10739           try:
   173    368.2 MiB      3.3 MiB       10739               im = blackFly.get_array(False)
   174    368.2 MiB      0.0 MiB        7487               t = time.time()
   175    368.2 MiB      0.0 MiB        7487               rec_frames += 1
   176    368.2 MiB      0.6 MiB        7487               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.2 MiB      0.0 MiB        7487               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.2 MiB      0.0 MiB        7487               try:
   200    368.2 MiB      0.0 MiB        7487                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.2 MiB      0.0 MiB        7159               except queue.Full:
   202    368.2 MiB      0.0 MiB        7159                   pass
   203                                         
   204    368.2 MiB      0.0 MiB        7487               avg_while += t_while_end - t_while_start
   205    368.2 MiB      0.0 MiB        7487               n += 1
   206    368.2 MiB      0.0 MiB        3252           except SpinnakerException:              # If no new frame - pass
   207    368.2 MiB      0.0 MiB        3252               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.2 MiB      0.0 MiB        3252               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.3 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.7 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.7 MiB      0.0 MiB           1       counter = [0,0]
   102    362.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.7 MiB      0.0 MiB           1       try:
   106    362.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.7 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.7 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.7 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.1 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.1 MiB      0.0 MiB           1       w_start = time.time()
   140    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.4 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.4 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.4 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.4 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   151    364.6 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.6 MiB      0.0 MiB           1       rec_frames = 1
   158    364.6 MiB      0.0 MiB           1       e = 0
   159    364.6 MiB      0.0 MiB           1       n = 0
   160    364.6 MiB      0.0 MiB           1       n_else = 0
   161    364.6 MiB      0.0 MiB           1       t_start = time.time()
   162    364.6 MiB      0.0 MiB           1       avg_while = 0
   163    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.6 MiB      0.0 MiB           1       curr_FPS = []
   165    364.6 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.6 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.6 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    681.8 MiB  -6285.1 MiB     2741368       while cam_recording_ready.is_set():
   171    681.8 MiB  -6285.4 MiB     2741367           t_while_start = time.time()
   172    681.8 MiB  -6285.4 MiB     2741367           try:
   173    681.8 MiB  -6001.7 MiB     2741367               im = blackFly.get_array(False)
   174    681.8 MiB  -4194.6 MiB     1860000               t = time.time()
   175    681.8 MiB  -4195.3 MiB     1860000               rec_frames += 1
   176    681.8 MiB  -4162.7 MiB     1860000               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    681.8 MiB  -4199.0 MiB     1860000               t_while_end = time.time()
   197                                                     
   198                                         
   199    681.8 MiB  -4200.5 MiB     1860000               try:
   200    681.8 MiB  -4188.3 MiB     1860000                   img_show_queue.put_nowait([im,rec_frames, t])
   201    681.8 MiB  -4100.9 MiB     1812255               except queue.Full:
   202    681.8 MiB  -4069.2 MiB     1812255                   pass
   203                                         
   204    681.8 MiB  -4176.4 MiB     1860000               avg_while += t_while_end - t_while_start
   205    681.8 MiB  -4187.2 MiB     1860000               n += 1
   206    681.8 MiB  -2087.0 MiB      881367           except SpinnakerException:              # If no new frame - pass
   207    681.8 MiB  -2017.9 MiB      881367               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    681.8 MiB  -2017.9 MiB      881367               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    340.6 MiB     23.2 MiB           1           tmp_cam = Camera()
    43    361.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    360.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.7 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.4 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.4 MiB      0.0 MiB           1       counter = [0,0]
   102    361.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.4 MiB      0.0 MiB           1       try:
   106    361.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.0 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.1 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.1 MiB      0.0 MiB           1       w_start = time.time()
   140    362.1 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.5 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.5 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.7 MiB      1.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.7 MiB      0.0 MiB           1       rec_frames = 1
   158    363.7 MiB      0.0 MiB           1       e = 0
   159    363.7 MiB      0.0 MiB           1       n = 0
   160    363.7 MiB      0.0 MiB           1       n_else = 0
   161    363.7 MiB      0.0 MiB           1       t_start = time.time()
   162    363.7 MiB      0.0 MiB           1       avg_while = 0
   163    363.7 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.7 MiB      0.0 MiB           1       curr_FPS = []
   165    363.7 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.7 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.7 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    369.0 MiB   -103.4 MiB       35356       while cam_recording_ready.is_set():
   171    368.7 MiB   -103.4 MiB       35355           t_while_start = time.time()
   172    368.7 MiB   -103.4 MiB       35355           try:
   173    368.7 MiB    -99.8 MiB       35355               im = blackFly.get_array(False)
   174    368.7 MiB    -72.2 MiB       24045               t = time.time()
   175    368.7 MiB    -72.3 MiB       24045               rec_frames += 1
   176    369.0 MiB    -71.0 MiB       24045               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    369.0 MiB    -72.2 MiB       24045               t_while_end = time.time()
   197                                                     
   198                                         
   199    369.0 MiB    -72.2 MiB       24045               try:
   200    369.0 MiB    -72.0 MiB       24045                   img_show_queue.put_nowait([im,rec_frames, t])
   201    369.0 MiB    -67.7 MiB       22548               except queue.Full:
   202    369.0 MiB    -67.9 MiB       22548                   pass
   203                                         
   204    369.0 MiB    -72.3 MiB       24045               avg_while += t_while_end - t_while_start
   205    369.0 MiB    -72.3 MiB       24045               n += 1
   206    368.7 MiB    -31.1 MiB       11310           except SpinnakerException:              # If no new frame - pass
   207    368.7 MiB    -31.1 MiB       11310               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.7 MiB    -31.1 MiB       11310               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.6 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.8 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.8 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.9 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.9 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.9 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.9 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.9 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.9 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.9 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.9 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.9 MiB      0.0 MiB           1       w_start = time.time()
   140    362.9 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.9 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.5 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    364.4 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.4 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.0 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    450.0 MiB  -1438.3 MiB      712646       while cam_recording_ready.is_set():
   171    450.0 MiB  -1438.4 MiB      712645           t_while_start = time.time()
   172    450.0 MiB  -1438.4 MiB      712645           try:
   173    450.0 MiB  -1366.0 MiB      712645               im = blackFly.get_array(False)
   174    450.0 MiB   -953.8 MiB      479586               t = time.time()
   175    450.0 MiB   -953.7 MiB      479586               rec_frames += 1
   176    450.0 MiB   -943.7 MiB      479586               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    450.0 MiB   -958.8 MiB      479586               t_while_end = time.time()
   197                                                     
   198                                         
   199    450.0 MiB   -958.6 MiB      479586               try:
   200    450.0 MiB   -955.3 MiB      479586                   img_show_queue.put_nowait([im,rec_frames, t])
   201    450.0 MiB   -919.5 MiB      461308               except queue.Full:
   202    450.0 MiB   -909.2 MiB      461308                   pass
   203                                         
   204    450.0 MiB   -944.6 MiB      479586               avg_while += t_while_end - t_while_start
   205    450.0 MiB   -949.4 MiB      479586               n += 1
   206    450.0 MiB   -483.9 MiB      233059           except SpinnakerException:              # If no new frame - pass
   207    450.0 MiB   -481.1 MiB      233059               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    450.0 MiB   -481.2 MiB      233059               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.0 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.4 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.0 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.0 MiB      0.0 MiB           1       rec_frames = 1
   158    364.0 MiB      0.0 MiB           1       e = 0
   159    364.0 MiB      0.0 MiB           1       n = 0
   160    364.0 MiB      0.0 MiB           1       n_else = 0
   161    364.0 MiB      0.0 MiB           1       t_start = time.time()
   162    364.0 MiB      0.0 MiB           1       avg_while = 0
   163    364.0 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.0 MiB      0.0 MiB           1       curr_FPS = []
   165    364.0 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.0 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.0 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    414.8 MiB  -1091.3 MiB      449909       while cam_recording_ready.is_set():
   171    414.8 MiB  -1091.3 MiB      449908           t_while_start = time.time()
   172    414.8 MiB  -1091.3 MiB      449908           try:
   173    414.8 MiB  -1047.1 MiB      449908               im = blackFly.get_array(False)
   174    414.8 MiB   -754.4 MiB      313245               t = time.time()
   175    414.8 MiB   -754.4 MiB      313245               rec_frames += 1
   176    414.8 MiB   -748.4 MiB      313245               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    414.8 MiB   -753.0 MiB      313245               t_while_end = time.time()
   197                                                     
   198                                         
   199    414.8 MiB   -746.6 MiB      313245               try:
   200    414.8 MiB   -744.3 MiB      313245                   img_show_queue.put_nowait([im,rec_frames, t])
   201    414.8 MiB   -721.9 MiB      299793               except queue.Full:
   202    414.8 MiB   -715.8 MiB      299793                   pass
   203                                         
   204    414.8 MiB   -748.7 MiB      313245               avg_while += t_while_end - t_while_start
   205    414.8 MiB   -754.7 MiB      313245               n += 1
   206    414.8 MiB   -336.4 MiB      136663           except SpinnakerException:              # If no new frame - pass
   207    414.8 MiB   -306.5 MiB      136663               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    414.8 MiB   -306.5 MiB      136663               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.8 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.7 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.4 MiB      0.5 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.0 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    396.8 MiB   -318.9 MiB      266596       while cam_recording_ready.is_set():
   171    396.8 MiB   -318.9 MiB      266595           t_while_start = time.time()
   172    396.8 MiB   -318.9 MiB      266595           try:
   173    396.8 MiB   -293.4 MiB      266595               im = blackFly.get_array(False)
   174    396.8 MiB   -214.9 MiB      180973               t = time.time()
   175    396.8 MiB   -214.9 MiB      180973               rec_frames += 1
   176    396.8 MiB   -209.6 MiB      180973               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    396.8 MiB   -214.8 MiB      180973               t_while_end = time.time()
   197                                                     
   198                                         
   199    396.8 MiB   -214.6 MiB      180973               try:
   200    396.8 MiB   -213.1 MiB      180973                   img_show_queue.put_nowait([im,rec_frames, t])
   201    396.8 MiB   -205.7 MiB      173317               except queue.Full:
   202    396.8 MiB   -205.7 MiB      173317                   pass
   203                                         
   204    396.8 MiB   -215.1 MiB      180973               avg_while += t_while_end - t_while_start
   205    396.8 MiB   -215.1 MiB      180973               n += 1
   206    396.8 MiB   -103.7 MiB       85622           except SpinnakerException:              # If no new frame - pass
   207    396.8 MiB   -101.0 MiB       85622               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    396.8 MiB   -101.0 MiB       85622               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.0 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    387.4 MiB   -843.2 MiB      183062       while cam_recording_ready.is_set():
   171    387.4 MiB   -843.2 MiB      183061           t_while_start = time.time()
   172    387.4 MiB   -843.2 MiB      183061           try:
   173    387.4 MiB   -824.5 MiB      183061               im = blackFly.get_array(False)
   174    387.4 MiB   -566.8 MiB      123163               t = time.time()
   175    387.4 MiB   -566.8 MiB      123163               rec_frames += 1
   176    387.4 MiB   -562.4 MiB      123163               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    387.4 MiB   -566.7 MiB      123163               t_while_end = time.time()
   197                                                     
   198                                         
   199    387.4 MiB   -560.9 MiB      123163               try:
   200    387.4 MiB   -560.3 MiB      123163                   img_show_queue.put_nowait([im,rec_frames, t])
   201    387.4 MiB   -529.7 MiB      117476               except queue.Full:
   202    387.4 MiB   -524.4 MiB      117476                   pass
   203                                         
   204    387.4 MiB   -550.7 MiB      123163               avg_while += t_while_end - t_while_start
   205    387.4 MiB   -556.0 MiB      123163               n += 1
   206    387.4 MiB   -276.1 MiB       59898           except SpinnakerException:              # If no new frame - pass
   207    387.4 MiB   -270.6 MiB       59898               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    387.4 MiB   -270.6 MiB       59898               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.4 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.6 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.1 MiB      0.3 MiB           1       blackFly.TriggerDelay = 9.
    67    362.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.1 MiB      0.0 MiB           1       counter = [0,0]
   102    362.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.1 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.3 MiB      0.3 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    399.4 MiB  -1035.6 MiB      310213       while cam_recording_ready.is_set():
   171    399.4 MiB  -1035.6 MiB      310212           t_while_start = time.time()
   172    399.4 MiB  -1035.6 MiB      310212           try:
   173    399.4 MiB  -1007.7 MiB      310212               im = blackFly.get_array(False)
   174    399.4 MiB   -721.7 MiB      218264               t = time.time()
   175    399.4 MiB   -721.7 MiB      218264               rec_frames += 1
   176    399.4 MiB   -711.5 MiB      218264               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    399.4 MiB   -717.6 MiB      218264               t_while_end = time.time()
   197                                                     
   198                                         
   199    399.4 MiB   -718.0 MiB      218264               try:
   200    399.4 MiB   -715.7 MiB      218264                   img_show_queue.put_nowait([im,rec_frames, t])
   201    399.4 MiB   -684.0 MiB      208664               except queue.Full:
   202    399.4 MiB   -684.4 MiB      208664                   pass
   203                                         
   204    399.4 MiB   -716.9 MiB      218264               avg_while += t_while_end - t_while_start
   205    399.4 MiB   -716.9 MiB      218264               n += 1
   206    399.4 MiB   -313.4 MiB       91948           except SpinnakerException:              # If no new frame - pass
   207    399.4 MiB   -310.7 MiB       91948               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    399.4 MiB   -310.7 MiB       91948               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.0 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.5 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.7 MiB      0.2 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.7 MiB      0.0 MiB           1       counter = [0,0]
   102    361.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.7 MiB      0.0 MiB           1       try:
   106    361.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    361.7 MiB      0.0 MiB           1       except CameraError:
   111    361.7 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    361.7 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    361.7 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    361.7 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    361.7 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.7 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.5 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.3 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.3 MiB      0.0 MiB           1       w_start = time.time()
   140    362.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.9 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    396.2 MiB   -644.4 MiB      258009       while cam_recording_ready.is_set():
   171    396.2 MiB   -644.2 MiB      258008           t_while_start = time.time()
   172    396.2 MiB   -644.4 MiB      258008           try:
   173    396.2 MiB   -618.5 MiB      258008               im = blackFly.get_array(False)
   174    396.2 MiB   -430.7 MiB      173696               t = time.time()
   175    396.2 MiB   -430.7 MiB      173696               rec_frames += 1
   176    396.2 MiB   -426.1 MiB      173696               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    396.2 MiB   -430.3 MiB      173696               t_while_end = time.time()
   197                                                     
   198                                         
   199    396.2 MiB   -430.4 MiB      173696               try:
   200    396.2 MiB   -428.5 MiB      173696                   img_show_queue.put_nowait([im,rec_frames, t])
   201    396.2 MiB   -411.6 MiB      166317               except queue.Full:
   202    396.2 MiB   -411.6 MiB      166317                   pass
   203                                         
   204    396.2 MiB   -430.9 MiB      173696               avg_while += t_while_end - t_while_start
   205    396.2 MiB   -430.9 MiB      173696               n += 1
   206    396.2 MiB   -213.5 MiB       84312           except SpinnakerException:              # If no new frame - pass
   207    396.2 MiB   -213.5 MiB       84312               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    396.2 MiB   -213.5 MiB       84312               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.3 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.3 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.3 MiB      0.0 MiB           1       w_start = time.time()
   140    362.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.7 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      1.1 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    372.8 MiB    -70.6 MiB       97311       while cam_recording_ready.is_set():
   171    372.8 MiB    -70.8 MiB       97310           t_while_start = time.time()
   172    372.8 MiB    -70.8 MiB       97310           try:
   173    372.8 MiB    -64.8 MiB       97310               im = blackFly.get_array(False)
   174    372.8 MiB    -49.6 MiB       77599               t = time.time()
   175    372.8 MiB    -49.6 MiB       77599               rec_frames += 1
   176    372.8 MiB    -47.7 MiB       77599               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    372.8 MiB    -49.6 MiB       77599               t_while_end = time.time()
   197                                                     
   198                                         
   199    372.8 MiB    -49.5 MiB       77599               try:
   200    372.8 MiB    -49.3 MiB       77599                   img_show_queue.put_nowait([im,rec_frames, t])
   201    372.8 MiB    -47.3 MiB       73509               except queue.Full:
   202    372.8 MiB    -47.4 MiB       73509                   pass
   203                                         
   204    372.8 MiB    -49.6 MiB       77599               avg_while += t_while_end - t_while_start
   205    372.8 MiB    -49.5 MiB       77599               n += 1
   206    372.8 MiB    -21.2 MiB       19711           except SpinnakerException:              # If no new frame - pass
   207    372.8 MiB    -21.1 MiB       19711               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    372.8 MiB    -21.2 MiB       19711               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.1 MiB     19.9 MiB           1           tmp_cam.init()
    44    360.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.6 MiB      0.0 MiB           1       counter = [0,0]
   102    361.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.6 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.5 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.2 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.2 MiB      0.0 MiB           1       w_start = time.time()
   140    362.2 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.5 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.6 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.3 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.3 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.3 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.3 MiB      0.0 MiB           1       rec_frames = 1
   158    363.3 MiB      0.0 MiB           1       e = 0
   159    363.3 MiB      0.0 MiB           1       n = 0
   160    363.3 MiB      0.0 MiB           1       n_else = 0
   161    363.3 MiB      0.0 MiB           1       t_start = time.time()
   162    363.3 MiB      0.0 MiB           1       avg_while = 0
   163    363.3 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.3 MiB      0.0 MiB           1       curr_FPS = []
   165    363.3 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.3 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.3 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    387.1 MiB   -943.9 MiB      196474       while cam_recording_ready.is_set():
   171    387.1 MiB   -943.9 MiB      196473           t_while_start = time.time()
   172    387.1 MiB   -943.9 MiB      196473           try:
   173    387.1 MiB   -924.9 MiB      196473               im = blackFly.get_array(False)
   174    387.1 MiB   -676.6 MiB      138973               t = time.time()
   175    387.1 MiB   -676.7 MiB      138973               rec_frames += 1
   176    387.1 MiB   -672.8 MiB      138973               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    387.1 MiB   -676.6 MiB      138973               t_while_end = time.time()
   197                                                     
   198                                         
   199    387.1 MiB   -676.5 MiB      138973               try:
   200    387.1 MiB   -675.4 MiB      138973                   img_show_queue.put_nowait([im,rec_frames, t])
   201    387.1 MiB   -651.7 MiB      132693               except queue.Full:
   202    387.1 MiB   -651.8 MiB      132693                   pass
   203                                         
   204    387.1 MiB   -677.0 MiB      138973               avg_while += t_while_end - t_while_start
   205    387.1 MiB   -677.0 MiB      138973               n += 1
   206    387.1 MiB   -266.8 MiB       57500           except SpinnakerException:              # If no new frame - pass
   207    387.1 MiB   -170.9 MiB       57500               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    387.1 MiB   -170.9 MiB       57500               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.5 MiB      0.5 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.5 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.5 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.5 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.6 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    455.1 MiB  -1339.0 MiB      796489       while cam_recording_ready.is_set():
   171    455.1 MiB  -1339.1 MiB      796488           t_while_start = time.time()
   172    455.1 MiB  -1339.1 MiB      796488           try:
   173    455.1 MiB  -1260.8 MiB      796488               im = blackFly.get_array(False)
   174    455.1 MiB   -898.1 MiB      551287               t = time.time()
   175    455.1 MiB   -902.9 MiB      551287               rec_frames += 1
   176    455.1 MiB   -886.5 MiB      551287               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    455.1 MiB   -900.6 MiB      551287               t_while_end = time.time()
   197                                                     
   198                                         
   199    455.1 MiB   -901.0 MiB      551287               try:
   200    455.1 MiB   -896.6 MiB      551287                   img_show_queue.put_nowait([im,rec_frames, t])
   201    455.1 MiB   -875.3 MiB      530531               except queue.Full:
   202    455.1 MiB   -864.7 MiB      530531                   pass
   203                                         
   204    455.1 MiB   -893.6 MiB      551287               avg_while += t_while_end - t_while_start
   205    455.1 MiB   -893.0 MiB      551287               n += 1
   206    455.1 MiB   -440.3 MiB      245201           except SpinnakerException:              # If no new frame - pass
   207    455.1 MiB   -429.7 MiB      245201               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    455.1 MiB   -429.7 MiB      245201               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     19.9 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.6 MiB      0.0 MiB           1       counter = [0,0]
   102    361.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.6 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.3 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.3 MiB      0.0 MiB           1       w_start = time.time()
   140    362.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.7 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.7 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      1.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    394.7 MiB   -400.1 MiB      252303       while cam_recording_ready.is_set():
   171    394.7 MiB   -400.1 MiB      252302           t_while_start = time.time()
   172    394.7 MiB   -400.1 MiB      252302           try:
   173    394.7 MiB   -374.5 MiB      252302               im = blackFly.get_array(False)
   174    394.7 MiB   -265.1 MiB      170978               t = time.time()
   175    394.7 MiB   -265.2 MiB      170978               rec_frames += 1
   176    394.7 MiB   -262.0 MiB      170978               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    394.7 MiB   -264.9 MiB      170978               t_while_end = time.time()
   197                                                     
   198                                         
   199    394.7 MiB   -265.0 MiB      170978               try:
   200    394.7 MiB   -263.2 MiB      170978                   img_show_queue.put_nowait([im,rec_frames, t])
   201    394.7 MiB   -254.6 MiB      163427               except queue.Full:
   202    394.7 MiB   -250.2 MiB      163427                   pass
   203                                         
   204    394.7 MiB   -260.9 MiB      170978               avg_while += t_while_end - t_while_start
   205    394.7 MiB   -265.4 MiB      170978               n += 1
   206    394.7 MiB   -134.7 MiB       81324           except SpinnakerException:              # If no new frame - pass
   207    394.7 MiB   -129.3 MiB       81324               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    394.7 MiB   -129.3 MiB       81324               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.9 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.7 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.7 MiB      0.0 MiB           1       counter = [0,0]
   102    361.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.7 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.5 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.2 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.4 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.4 MiB      0.0 MiB           1       w_start = time.time()
   140    362.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.8 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.8 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.7 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.7 MiB      0.0 MiB           1       rec_frames = 1
   158    363.7 MiB      0.0 MiB           1       e = 0
   159    363.7 MiB      0.0 MiB           1       n = 0
   160    363.7 MiB      0.0 MiB           1       n_else = 0
   161    363.7 MiB      0.0 MiB           1       t_start = time.time()
   162    363.7 MiB      0.0 MiB           1       avg_while = 0
   163    363.7 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.7 MiB      0.0 MiB           1       curr_FPS = []
   165    363.7 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.7 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.7 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    412.6 MiB   -980.4 MiB      390279       while cam_recording_ready.is_set():
   171    412.6 MiB   -980.7 MiB      390278           t_while_start = time.time()
   172    412.6 MiB   -980.7 MiB      390278           try:
   173    412.6 MiB   -939.7 MiB      390278               im = blackFly.get_array(False)
   174    412.6 MiB   -642.7 MiB      260054               t = time.time()
   175    412.6 MiB   -642.7 MiB      260054               rec_frames += 1
   176    412.6 MiB   -634.4 MiB      260054               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    412.6 MiB   -641.0 MiB      260054               t_while_end = time.time()
   197                                                     
   198                                         
   199    412.6 MiB   -640.9 MiB      260054               try:
   200    412.6 MiB   -639.6 MiB      260054                   img_show_queue.put_nowait([im,rec_frames, t])
   201    412.6 MiB   -615.7 MiB      249608               except queue.Full:
   202    412.6 MiB   -615.9 MiB      249608                   pass
   203                                         
   204    412.6 MiB   -643.1 MiB      260054               avg_while += t_while_end - t_while_start
   205    412.6 MiB   -643.1 MiB      260054               n += 1
   206    412.6 MiB   -337.6 MiB      130224           except SpinnakerException:              # If no new frame - pass
   207    412.6 MiB   -332.1 MiB      130224               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    412.6 MiB   -332.1 MiB      130224               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.1 MiB      0.0 MiB           1       counter = [0,0]
   102    362.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.1 MiB      0.0 MiB           1       try:
   106    362.6 MiB      0.5 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.6 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.3 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    382.7 MiB   -443.1 MiB      147309       while cam_recording_ready.is_set():
   171    382.7 MiB   -443.1 MiB      147308           t_while_start = time.time()
   172    382.7 MiB   -443.1 MiB      147308           try:
   173    382.7 MiB   -429.8 MiB      147308               im = blackFly.get_array(False)
   174    382.7 MiB   -325.9 MiB      102146               t = time.time()
   175    382.7 MiB   -325.9 MiB      102146               rec_frames += 1
   176    382.7 MiB   -320.4 MiB      102146               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    382.7 MiB   -324.4 MiB      102146               t_while_end = time.time()
   197                                                     
   198                                         
   199    382.7 MiB   -324.4 MiB      102146               try:
   200    382.7 MiB   -323.5 MiB      102146                   img_show_queue.put_nowait([im,rec_frames, t])
   201    382.7 MiB   -313.7 MiB       97207               except queue.Full:
   202    382.7 MiB   -308.5 MiB       97207                   pass
   203                                         
   204    382.7 MiB   -320.8 MiB      102146               avg_while += t_while_end - t_while_start
   205    382.7 MiB   -320.5 MiB      102146               n += 1
   206    382.7 MiB   -116.9 MiB       45162           except SpinnakerException:              # If no new frame - pass
   207    382.7 MiB   -116.9 MiB       45162               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    382.7 MiB   -116.9 MiB       45162               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.3 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.9 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.7 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.7 MiB      0.0 MiB           1       counter = [0,0]
   102    361.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.7 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.5 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.3 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.3 MiB      0.0 MiB           1       w_start = time.time()
   140    362.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.9 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    434.1 MiB  -1230.0 MiB      578354       while cam_recording_ready.is_set():
   171    434.1 MiB  -1230.0 MiB      578353           t_while_start = time.time()
   172    434.1 MiB  -1230.0 MiB      578353           try:
   173    434.1 MiB  -1168.8 MiB      578353               im = blackFly.get_array(False)
   174    434.1 MiB   -820.2 MiB      390509               t = time.time()
   175    434.1 MiB   -820.2 MiB      390509               rec_frames += 1
   176    434.1 MiB   -812.6 MiB      390509               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    434.1 MiB   -819.5 MiB      390509               t_while_end = time.time()
   197                                                     
   198                                         
   199    434.1 MiB   -819.6 MiB      390509               try:
   200    434.1 MiB   -817.4 MiB      390509                   img_show_queue.put_nowait([im,rec_frames, t])
   201    434.1 MiB   -790.0 MiB      375763               except queue.Full:
   202    434.1 MiB   -790.1 MiB      375763                   pass
   203                                         
   204    434.1 MiB   -820.8 MiB      390509               avg_while += t_while_end - t_while_start
   205    434.1 MiB   -820.8 MiB      390509               n += 1
   206    434.1 MiB   -409.2 MiB      187844           except SpinnakerException:              # If no new frame - pass
   207    434.1 MiB   -406.5 MiB      187844               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    434.1 MiB   -406.5 MiB      187844               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.2 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.3 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.7 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.0 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.0 MiB      0.0 MiB           1       rec_frames = 1
   158    364.0 MiB      0.0 MiB           1       e = 0
   159    364.0 MiB      0.0 MiB           1       n = 0
   160    364.0 MiB      0.0 MiB           1       n_else = 0
   161    364.0 MiB      0.0 MiB           1       t_start = time.time()
   162    364.0 MiB      0.0 MiB           1       avg_while = 0
   163    364.0 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.0 MiB      0.0 MiB           1       curr_FPS = []
   165    364.0 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.0 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.0 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    409.7 MiB  -1076.1 MiB      423017       while cam_recording_ready.is_set():
   171    409.7 MiB  -1076.0 MiB      423016           t_while_start = time.time()
   172    409.7 MiB  -1076.2 MiB      423016           try:
   173    409.7 MiB  -1037.6 MiB      423016               im = blackFly.get_array(False)
   174    409.7 MiB   -758.8 MiB      300311               t = time.time()
   175    409.7 MiB   -758.7 MiB      300311               rec_frames += 1
   176    409.7 MiB   -744.9 MiB      300311               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    409.7 MiB   -749.7 MiB      300311               t_while_end = time.time()
   197                                                     
   198                                         
   199    409.7 MiB   -749.5 MiB      300311               try:
   200    409.7 MiB   -747.5 MiB      300311                   img_show_queue.put_nowait([im,rec_frames, t])
   201    409.7 MiB   -727.9 MiB      286256               except queue.Full:
   202    409.7 MiB   -728.6 MiB      286256                   pass
   203                                         
   204    409.7 MiB   -759.4 MiB      300311               avg_while += t_while_end - t_while_start
   205    409.7 MiB   -759.4 MiB      300311               n += 1
   206    409.7 MiB   -316.8 MiB      122705           except SpinnakerException:              # If no new frame - pass
   207    409.7 MiB   -306.0 MiB      122705               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    409.7 MiB   -305.9 MiB      122705               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.6 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.4 MiB      0.0 MiB           1       counter = [0,0]
   102    362.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.4 MiB      0.0 MiB           1       try:
   106    362.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.5 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.9 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.9 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.9 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.9 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.9 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.9 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.9 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.9 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.9 MiB      0.0 MiB           1       w_start = time.time()
   140    362.9 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.9 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.3 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.3 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.5 MiB      0.2 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.5 MiB      0.0 MiB           1       rec_frames = 1
   158    364.5 MiB      0.0 MiB           1       e = 0
   159    364.5 MiB      0.0 MiB           1       n = 0
   160    364.5 MiB      0.0 MiB           1       n_else = 0
   161    364.5 MiB      0.0 MiB           1       t_start = time.time()
   162    364.5 MiB      0.0 MiB           1       avg_while = 0
   163    364.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.5 MiB      0.0 MiB           1       curr_FPS = []
   165    364.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    417.0 MiB   -868.3 MiB      447007       while cam_recording_ready.is_set():
   171    417.0 MiB   -868.3 MiB      447006           t_while_start = time.time()
   172    417.0 MiB   -868.3 MiB      447006           try:
   173    417.0 MiB   -823.7 MiB      447006               im = blackFly.get_array(False)
   174    417.0 MiB   -593.3 MiB      305603               t = time.time()
   175    417.0 MiB   -587.5 MiB      305603               rec_frames += 1
   176    417.0 MiB   -581.1 MiB      305603               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    417.0 MiB   -586.6 MiB      305603               t_while_end = time.time()
   197                                                     
   198                                         
   199    417.0 MiB   -586.9 MiB      305603               try:
   200    417.0 MiB   -584.9 MiB      305603                   img_show_queue.put_nowait([im,rec_frames, t])
   201    417.0 MiB   -564.4 MiB      293485               except queue.Full:
   202    417.0 MiB   -564.4 MiB      293485                   pass
   203                                         
   204    417.0 MiB   -587.9 MiB      305603               avg_while += t_while_end - t_while_start
   205    417.0 MiB   -587.9 MiB      305603               n += 1
   206    417.0 MiB   -283.1 MiB      141403           except SpinnakerException:              # If no new frame - pass
   207    417.0 MiB   -272.3 MiB      141403               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    417.0 MiB   -272.3 MiB      141403               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    365.5 MiB      0.0 MiB        1780       while cam_recording_ready.is_set():
   171    365.5 MiB      0.0 MiB        1779           t_while_start = time.time()
   172    365.5 MiB      0.0 MiB        1779           try:
   173    365.5 MiB      1.1 MiB        1779               im = blackFly.get_array(False)
   174    365.5 MiB      0.0 MiB        1248               t = time.time()
   175    365.5 MiB      0.0 MiB        1248               rec_frames += 1
   176    365.5 MiB      0.2 MiB        1248               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    365.5 MiB      0.0 MiB        1248               t_while_end = time.time()
   197                                                     
   198                                         
   199    365.5 MiB      0.2 MiB        1248               try:
   200    365.5 MiB      0.0 MiB        1248                   img_show_queue.put_nowait([im,rec_frames, t])
   201    365.5 MiB      0.0 MiB        1143               except queue.Full:
   202    365.5 MiB      0.0 MiB        1143                   pass
   203                                         
   204    365.5 MiB      0.0 MiB        1248               avg_while += t_while_end - t_while_start
   205    365.5 MiB      0.0 MiB        1248               n += 1
   206    365.5 MiB      0.0 MiB         531           except SpinnakerException:              # If no new frame - pass
   207    365.5 MiB      0.0 MiB         531               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    365.5 MiB      0.0 MiB         531               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.7 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.8 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.7 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    410.5 MiB   -898.5 MiB      379471       while cam_recording_ready.is_set():
   171    410.5 MiB   -898.6 MiB      379470           t_while_start = time.time()
   172    410.5 MiB   -898.6 MiB      379470           try:
   173    410.5 MiB   -859.3 MiB      379470               im = blackFly.get_array(False)
   174    410.5 MiB   -617.8 MiB      258766               t = time.time()
   175    410.5 MiB   -612.2 MiB      258766               rec_frames += 1
   176    410.5 MiB   -607.1 MiB      258766               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    410.5 MiB   -612.3 MiB      258766               t_while_end = time.time()
   197                                                     
   198                                         
   199    410.5 MiB   -612.2 MiB      258766               try:
   200    410.5 MiB   -609.6 MiB      258766                   img_show_queue.put_nowait([im,rec_frames, t])
   201    410.5 MiB   -585.5 MiB      248213               except queue.Full:
   202    410.5 MiB   -585.5 MiB      248213                   pass
   203                                         
   204    410.5 MiB   -612.7 MiB      258766               avg_while += t_while_end - t_while_start
   205    410.5 MiB   -612.7 MiB      258766               n += 1
   206    410.5 MiB   -288.6 MiB      120704           except SpinnakerException:              # If no new frame - pass
   207    410.5 MiB   -285.9 MiB      120704               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    410.5 MiB   -285.9 MiB      120704               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.0 MiB     23.5 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.6 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.0 MiB      0.0 MiB           1       except CameraError:
   111    362.0 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    362.0 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    362.0 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    362.0 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    362.0 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.6 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.0 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    534.0 MiB -65394.7 MiB     1753061       while cam_recording_ready.is_set():
   171    534.0 MiB -65395.0 MiB     1753060           t_while_start = time.time()
   172    534.0 MiB -65395.2 MiB     1753060           try:
   173    534.0 MiB -65237.2 MiB     1753060               im = blackFly.get_array(False)
   174    534.0 MiB -48347.8 MiB     1284924               t = time.time()
   175    534.0 MiB -48348.0 MiB     1284924               rec_frames += 1
   176    534.0 MiB -48304.6 MiB     1284924               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    534.0 MiB -48314.8 MiB     1284924               t_while_end = time.time()
   197                                                     
   198                                         
   199    534.0 MiB -48315.2 MiB     1284924               try:
   200    534.0 MiB -48307.5 MiB     1284924                   img_show_queue.put_nowait([im,rec_frames, t])
   201    534.0 MiB -46965.6 MiB     1245804               except queue.Full:
   202    534.0 MiB -46961.8 MiB     1245804                   pass
   203                                         
   204    534.0 MiB -48338.2 MiB     1284924               avg_while += t_while_end - t_while_start
   205    534.0 MiB -48343.5 MiB     1284924               n += 1
   206    534.0 MiB -17039.1 MiB      468136           except SpinnakerException:              # If no new frame - pass
   207    534.0 MiB  -9302.2 MiB      468136               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    534.0 MiB  -9302.3 MiB      468136               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    340.6 MiB     23.3 MiB           1           tmp_cam = Camera()
    43    360.9 MiB     20.3 MiB           1           tmp_cam.init()
    44    360.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.6 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.2 MiB      0.6 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.4 MiB      0.2 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.4 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.4 MiB      0.0 MiB           1       counter = [0,0]
   102    361.4 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.4 MiB      0.0 MiB           1       try:
   106    361.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.4 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.4 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.4 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.4 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.9 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.9 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.0 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.0 MiB      0.0 MiB           1       w_start = time.time()
   140    362.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.3 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.0 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.3 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.5 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.5 MiB      0.0 MiB           1       rec_frames = 1
   158    363.5 MiB      0.0 MiB           1       e = 0
   159    363.5 MiB      0.0 MiB           1       n = 0
   160    363.5 MiB      0.0 MiB           1       n_else = 0
   161    363.5 MiB      0.0 MiB           1       t_start = time.time()
   162    363.5 MiB      0.0 MiB           1       avg_while = 0
   163    363.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.5 MiB      0.0 MiB           1       curr_FPS = []
   165    363.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    375.1 MiB      0.0 MiB       30213       while cam_recording_ready.is_set():
   171    375.1 MiB      0.0 MiB       30212           t_while_start = time.time()
   172    375.1 MiB      0.0 MiB       30212           try:
   173    375.1 MiB     11.4 MiB       30212               im = blackFly.get_array(False)
   174    364.8 MiB      0.0 MiB          15               t = time.time()
   175    364.8 MiB      0.0 MiB          15               rec_frames += 1
   176    364.8 MiB      0.0 MiB          15               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    364.8 MiB      0.0 MiB          15               t_while_end = time.time()
   197                                                     
   198                                         
   199    364.8 MiB      0.0 MiB          15               try:
   200    364.8 MiB      0.0 MiB          15                   img_show_queue.put_nowait([im,rec_frames, t])
   201    364.8 MiB      0.0 MiB          14               except queue.Full:
   202    364.8 MiB      0.0 MiB          14                   pass
   203                                         
   204    364.8 MiB      0.0 MiB          15               avg_while += t_while_end - t_while_start
   205    364.8 MiB      0.0 MiB          15               n += 1
   206    375.1 MiB    -27.0 MiB       30197           except SpinnakerException:              # If no new frame - pass
   207    375.1 MiB    -27.0 MiB       30197               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    375.1 MiB    -26.9 MiB       30197               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.5 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.0 MiB           1           tmp_cam.init()
    44    360.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.6 MiB      0.0 MiB           1       counter = [0,0]
   102    361.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.6 MiB      0.0 MiB           1       try:
   106    361.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.2 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.3 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.3 MiB      0.0 MiB           1       w_start = time.time()
   140    362.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.6 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.6 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    363.5 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.5 MiB      0.0 MiB           1       rec_frames = 1
   158    363.5 MiB      0.0 MiB           1       e = 0
   159    363.5 MiB      0.0 MiB           1       n = 0
   160    363.5 MiB      0.0 MiB           1       n_else = 0
   161    363.5 MiB      0.0 MiB           1       t_start = time.time()
   162    363.5 MiB      0.0 MiB           1       avg_while = 0
   163    363.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.5 MiB      0.0 MiB           1       curr_FPS = []
   165    363.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    369.0 MiB      0.0 MiB       13684       while cam_recording_ready.is_set():
   171    369.0 MiB      0.0 MiB       13683           t_while_start = time.time()
   172    369.0 MiB      0.0 MiB       13683           try:
   173    369.0 MiB      5.5 MiB       13683               im = blackFly.get_array(False)
   174    364.7 MiB      0.0 MiB         119               t = time.time()
   175    364.7 MiB      0.0 MiB         119               rec_frames += 1
   176    364.7 MiB      0.0 MiB         119               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    364.7 MiB      0.0 MiB         119               t_while_end = time.time()
   197                                                     
   198                                         
   199    364.7 MiB      0.0 MiB         119               try:
   200    364.7 MiB      0.0 MiB         119                   img_show_queue.put_nowait([im,rec_frames, t])
   201    364.7 MiB      0.0 MiB         109               except queue.Full:
   202    364.7 MiB      0.0 MiB         109                   pass
   203                                         
   204    364.7 MiB      0.0 MiB         119               avg_while += t_while_end - t_while_start
   205    364.7 MiB      0.0 MiB         119               n += 1
   206    369.0 MiB      0.0 MiB       13564           except SpinnakerException:              # If no new frame - pass
   207    369.0 MiB      0.0 MiB       13564               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    369.0 MiB      0.0 MiB       13564               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.9 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.6 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.3 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.4 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.4 MiB      0.0 MiB           1       w_start = time.time()
   140    362.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.7 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.7 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    395.5 MiB   -130.3 MiB      149555       while cam_recording_ready.is_set():
   171    395.5 MiB   -130.3 MiB      149554           t_while_start = time.time()
   172    395.5 MiB   -130.3 MiB      149554           try:
   173    395.5 MiB   -105.1 MiB      149554               im = blackFly.get_array(False)
   174    395.5 MiB    -57.5 MiB       64095               t = time.time()
   175    395.5 MiB    -55.6 MiB       64095               rec_frames += 1
   176    395.5 MiB    -51.1 MiB       64095               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    395.5 MiB    -57.6 MiB       64095               t_while_end = time.time()
   197                                                     
   198                                         
   199    395.5 MiB    -57.3 MiB       64095               try:
   200    395.5 MiB    -56.0 MiB       64095                   img_show_queue.put_nowait([im,rec_frames, t])
   201    395.5 MiB    -53.9 MiB       59888               except queue.Full:
   202    395.5 MiB    -49.9 MiB       59888                   pass
   203                                         
   204    395.5 MiB    -53.9 MiB       64095               avg_while += t_while_end - t_while_start
   205    395.5 MiB    -53.7 MiB       64095               n += 1
   206    395.5 MiB    -77.3 MiB       85459           except SpinnakerException:              # If no new frame - pass
   207    395.5 MiB    -71.9 MiB       85459               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    395.5 MiB    -71.9 MiB       85459               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.3 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.9 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.7 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.7 MiB      0.0 MiB           1       counter = [0,0]
   102    361.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.7 MiB      0.0 MiB           1       try:
   106    362.3 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.3 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.3 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.3 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.4 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.4 MiB      0.0 MiB           1       w_start = time.time()
   140    362.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.8 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.5 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    377.8 MiB   -137.4 MiB      114891       while cam_recording_ready.is_set():
   171    377.8 MiB   -137.5 MiB      114890           t_while_start = time.time()
   172    377.8 MiB   -137.5 MiB      114890           try:
   173    377.8 MiB   -125.4 MiB      114890               im = blackFly.get_array(False)
   174    377.8 MiB    -96.8 MiB       81044               t = time.time()
   175    377.8 MiB    -97.0 MiB       81044               rec_frames += 1
   176    377.8 MiB    -94.9 MiB       81044               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    377.8 MiB    -96.1 MiB       81044               t_while_end = time.time()
   197                                                     
   198                                         
   199    377.8 MiB    -96.2 MiB       81044               try:
   200    377.8 MiB    -95.4 MiB       81044                   img_show_queue.put_nowait([im,rec_frames, t])
   201    377.8 MiB    -91.2 MiB       76683               except queue.Full:
   202    377.8 MiB    -91.2 MiB       76683                   pass
   203                                         
   204    377.8 MiB    -97.0 MiB       81044               avg_while += t_while_end - t_while_start
   205    377.8 MiB    -97.1 MiB       81044               n += 1
   206    377.8 MiB    -40.4 MiB       33846           except SpinnakerException:              # If no new frame - pass
   207    377.8 MiB    -40.4 MiB       33846               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    377.8 MiB    -40.4 MiB       33846               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    361.8 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.6 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    376.9 MiB   -276.5 MiB       99422       while cam_recording_ready.is_set():
   171    376.9 MiB   -276.5 MiB       99421           t_while_start = time.time()
   172    376.9 MiB   -276.5 MiB       99421           try:
   173    376.9 MiB   -268.7 MiB       99421               im = blackFly.get_array(False)
   174    376.9 MiB   -195.6 MiB       69506               t = time.time()
   175    376.9 MiB   -195.6 MiB       69506               rec_frames += 1
   176    376.9 MiB   -191.9 MiB       69506               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    376.9 MiB   -195.4 MiB       69506               t_while_end = time.time()
   197                                                     
   198                                         
   199    376.9 MiB   -195.4 MiB       69506               try:
   200    376.9 MiB   -194.5 MiB       69506                   img_show_queue.put_nowait([im,rec_frames, t])
   201    376.9 MiB   -183.9 MiB       65634               except queue.Full:
   202    376.9 MiB   -183.9 MiB       65634                   pass
   203                                         
   204    376.9 MiB   -195.7 MiB       69506               avg_while += t_while_end - t_while_start
   205    376.9 MiB   -195.7 MiB       69506               n += 1
   206    376.9 MiB    -80.8 MiB       29915           except SpinnakerException:              # If no new frame - pass
   207    376.9 MiB    -75.5 MiB       29915               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    376.9 MiB    -75.5 MiB       29915               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.2 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.3 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.7 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    386.2 MiB   -430.7 MiB      175063       while cam_recording_ready.is_set():
   171    386.2 MiB   -430.9 MiB      175062           t_while_start = time.time()
   172    386.2 MiB   -430.9 MiB      175062           try:
   173    386.2 MiB   -427.3 MiB      175062               im = blackFly.get_array(False)
   174    386.2 MiB   -292.8 MiB      119619               t = time.time()
   175    386.2 MiB   -292.8 MiB      119619               rec_frames += 1
   176    386.2 MiB   -292.4 MiB      119619               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    386.2 MiB   -289.5 MiB      119619               t_while_end = time.time()
   197                                                     
   198                                         
   199    386.2 MiB   -292.8 MiB      119619               try:
   200    386.2 MiB   -292.5 MiB      119619                   img_show_queue.put_nowait([im,rec_frames, t])
   201    386.2 MiB   -277.7 MiB      114044               except queue.Full:
   202    386.2 MiB   -278.2 MiB      114044                   pass
   203                                         
   204    386.2 MiB   -293.0 MiB      119619               avg_while += t_while_end - t_while_start
   205    386.2 MiB   -293.0 MiB      119619               n += 1
   206    386.2 MiB   -123.9 MiB       55443           except SpinnakerException:              # If no new frame - pass
   207    386.2 MiB   -116.1 MiB       55443               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    386.2 MiB   -116.1 MiB       55443               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.1 MiB      0.0 MiB           1       counter = [0,0]
   102    362.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.1 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.6 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.1 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.4 MiB      0.3 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.0 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    373.7 MiB    -81.7 MiB       70848       while cam_recording_ready.is_set():
   171    373.7 MiB    -81.7 MiB       70847           t_while_start = time.time()
   172    373.7 MiB    -81.7 MiB       70847           try:
   173    373.7 MiB    -75.8 MiB       70847               im = blackFly.get_array(False)
   174    373.7 MiB    -57.2 MiB       50779               t = time.time()
   175    373.7 MiB    -57.2 MiB       50779               rec_frames += 1
   176    373.7 MiB    -54.2 MiB       50779               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    373.7 MiB    -57.0 MiB       50779               t_while_end = time.time()
   197                                                     
   198                                         
   199    373.7 MiB    -57.0 MiB       50779               try:
   200    373.7 MiB    -56.7 MiB       50779                   img_show_queue.put_nowait([im,rec_frames, t])
   201    373.7 MiB    -53.9 MiB       47694               except queue.Full:
   202    373.7 MiB    -53.9 MiB       47694                   pass
   203                                         
   204    373.7 MiB    -57.1 MiB       50779               avg_while += t_while_end - t_while_start
   205    373.7 MiB    -57.2 MiB       50779               n += 1
   206    373.7 MiB    -24.5 MiB       20068           except SpinnakerException:              # If no new frame - pass
   207    373.7 MiB    -24.5 MiB       20068               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    373.7 MiB    -24.5 MiB       20068               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.5 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.6 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.6 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.2 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.2 MiB      0.3 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.6 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    382.2 MiB   -499.1 MiB      154918       while cam_recording_ready.is_set():
   171    382.2 MiB   -499.1 MiB      154917           t_while_start = time.time()
   172    382.2 MiB   -499.1 MiB      154917           try:
   173    382.2 MiB   -486.1 MiB      154917               im = blackFly.get_array(False)
   174    382.2 MiB   -346.7 MiB      109236               t = time.time()
   175    382.2 MiB   -346.5 MiB      109236               rec_frames += 1
   176    382.2 MiB   -342.9 MiB      109236               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    382.2 MiB   -346.6 MiB      109236               t_while_end = time.time()
   197                                                     
   198                                         
   199    382.2 MiB   -338.9 MiB      109236               try:
   200    382.2 MiB   -337.8 MiB      109236                   img_show_queue.put_nowait([im,rec_frames, t])
   201    382.2 MiB   -321.9 MiB      103938               except queue.Full:
   202    382.2 MiB   -321.9 MiB      103938                   pass
   203                                         
   204    382.2 MiB   -339.2 MiB      109236               avg_while += t_while_end - t_while_start
   205    382.2 MiB   -339.2 MiB      109236               n += 1
   206    382.2 MiB   -152.1 MiB       45681           except SpinnakerException:              # If no new frame - pass
   207    382.2 MiB   -149.5 MiB       45681               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    382.2 MiB   -149.5 MiB       45681               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.5 MiB      0.6 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.7 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    365.5 MiB      0.0 MiB        1689       while cam_recording_ready.is_set():
   171    365.5 MiB      0.0 MiB        1688           t_while_start = time.time()
   172    365.5 MiB      0.0 MiB        1688           try:
   173    365.5 MiB      1.5 MiB        1688               im = blackFly.get_array(False)
   174    365.5 MiB      0.0 MiB        1290               t = time.time()
   175    365.5 MiB      0.0 MiB        1290               rec_frames += 1
   176    365.5 MiB      0.0 MiB        1290               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    365.5 MiB      0.0 MiB        1290               t_while_end = time.time()
   197                                                     
   198                                         
   199    365.5 MiB      0.0 MiB        1290               try:
   200    365.5 MiB      0.0 MiB        1290                   img_show_queue.put_nowait([im,rec_frames, t])
   201    365.5 MiB      0.0 MiB        1182               except queue.Full:
   202    365.5 MiB      0.0 MiB        1182                   pass
   203                                         
   204    365.5 MiB      0.0 MiB        1290               avg_while += t_while_end - t_while_start
   205    365.5 MiB      0.0 MiB        1290               n += 1
   206    365.5 MiB      0.0 MiB         398           except SpinnakerException:              # If no new frame - pass
   207    365.5 MiB      0.0 MiB         398               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    365.5 MiB      0.0 MiB         398               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.3 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    361.8 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.5 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    363.8 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.8 MiB      0.0 MiB           1       rec_frames = 1
   158    363.8 MiB      0.0 MiB           1       e = 0
   159    363.8 MiB      0.0 MiB           1       n = 0
   160    363.8 MiB      0.0 MiB           1       n_else = 0
   161    363.8 MiB      0.0 MiB           1       t_start = time.time()
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.8 MiB      0.0 MiB           1       curr_FPS = []
   165    363.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.6 MiB     -8.8 MiB       28841       while cam_recording_ready.is_set():
   171    368.6 MiB     -8.8 MiB       28840           t_while_start = time.time()
   172    368.6 MiB     -8.8 MiB       28840           try:
   173    368.6 MiB     -5.5 MiB       28840               im = blackFly.get_array(False)
   174    368.6 MiB     -6.1 MiB       20156               t = time.time()
   175    368.6 MiB     -6.1 MiB       20156               rec_frames += 1
   176    368.6 MiB     -5.4 MiB       20156               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.6 MiB     -6.1 MiB       20156               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.6 MiB     -6.1 MiB       20156               try:
   200    368.6 MiB     -5.5 MiB       20156                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.6 MiB     -5.8 MiB       18985               except queue.Full:
   202    368.6 MiB     -5.8 MiB       18985                   pass
   203                                         
   204    368.6 MiB     -6.1 MiB       20156               avg_while += t_while_end - t_while_start
   205    368.6 MiB     -6.0 MiB       20156               n += 1
   206    368.6 MiB     -2.7 MiB        8684           except SpinnakerException:              # If no new frame - pass
   207    368.6 MiB     -2.7 MiB        8684               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.6 MiB     -2.7 MiB        8684               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.5 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.8 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    406.0 MiB   -808.6 MiB      337469       while cam_recording_ready.is_set():
   171    406.0 MiB   -808.8 MiB      337468           t_while_start = time.time()
   172    406.0 MiB   -808.7 MiB      337468           try:
   173    406.0 MiB   -774.0 MiB      337468               im = blackFly.get_array(False)
   174    406.0 MiB   -538.5 MiB      230077               t = time.time()
   175    406.0 MiB   -538.6 MiB      230077               rec_frames += 1
   176    406.0 MiB   -533.3 MiB      230077               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    406.0 MiB   -538.2 MiB      230077               t_while_end = time.time()
   197                                                     
   198                                         
   199    406.0 MiB   -538.1 MiB      230077               try:
   200    406.0 MiB   -536.4 MiB      230077                   img_show_queue.put_nowait([im,rec_frames, t])
   201    406.0 MiB   -519.5 MiB      220702               except queue.Full:
   202    406.0 MiB   -519.5 MiB      220702                   pass
   203                                         
   204    406.0 MiB   -538.9 MiB      230077               avg_while += t_while_end - t_while_start
   205    406.0 MiB   -538.7 MiB      230077               n += 1
   206    406.0 MiB   -269.8 MiB      107391           except SpinnakerException:              # If no new frame - pass
   207    406.0 MiB   -267.1 MiB      107391               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    406.0 MiB   -267.1 MiB      107391               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.0 MiB     19.9 MiB           1           tmp_cam.init()
    44    360.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.3 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.3 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.3 MiB      0.0 MiB           1       counter = [0,0]
   102    361.3 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.3 MiB      0.0 MiB           1       try:
   106    361.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.8 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.0 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.0 MiB      0.0 MiB           1       w_start = time.time()
   140    362.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.3 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    363.5 MiB      0.5 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.5 MiB      0.0 MiB           1       rec_frames = 1
   158    363.5 MiB      0.0 MiB           1       e = 0
   159    363.5 MiB      0.0 MiB           1       n = 0
   160    363.5 MiB      0.0 MiB           1       n_else = 0
   161    363.5 MiB      0.0 MiB           1       t_start = time.time()
   162    363.5 MiB      0.0 MiB           1       avg_while = 0
   163    363.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.5 MiB      0.0 MiB           1       curr_FPS = []
   165    363.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    393.8 MiB   -700.5 MiB      256678       while cam_recording_ready.is_set():
   171    393.8 MiB   -700.5 MiB      256677           t_while_start = time.time()
   172    393.8 MiB   -700.5 MiB      256677           try:
   173    393.8 MiB   -676.0 MiB      256677               im = blackFly.get_array(False)
   174    393.8 MiB   -483.5 MiB      183563               t = time.time()
   175    393.8 MiB   -483.5 MiB      183563               rec_frames += 1
   176    393.8 MiB   -480.5 MiB      183563               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    393.8 MiB   -483.1 MiB      183563               t_while_end = time.time()
   197                                                     
   198                                         
   199    393.8 MiB   -483.2 MiB      183563               try:
   200    393.8 MiB   -480.7 MiB      183563                   img_show_queue.put_nowait([im,rec_frames, t])
   201    393.8 MiB   -459.5 MiB      175369               except queue.Full:
   202    393.8 MiB   -459.5 MiB      175369                   pass
   203                                         
   204    393.8 MiB   -483.7 MiB      183563               avg_while += t_while_end - t_while_start
   205    393.8 MiB   -483.8 MiB      183563               n += 1
   206    393.8 MiB   -216.8 MiB       73114           except SpinnakerException:              # If no new frame - pass
   207    393.8 MiB   -214.0 MiB       73114               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    393.8 MiB   -214.0 MiB       73114               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    316.9 MiB    316.9 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    316.9 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.1 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.1 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.1 MiB      0.0 MiB           1       try:
    42    340.7 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    360.7 MiB     20.0 MiB           1           tmp_cam.init()
    44    360.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.1 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.1 MiB      0.0 MiB           1       counter = [0,0]
   102    361.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.1 MiB      0.0 MiB           1       try:
   106    361.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.6 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    361.8 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    361.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    361.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    361.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    361.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    361.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    361.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    361.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    361.8 MiB      0.0 MiB           1       w_start = time.time()
   140    361.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    361.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    361.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    361.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    361.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.2 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    362.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.1 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.1 MiB      0.0 MiB           1       rec_frames = 1
   158    363.1 MiB      0.0 MiB           1       e = 0
   159    363.1 MiB      0.0 MiB           1       n = 0
   160    363.1 MiB      0.0 MiB           1       n_else = 0
   161    363.1 MiB      0.0 MiB           1       t_start = time.time()
   162    363.1 MiB      0.0 MiB           1       avg_while = 0
   163    363.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.1 MiB      0.0 MiB           1       curr_FPS = []
   165    363.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    372.3 MiB   -107.3 MiB       66952       while cam_recording_ready.is_set():
   171    372.3 MiB   -107.3 MiB       66951           t_while_start = time.time()
   172    372.3 MiB   -107.3 MiB       66951           try:
   173    372.3 MiB   -101.1 MiB       66951               im = blackFly.get_array(False)
   174    372.3 MiB    -73.2 MiB       45957               t = time.time()
   175    372.3 MiB    -73.2 MiB       45957               rec_frames += 1
   176    372.3 MiB    -71.3 MiB       45957               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    372.3 MiB    -73.2 MiB       45957               t_while_end = time.time()
   197                                                     
   198                                         
   199    372.3 MiB    -73.2 MiB       45957               try:
   200    372.3 MiB    -72.2 MiB       45957                   img_show_queue.put_nowait([im,rec_frames, t])
   201    372.3 MiB    -69.1 MiB       43203               except queue.Full:
   202    372.3 MiB    -69.1 MiB       43203                   pass
   203                                         
   204    372.3 MiB    -73.3 MiB       45957               avg_while += t_while_end - t_while_start
   205    372.3 MiB    -73.2 MiB       45957               n += 1
   206    372.3 MiB    -34.0 MiB       20994           except SpinnakerException:              # If no new frame - pass
   207    372.3 MiB    -34.1 MiB       20994               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    372.3 MiB    -34.1 MiB       20994               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.9 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    362.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    372.2 MiB   -117.1 MiB       66741       while cam_recording_ready.is_set():
   171    372.2 MiB   -117.2 MiB       66740           t_while_start = time.time()
   172    372.2 MiB   -117.0 MiB       66740           try:
   173    372.2 MiB   -112.4 MiB       66740               im = blackFly.get_array(False)
   174    372.2 MiB    -82.6 MiB       47155               t = time.time()
   175    372.2 MiB    -82.6 MiB       47155               rec_frames += 1
   176    372.2 MiB    -80.0 MiB       47155               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    372.2 MiB    -82.6 MiB       47155               t_while_end = time.time()
   197                                                     
   198                                         
   199    372.2 MiB    -82.6 MiB       47155               try:
   200    372.2 MiB    -82.3 MiB       47155                   img_show_queue.put_nowait([im,rec_frames, t])
   201    372.2 MiB    -77.5 MiB       44375               except queue.Full:
   202    372.2 MiB    -77.8 MiB       44375                   pass
   203                                         
   204    372.2 MiB    -82.6 MiB       47155               avg_while += t_while_end - t_while_start
   205    372.2 MiB    -82.6 MiB       47155               n += 1
   206    372.2 MiB    -34.5 MiB       19585           except SpinnakerException:              # If no new frame - pass
   207    372.2 MiB    -34.5 MiB       19585               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    372.2 MiB    -34.5 MiB       19585               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.1 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.1 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.1 MiB      0.0 MiB           1       rec_frames = 1
   158    364.1 MiB      0.0 MiB           1       e = 0
   159    364.1 MiB      0.0 MiB           1       n = 0
   160    364.1 MiB      0.0 MiB           1       n_else = 0
   161    364.1 MiB      0.0 MiB           1       t_start = time.time()
   162    364.1 MiB      0.0 MiB           1       avg_while = 0
   163    364.1 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.1 MiB      0.0 MiB           1       curr_FPS = []
   165    364.1 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.1 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.1 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    371.0 MiB    -38.4 MiB       40718       while cam_recording_ready.is_set():
   171    371.0 MiB    -38.4 MiB       40717           t_while_start = time.time()
   172    371.0 MiB    -38.4 MiB       40717           try:
   173    371.0 MiB    -34.3 MiB       40717               im = blackFly.get_array(False)
   174    371.0 MiB    -25.3 MiB       27934               t = time.time()
   175    371.0 MiB    -25.3 MiB       27934               rec_frames += 1
   176    371.0 MiB    -23.1 MiB       27934               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    371.0 MiB    -25.3 MiB       27934               t_while_end = time.time()
   197                                                     
   198                                         
   199    371.0 MiB    -25.3 MiB       27934               try:
   200    371.0 MiB    -24.9 MiB       27934                   img_show_queue.put_nowait([im,rec_frames, t])
   201    371.0 MiB    -24.0 MiB       26325               except queue.Full:
   202    371.0 MiB    -24.0 MiB       26325                   pass
   203                                         
   204    371.0 MiB    -25.3 MiB       27934               avg_while += t_while_end - t_while_start
   205    371.0 MiB    -25.3 MiB       27934               n += 1
   206    371.0 MiB    -13.1 MiB       12783           except SpinnakerException:              # If no new frame - pass
   207    371.0 MiB    -13.1 MiB       12783               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    371.0 MiB    -12.9 MiB       12783               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.5 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.5 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.5 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.5 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.5 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.5 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.5 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.5 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.5 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.5 MiB      0.0 MiB           1       counter = [0,0]
   102    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.5 MiB      0.0 MiB           1       try:
   106    363.1 MiB      0.6 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    363.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    363.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    363.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.1 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.3 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.3 MiB      0.0 MiB           1       w_start = time.time()
   140    363.3 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.9 MiB      0.6 MiB           1       im = blackFly.get_array()
   147    363.9 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.9 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.8 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.8 MiB      0.0 MiB           1       rec_frames = 1
   158    364.8 MiB      0.0 MiB           1       e = 0
   159    364.8 MiB      0.0 MiB           1       n = 0
   160    364.8 MiB      0.0 MiB           1       n_else = 0
   161    364.8 MiB      0.0 MiB           1       t_start = time.time()
   162    364.8 MiB      0.0 MiB           1       avg_while = 0
   163    364.8 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.8 MiB      0.0 MiB           1       curr_FPS = []
   165    364.8 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.8 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.8 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    533.9 MiB -102927.5 MiB      863420       while cam_recording_ready.is_set():
   171    533.9 MiB -102929.4 MiB      863419           t_while_start = time.time()
   172    533.9 MiB -102929.5 MiB      863419           try:
   173    533.9 MiB -102769.9 MiB      863419               im = blackFly.get_array(False)
   174    533.9 MiB -47516.0 MiB      403418               t = time.time()
   175    533.9 MiB -47516.6 MiB      403418               rec_frames += 1
   176    533.9 MiB -47505.2 MiB      403418               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    533.9 MiB -47515.8 MiB      403418               t_while_end = time.time()
   197                                                     
   198                                         
   199    533.9 MiB -47507.4 MiB      403418               try:
   200    533.9 MiB -47503.2 MiB      403418                   img_show_queue.put_nowait([im,rec_frames, t])
   201    533.9 MiB -43807.8 MiB      379745               except queue.Full:
   202    533.9 MiB -43802.3 MiB      379745                   pass
   203                                         
   204    533.9 MiB -47499.8 MiB      403418               avg_while += t_while_end - t_while_start
   205    533.9 MiB -47505.5 MiB      403418               n += 1
   206    533.9 MiB -55418.3 MiB      460001           except SpinnakerException:              # If no new frame - pass
   207    533.9 MiB -55396.9 MiB      460001               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    533.9 MiB -55396.9 MiB      460001               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.3 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.1 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.2 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.1 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.1 MiB    -73.5 MiB       30710       while cam_recording_ready.is_set():
   171    368.1 MiB    -73.5 MiB       30709           t_while_start = time.time()
   172    368.1 MiB    -73.4 MiB       30709           try:
   173    368.1 MiB    -70.7 MiB       30709               im = blackFly.get_array(False)
   174    368.1 MiB    -59.9 MiB       24986               t = time.time()
   175    368.1 MiB    -59.9 MiB       24986               rec_frames += 1
   176    368.1 MiB    -59.4 MiB       24986               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.1 MiB    -59.9 MiB       24986               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.1 MiB    -59.9 MiB       24986               try:
   200    368.1 MiB    -59.5 MiB       24986                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.1 MiB    -57.8 MiB       24200               except queue.Full:
   202    368.1 MiB    -58.0 MiB       24200                   pass
   203                                         
   204    368.1 MiB    -59.9 MiB       24986               avg_while += t_while_end - t_while_start
   205    368.1 MiB    -59.7 MiB       24986               n += 1
   206    368.1 MiB    -13.5 MiB        5723           except SpinnakerException:              # If no new frame - pass
   207    368.1 MiB    -10.8 MiB        5723               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.1 MiB    -10.8 MiB        5723               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.6 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.4 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.6 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.3 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.3 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.3 MiB      0.0 MiB           1       counter = [0,0]
   102    362.3 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.3 MiB      0.0 MiB           1       try:
   106    362.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.3 MiB      0.0 MiB           1       except CameraError:
   111    362.3 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    362.3 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    362.3 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    362.3 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    362.3 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.3 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.3 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.5 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.4 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    363.4 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.4 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.7 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    364.5 MiB      0.8 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.5 MiB      0.0 MiB           1       rec_frames = 1
   158    364.5 MiB      0.0 MiB           1       e = 0
   159    364.5 MiB      0.0 MiB           1       n = 0
   160    364.5 MiB      0.0 MiB           1       n_else = 0
   161    364.5 MiB      0.0 MiB           1       t_start = time.time()
   162    364.5 MiB      0.0 MiB           1       avg_while = 0
   163    364.5 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.5 MiB      0.0 MiB           1       curr_FPS = []
   165    364.5 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.5 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.5 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    481.0 MiB  -1950.2 MiB      971847       while cam_recording_ready.is_set():
   171    481.0 MiB  -1950.2 MiB      971846           t_while_start = time.time()
   172    481.0 MiB  -1950.2 MiB      971846           try:
   173    481.0 MiB  -1848.5 MiB      971846               im = blackFly.get_array(False)
   174    481.0 MiB  -1298.3 MiB      650303               t = time.time()
   175    481.0 MiB  -1292.2 MiB      650303               rec_frames += 1
   176    481.0 MiB  -1279.7 MiB      650303               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    481.0 MiB  -1291.2 MiB      650303               t_while_end = time.time()
   197                                                     
   198                                         
   199    481.0 MiB  -1291.2 MiB      650303               try:
   200    481.0 MiB  -1287.6 MiB      650303                   img_show_queue.put_nowait([im,rec_frames, t])
   201    481.0 MiB  -1258.3 MiB      632718               except queue.Full:
   202    481.0 MiB  -1253.1 MiB      632718                   pass
   203                                         
   204    481.0 MiB  -1288.0 MiB      650303               avg_while += t_while_end - t_while_start
   205    481.0 MiB  -1287.8 MiB      650303               n += 1
   206    481.0 MiB   -659.7 MiB      321543           except SpinnakerException:              # If no new frame - pass
   207    481.0 MiB   -646.1 MiB      321543               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    481.0 MiB   -646.1 MiB      321543               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.8 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.8 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    362.1 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.7 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.9 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.9 MiB      0.0 MiB           1       counter = [0,0]
   102    362.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.9 MiB      0.0 MiB           1       try:
   106    362.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.3 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.5 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.5 MiB      0.0 MiB           1       w_start = time.time()
   140    363.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.9 MiB      1.1 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.9 MiB      0.0 MiB           1       rec_frames = 1
   158    364.9 MiB      0.0 MiB           1       e = 0
   159    364.9 MiB      0.0 MiB           1       n = 0
   160    364.9 MiB      0.0 MiB           1       n_else = 0
   161    364.9 MiB      0.0 MiB           1       t_start = time.time()
   162    364.9 MiB      0.0 MiB           1       avg_while = 0
   163    364.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.9 MiB      0.0 MiB           1       curr_FPS = []
   165    364.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    506.5 MiB  -2513.2 MiB     1241363       while cam_recording_ready.is_set():
   171    506.5 MiB  -2513.2 MiB     1241362           t_while_start = time.time()
   172    506.5 MiB  -2513.3 MiB     1241362           try:
   173    506.5 MiB  -2388.0 MiB     1241362               im = blackFly.get_array(False)
   174    506.2 MiB  -1690.0 MiB      851386               t = time.time()
   175    506.2 MiB  -1690.0 MiB      851386               rec_frames += 1
   176    506.2 MiB  -1669.7 MiB      851386               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    506.2 MiB  -1680.2 MiB      851386               t_while_end = time.time()
   197                                                     
   198                                         
   199    506.2 MiB  -1681.3 MiB      851386               try:
   200    506.2 MiB  -1674.4 MiB      851386                   img_show_queue.put_nowait([im,rec_frames, t])
   201    506.2 MiB  -1630.8 MiB      823603               except queue.Full:
   202    506.2 MiB  -1631.4 MiB      823603                   pass
   203                                         
   204    506.2 MiB  -1691.2 MiB      851386               avg_while += t_while_end - t_while_start
   205    506.2 MiB  -1691.2 MiB      851386               n += 1
   206    506.5 MiB   -822.1 MiB      389976           except SpinnakerException:              # If no new frame - pass
   207    506.5 MiB   -811.3 MiB      389976               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    506.5 MiB   -811.3 MiB      389976               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.3 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    360.9 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.5 MiB      0.6 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    361.8 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.8 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.3 MiB      0.6 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.6 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.6 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.6 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.6 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.6 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.6 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.6 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.6 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.6 MiB      0.0 MiB           1       w_start = time.time()
   140    362.6 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.6 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.6 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.6 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.6 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.4 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    363.7 MiB      0.2 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.2 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    399.3 MiB  -1134.9 MiB      415262       while cam_recording_ready.is_set():
   171    399.3 MiB  -1134.9 MiB      415261           t_while_start = time.time()
   172    399.3 MiB  -1134.9 MiB      415261           try:
   173    399.3 MiB  -1104.8 MiB      415261               im = blackFly.get_array(False)
   174    399.3 MiB   -863.2 MiB      325777               t = time.time()
   175    399.3 MiB   -863.4 MiB      325777               rec_frames += 1
   176    399.3 MiB   -858.0 MiB      325777               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    399.3 MiB   -861.5 MiB      325777               t_while_end = time.time()
   197                                                     
   198                                         
   199    399.3 MiB   -862.0 MiB      325777               try:
   200    399.3 MiB   -859.8 MiB      325777                   img_show_queue.put_nowait([im,rec_frames, t])
   201    399.3 MiB   -843.5 MiB      318150               except queue.Full:
   202    399.3 MiB   -843.7 MiB      318150                   pass
   203                                         
   204    399.3 MiB   -863.9 MiB      325777               avg_while += t_while_end - t_while_start
   205    399.3 MiB   -863.9 MiB      325777               n += 1
   206    399.3 MiB   -271.0 MiB       89484           except SpinnakerException:              # If no new frame - pass
   207    399.3 MiB   -268.3 MiB       89484               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    399.3 MiB   -268.3 MiB       89484               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    316.9 MiB    316.9 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    316.9 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.1 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.1 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.1 MiB      0.0 MiB           1       try:
    42    340.8 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    360.6 MiB     19.8 MiB           1           tmp_cam.init()
    44    360.0 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    360.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.1 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.1 MiB      0.0 MiB           1       counter = [0,0]
   102    361.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.1 MiB      0.0 MiB           1       try:
   106    361.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    361.1 MiB      0.0 MiB           1       except CameraError:
   111    361.1 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    361.1 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    361.1 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    361.1 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    361.1 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.6 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    361.7 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    361.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    361.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    361.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    361.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    361.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    361.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    361.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    361.7 MiB      0.0 MiB           1       w_start = time.time()
   140    361.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    361.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    361.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    361.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    361.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.0 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.3 MiB      1.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.3 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.3 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.3 MiB      0.0 MiB           1       rec_frames = 1
   158    363.3 MiB      0.0 MiB           1       e = 0
   159    363.3 MiB      0.0 MiB           1       n = 0
   160    363.3 MiB      0.0 MiB           1       n_else = 0
   161    363.3 MiB      0.0 MiB           1       t_start = time.time()
   162    363.3 MiB      0.0 MiB           1       avg_while = 0
   163    363.3 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.3 MiB      0.0 MiB           1       curr_FPS = []
   165    363.3 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.3 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.3 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.9 MiB     -0.0 MiB       25777       while cam_recording_ready.is_set():
   171    368.9 MiB     -0.0 MiB       25776           t_while_start = time.time()
   172    368.9 MiB     -0.0 MiB       25776           try:
   173    368.9 MiB      4.9 MiB       25776               im = blackFly.get_array(False)
   174    368.9 MiB      0.3 MiB       18596               t = time.time()
   175    368.9 MiB     -0.0 MiB       18596               rec_frames += 1
   176    368.9 MiB      0.2 MiB       18596               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.9 MiB      0.2 MiB       18596               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.9 MiB     -0.0 MiB       18596               try:
   200    368.9 MiB     -0.0 MiB       18596                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.9 MiB     -0.0 MiB       18010               except queue.Full:
   202    368.9 MiB     -0.0 MiB       18010                   pass
   203                                         
   204    368.9 MiB     -0.0 MiB       18596               avg_while += t_while_end - t_while_start
   205    368.9 MiB     -0.0 MiB       18596               n += 1
   206    368.9 MiB      0.0 MiB        7180           except SpinnakerException:              # If no new frame - pass
   207    368.9 MiB      0.0 MiB        7180               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.9 MiB      0.0 MiB        7180               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.1 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.6 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    363.6 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.6 MiB      0.0 MiB           1       rec_frames = 1
   158    363.6 MiB      0.0 MiB           1       e = 0
   159    363.6 MiB      0.0 MiB           1       n = 0
   160    363.6 MiB      0.0 MiB           1       n_else = 0
   161    363.6 MiB      0.0 MiB           1       t_start = time.time()
   162    363.6 MiB      0.0 MiB           1       avg_while = 0
   163    363.6 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.6 MiB      0.0 MiB           1       curr_FPS = []
   165    363.6 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.6 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.6 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    369.9 MiB      0.0 MiB       28364       while cam_recording_ready.is_set():
   171    369.9 MiB     -0.0 MiB       28363           t_while_start = time.time()
   172    369.9 MiB     -0.0 MiB       28363           try:
   173    369.9 MiB      5.5 MiB       28363               im = blackFly.get_array(False)
   174    369.9 MiB     -0.0 MiB       20114               t = time.time()
   175    369.9 MiB     -0.0 MiB       20114               rec_frames += 1
   176    369.9 MiB      0.4 MiB       20114               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    369.9 MiB      0.0 MiB       20114               t_while_end = time.time()
   197                                                     
   198                                         
   199    369.9 MiB     -0.0 MiB       20114               try:
   200    369.9 MiB      0.2 MiB       20114                   img_show_queue.put_nowait([im,rec_frames, t])
   201    369.9 MiB     -0.0 MiB       19509               except queue.Full:
   202    369.9 MiB      0.0 MiB       19509                   pass
   203                                         
   204    369.9 MiB     -0.0 MiB       20114               avg_while += t_while_end - t_while_start
   205    369.9 MiB     -0.0 MiB       20114               n += 1
   206    369.9 MiB      0.0 MiB        8249           except SpinnakerException:              # If no new frame - pass
   207    369.9 MiB      0.0 MiB        8249               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    369.9 MiB      0.0 MiB        8249               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.4 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.2 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.7 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.2 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.0 MiB     -0.0 MiB       18880       while cam_recording_ready.is_set():
   171    368.0 MiB     -0.0 MiB       18879           t_while_start = time.time()
   172    368.0 MiB     -0.0 MiB       18879           try:
   173    368.0 MiB      3.0 MiB       18879               im = blackFly.get_array(False)
   174    368.0 MiB     -0.0 MiB       13263               t = time.time()
   175    368.0 MiB     -0.0 MiB       13263               rec_frames += 1
   176    368.0 MiB      0.3 MiB       13263               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.0 MiB      0.0 MiB       13263               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.0 MiB      0.0 MiB       13263               try:
   200    368.0 MiB      0.4 MiB       13263                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.0 MiB     -0.0 MiB       12795               except queue.Full:
   202    368.0 MiB     -0.0 MiB       12795                   pass
   203                                         
   204    368.0 MiB      0.0 MiB       13263               avg_while += t_while_end - t_while_start
   205    368.0 MiB     -0.0 MiB       13263               n += 1
   206    368.0 MiB      0.0 MiB        5616           except SpinnakerException:              # If no new frame - pass
   207    368.0 MiB      0.0 MiB        5616               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.0 MiB      0.0 MiB        5616               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.4 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    361.2 MiB     19.8 MiB           1           tmp_cam.init()
    44    360.6 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    360.8 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.7 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.7 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.7 MiB      0.0 MiB           1       counter = [0,0]
   102    361.7 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.7 MiB      0.0 MiB           1       try:
   106    361.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.7 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.7 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.7 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.2 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.4 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.4 MiB      0.0 MiB           1       w_start = time.time()
   140    362.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.7 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    363.7 MiB      1.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.7 MiB      0.0 MiB           1       rec_frames = 1
   158    363.7 MiB      0.0 MiB           1       e = 0
   159    363.7 MiB      0.0 MiB           1       n = 0
   160    363.7 MiB      0.0 MiB           1       n_else = 0
   161    363.7 MiB      0.0 MiB           1       t_start = time.time()
   162    363.7 MiB      0.0 MiB           1       avg_while = 0
   163    363.7 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.7 MiB      0.0 MiB           1       curr_FPS = []
   165    363.7 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.7 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.7 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.1 MiB     -8.6 MiB       21446       while cam_recording_ready.is_set():
   171    368.1 MiB     -8.6 MiB       21445           t_while_start = time.time()
   172    368.1 MiB     -8.5 MiB       21445           try:
   173    368.1 MiB     -5.0 MiB       21445               im = blackFly.get_array(False)
   174    368.1 MiB     -5.9 MiB       14999               t = time.time()
   175    368.1 MiB     -5.9 MiB       14999               rec_frames += 1
   176    368.1 MiB     -5.3 MiB       14999               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.1 MiB     -5.8 MiB       14999               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.1 MiB     -5.8 MiB       14999               try:
   200    368.1 MiB     -5.8 MiB       14999                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.1 MiB     -5.7 MiB       14549               except queue.Full:
   202    368.1 MiB     -5.5 MiB       14549                   pass
   203                                         
   204    368.1 MiB     -5.8 MiB       14999               avg_while += t_while_end - t_while_start
   205    368.1 MiB     -5.9 MiB       14999               n += 1
   206    368.1 MiB     -2.7 MiB        6446           except SpinnakerException:              # If no new frame - pass
   207    368.1 MiB     -2.7 MiB        6446               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.1 MiB     -2.7 MiB        6446               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.1 MiB      0.0 MiB           1       counter = [0,0]
   102    362.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.1 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.9 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.9 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.9 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.9 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.9 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.9 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.9 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.9 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.9 MiB      0.0 MiB           1       w_start = time.time()
   140    362.9 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.9 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.1 MiB      0.8 MiB           1       img_proc_queue.put([im,0])
   151    364.4 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.4 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.0 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.6 MiB     -8.7 MiB       24999       while cam_recording_ready.is_set():
   171    368.6 MiB     -8.7 MiB       24998           t_while_start = time.time()
   172    368.6 MiB     -8.7 MiB       24998           try:
   173    368.6 MiB     -4.9 MiB       24998               im = blackFly.get_array(False)
   174    368.6 MiB     -6.0 MiB       17510               t = time.time()
   175    368.6 MiB     -6.0 MiB       17510               rec_frames += 1
   176    368.6 MiB     -5.8 MiB       17510               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.6 MiB     -6.0 MiB       17510               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.6 MiB     -6.0 MiB       17510               try:
   200    368.6 MiB     -5.8 MiB       17510                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.6 MiB     -5.8 MiB       16952               except queue.Full:
   202    368.6 MiB     -5.8 MiB       16952                   pass
   203                                         
   204    368.6 MiB     -6.0 MiB       17510               avg_while += t_while_end - t_while_start
   205    368.6 MiB     -6.0 MiB       17510               n += 1
   206    368.6 MiB     -2.7 MiB        7488           except SpinnakerException:              # If no new frame - pass
   207    368.6 MiB     -2.7 MiB        7488               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.6 MiB     -2.7 MiB        7488               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.1 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.3 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.4 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.4 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.6 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.6 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    369.4 MiB      0.0 MiB       32605       while cam_recording_ready.is_set():
   171    369.4 MiB      0.0 MiB       32604           t_while_start = time.time()
   172    369.4 MiB      0.0 MiB       32604           try:
   173    369.4 MiB      5.2 MiB       32604               im = blackFly.get_array(False)
   174    369.4 MiB      0.0 MiB       23254               t = time.time()
   175    369.4 MiB      0.0 MiB       23254               rec_frames += 1
   176    369.4 MiB      0.1 MiB       23254               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    369.4 MiB      0.0 MiB       23254               t_while_end = time.time()
   197                                                     
   198                                         
   199    369.4 MiB      0.0 MiB       23254               try:
   200    369.4 MiB      0.2 MiB       23254                   img_show_queue.put_nowait([im,rec_frames, t])
   201    369.4 MiB      0.0 MiB       22513               except queue.Full:
   202    369.4 MiB      0.0 MiB       22513                   pass
   203                                         
   204    369.4 MiB      0.0 MiB       23254               avg_while += t_while_end - t_while_start
   205    369.4 MiB      0.0 MiB       23254               n += 1
   206    369.4 MiB      0.0 MiB        9350           except SpinnakerException:              # If no new frame - pass
   207    369.4 MiB      0.0 MiB        9350               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    369.4 MiB      0.0 MiB        9350               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.2 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.3 MiB     20.2 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.8 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.8 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.8 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.8 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.8 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.8 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.8 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.8 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.8 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.8 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.8 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.8 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.8 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.8 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.8 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.8 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.8 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.8 MiB      0.0 MiB           1       counter = [0,0]
   102    361.8 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.8 MiB      0.0 MiB           1       try:
   106    361.8 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.8 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.8 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.8 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.8 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.8 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.4 MiB      0.6 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.4 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.5 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.5 MiB      0.0 MiB           1       w_start = time.time()
   140    362.5 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.5 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.1 MiB      1.1 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.4 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.4 MiB      0.0 MiB           1       rec_frames = 1
   158    364.4 MiB      0.0 MiB           1       e = 0
   159    364.4 MiB      0.0 MiB           1       n = 0
   160    364.4 MiB      0.0 MiB           1       n_else = 0
   161    364.4 MiB      0.0 MiB           1       t_start = time.time()
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.4 MiB      0.0 MiB           1       curr_FPS = []
   165    364.4 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.4 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.4 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.7 MiB     -0.1 MiB       21138       while cam_recording_ready.is_set():
   171    368.7 MiB     -0.1 MiB       21137           t_while_start = time.time()
   172    368.7 MiB     -0.1 MiB       21137           try:
   173    368.7 MiB      3.7 MiB       21137               im = blackFly.get_array(False)
   174    368.7 MiB     -0.1 MiB       14813               t = time.time()
   175    368.7 MiB     -0.1 MiB       14813               rec_frames += 1
   176    368.7 MiB     -0.0 MiB       14813               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.7 MiB     -0.0 MiB       14813               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.7 MiB     -0.0 MiB       14813               try:
   200    368.7 MiB      0.4 MiB       14813                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.7 MiB     -0.1 MiB       14347               except queue.Full:
   202    368.7 MiB     -0.1 MiB       14347                   pass
   203                                         
   204    368.7 MiB     -0.1 MiB       14813               avg_while += t_while_end - t_while_start
   205    368.7 MiB     -0.1 MiB       14813               n += 1
   206    368.7 MiB     -0.0 MiB        6324           except SpinnakerException:              # If no new frame - pass
   207    368.7 MiB     -0.0 MiB        6324               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.7 MiB     -0.0 MiB        6324               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.2 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.1 MiB           1           tmp_cam.init()
    44    361.0 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.1 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.1 MiB      0.0 MiB           1       counter = [0,0]
   102    362.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.1 MiB      0.0 MiB           1       try:
   106    362.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    375.9 MiB     -0.0 MiB       88808       while cam_recording_ready.is_set():
   171    375.9 MiB     -0.0 MiB       88807           t_while_start = time.time()
   172    375.9 MiB     -0.0 MiB       88807           try:
   173    375.9 MiB      9.8 MiB       88807               im = blackFly.get_array(False)
   174    375.9 MiB     -0.0 MiB       62360               t = time.time()
   175    375.9 MiB     -0.0 MiB       62360               rec_frames += 1
   176    375.9 MiB      1.4 MiB       62360               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    375.9 MiB      0.2 MiB       62360               t_while_end = time.time()
   197                                                     
   198                                         
   199    375.9 MiB      0.0 MiB       62360               try:
   200    375.9 MiB      0.0 MiB       62360                   img_show_queue.put_nowait([im,rec_frames, t])
   201    375.9 MiB      0.1 MiB       60393               except queue.Full:
   202    375.9 MiB     -0.0 MiB       60393                   pass
   203                                         
   204    375.9 MiB     -0.0 MiB       62360               avg_while += t_while_end - t_while_start
   205    375.9 MiB     -0.0 MiB       62360               n += 1
   206    375.9 MiB     -0.0 MiB       26447           except SpinnakerException:              # If no new frame - pass
   207    375.9 MiB      0.0 MiB       26447               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    375.9 MiB     -0.0 MiB       26447               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.1 MiB    317.1 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.1 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.2 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.0 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.9 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.9 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.9 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.9 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.9 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.9 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.9 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.9 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.9 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.9 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.9 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.9 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.9 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.9 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.9 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.9 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.9 MiB      0.0 MiB           1       counter = [0,0]
   102    361.9 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.9 MiB      0.0 MiB           1       try:
   106    361.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.9 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.9 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.9 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.3 MiB      0.2 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.6 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162    363.9 MiB      0.0 MiB           1       avg_while = 0
   163    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.9 MiB      0.0 MiB           1       curr_FPS = []
   165    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    367.9 MiB     -9.1 MiB       18577       while cam_recording_ready.is_set():
   171    367.9 MiB     -9.1 MiB       18576           t_while_start = time.time()
   172    367.9 MiB     -9.1 MiB       18576           try:
   173    367.9 MiB     -5.9 MiB       18576               im = blackFly.get_array(False)
   174    367.9 MiB     -6.3 MiB       13187               t = time.time()
   175    367.9 MiB     -6.4 MiB       13187               rec_frames += 1
   176    367.9 MiB     -6.3 MiB       13187               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    367.9 MiB     -6.4 MiB       13187               t_while_end = time.time()
   197                                                     
   198                                         
   199    367.9 MiB     -6.4 MiB       13187               try:
   200    367.9 MiB     -6.1 MiB       13187                   img_show_queue.put_nowait([im,rec_frames, t])
   201    367.9 MiB     -6.2 MiB       12806               except queue.Full:
   202    367.9 MiB     -6.2 MiB       12806                   pass
   203                                         
   204    367.9 MiB     -6.4 MiB       13187               avg_while += t_while_end - t_while_start
   205    367.9 MiB     -6.4 MiB       13187               n += 1
   206    367.9 MiB     -2.7 MiB        5389           except SpinnakerException:              # If no new frame - pass
   207    367.9 MiB     -2.7 MiB        5389               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    367.9 MiB     -2.7 MiB        5389               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.0 MiB    317.0 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.0 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.2 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.2 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.2 MiB      0.0 MiB           1       try:
    42    340.8 MiB     23.5 MiB           1           tmp_cam = Camera()
    43    360.7 MiB     19.9 MiB           1           tmp_cam.init()
    44    360.0 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    360.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.1 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.1 MiB      0.0 MiB           1       counter = [0,0]
   102    361.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.1 MiB      0.0 MiB           1       try:
   106    361.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.6 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    361.7 MiB      0.0 MiB           1       blackFly.start()
   130                                                 
   131    361.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    361.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    361.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    361.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    361.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    361.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    361.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    361.7 MiB      0.0 MiB           1       w_start = time.time()
   140    361.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    361.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    361.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    361.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    361.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.0 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.0 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.0 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.7 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    362.9 MiB      0.3 MiB           1       img_show_queue.put([im,0,time.time()])
   152    362.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    362.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    362.9 MiB      0.0 MiB           1       rec_frames = 1
   158    362.9 MiB      0.0 MiB           1       e = 0
   159    362.9 MiB      0.0 MiB           1       n = 0
   160    362.9 MiB      0.0 MiB           1       n_else = 0
   161    362.9 MiB      0.0 MiB           1       t_start = time.time()
   162    362.9 MiB      0.0 MiB           1       avg_while = 0
   163    362.9 MiB      0.0 MiB           1       t_else_avg = 0
   164    362.9 MiB      0.0 MiB           1       curr_FPS = []
   165    362.9 MiB      0.0 MiB           1       curr_img_count = 0
   166    362.9 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    362.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    494.0 MiB  -1139.9 MiB     1087173       while cam_recording_ready.is_set():
   171    494.0 MiB  -1140.0 MiB     1087172           t_while_start = time.time()
   172    494.0 MiB  -1139.9 MiB     1087172           try:
   173    494.0 MiB  -1070.1 MiB     1087172               im = blackFly.get_array(False)
   174    494.0 MiB   -760.2 MiB      729134               t = time.time()
   175    494.0 MiB   -754.6 MiB      729134               rec_frames += 1
   176    494.0 MiB   -749.3 MiB      729134               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    494.0 MiB   -742.2 MiB      729134               t_while_end = time.time()
   197                                                     
   198                                         
   199    494.0 MiB   -754.4 MiB      729134               try:
   200    494.0 MiB   -760.4 MiB      729134                   img_show_queue.put_nowait([im,rec_frames, t])
   201    494.0 MiB   -738.5 MiB      709893               except queue.Full:
   202    494.0 MiB   -731.4 MiB      709893                   pass
   203                                         
   204    494.0 MiB   -749.6 MiB      729134               avg_while += t_while_end - t_while_start
   205    494.0 MiB   -749.6 MiB      729134               n += 1
   206    494.0 MiB   -382.7 MiB      358038           except SpinnakerException:              # If no new frame - pass
   207    494.0 MiB   -335.4 MiB      358038               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    494.0 MiB   -301.7 MiB      358038               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.2 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.2 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    361.4 MiB     20.2 MiB           1           tmp_cam.init()
    44    360.8 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.5 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.5 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.7 MiB      0.1 MiB           1       blackFly.start()
   130                                                 
   131    362.7 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.7 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.7 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.7 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.7 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.7 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.7 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.7 MiB      0.0 MiB           1       w_start = time.time()
   140    362.7 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.7 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.7 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.7 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.7 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      0.9 MiB           1       img_proc_queue.put([im,0])
   151    364.0 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.0 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.0 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.0 MiB      0.0 MiB           1       rec_frames = 1
   158    364.0 MiB      0.0 MiB           1       e = 0
   159    364.0 MiB      0.0 MiB           1       n = 0
   160    364.0 MiB      0.0 MiB           1       n_else = 0
   161    364.0 MiB      0.0 MiB           1       t_start = time.time()
   162    364.0 MiB      0.0 MiB           1       avg_while = 0
   163    364.0 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.0 MiB      0.0 MiB           1       curr_FPS = []
   165    364.0 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.0 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.0 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    368.9 MiB     -0.0 MiB       27079       while cam_recording_ready.is_set():
   171    368.9 MiB     -0.1 MiB       27078           t_while_start = time.time()
   172    368.9 MiB     -0.1 MiB       27078           try:
   173    368.9 MiB      3.2 MiB       27078               im = blackFly.get_array(False)
   174    368.9 MiB     -0.1 MiB       18071               t = time.time()
   175    368.9 MiB     -0.0 MiB       18071               rec_frames += 1
   176    368.9 MiB      0.4 MiB       18071               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    368.9 MiB      0.2 MiB       18071               t_while_end = time.time()
   197                                                     
   198                                         
   199    368.9 MiB     -0.0 MiB       18071               try:
   200    368.9 MiB      0.2 MiB       18071                   img_show_queue.put_nowait([im,rec_frames, t])
   201    368.9 MiB     -0.1 MiB       17361               except queue.Full:
   202    368.9 MiB     -0.1 MiB       17361                   pass
   203                                         
   204    368.9 MiB     -0.1 MiB       18071               avg_while += t_while_end - t_while_start
   205    368.9 MiB     -0.1 MiB       18071               n += 1
   206    368.9 MiB      0.0 MiB        9007           except SpinnakerException:              # If no new frame - pass
   207    368.9 MiB      0.0 MiB        9007               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    368.9 MiB      0.7 MiB        9007               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    316.9 MiB    316.9 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    316.9 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.0 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.2 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.2 MiB      0.0 MiB           1       try:
    42    340.7 MiB     23.5 MiB           1           tmp_cam = Camera()
    43    360.6 MiB     19.9 MiB           1           tmp_cam.init()
    44    360.0 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    360.1 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    361.1 MiB      1.0 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    361.1 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    361.1 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    361.1 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    361.1 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    361.1 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    361.1 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    361.1 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    361.1 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    361.1 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    361.1 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    361.1 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    361.1 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    361.1 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    361.1 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    361.1 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    361.1 MiB      0.0 MiB           1       tot_count = [0,0]
   101    361.1 MiB      0.0 MiB           1       counter = [0,0]
   102    361.1 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    361.1 MiB      0.0 MiB           1       try:
   106    361.1 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    361.1 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    361.1 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    361.1 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    361.1 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    361.6 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    361.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    361.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    361.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    361.8 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    361.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    361.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    361.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    361.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    361.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    361.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    361.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    361.8 MiB      0.0 MiB           1       w_start = time.time()
   140    361.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    361.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    361.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    361.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    361.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    362.1 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    362.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    362.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    362.4 MiB      0.3 MiB           1       img_proc_queue.put([im,0])
   151    362.4 MiB      0.0 MiB           1       img_show_queue.put([im,0,time.time()])
   152    363.2 MiB      0.8 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.2 MiB      0.0 MiB           1       rec_frames = 1
   158    363.2 MiB      0.0 MiB           1       e = 0
   159    363.2 MiB      0.0 MiB           1       n = 0
   160    363.2 MiB      0.0 MiB           1       n_else = 0
   161    363.2 MiB      0.0 MiB           1       t_start = time.time()
   162    363.2 MiB      0.0 MiB           1       avg_while = 0
   163    363.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    363.2 MiB      0.0 MiB           1       curr_FPS = []
   165    363.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    363.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    363.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    528.3 MiB  -1438.4 MiB     1358789       while cam_recording_ready.is_set():
   171    528.3 MiB  -1438.4 MiB     1358788           t_while_start = time.time()
   172    528.3 MiB  -1438.4 MiB     1358788           try:
   173    528.3 MiB  -1352.3 MiB     1358788               im = blackFly.get_array(False)
   174    528.3 MiB   -947.3 MiB      903617               t = time.time()
   175    528.3 MiB   -947.3 MiB      903617               rec_frames += 1
   176    528.3 MiB   -941.7 MiB      903617               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    528.3 MiB   -932.8 MiB      903617               t_while_end = time.time()
   197                                                     
   198                                         
   199    528.3 MiB   -946.9 MiB      903617               try:
   200    528.3 MiB   -946.2 MiB      903617                   img_show_queue.put_nowait([im,rec_frames, t])
   201    528.3 MiB   -917.4 MiB      879996               except queue.Full:
   202    528.3 MiB   -921.7 MiB      879996                   pass
   203                                         
   204    528.3 MiB   -946.7 MiB      903617               avg_while += t_while_end - t_while_start
   205    528.3 MiB   -947.7 MiB      903617               n += 1
   206    528.3 MiB   -482.3 MiB      455171           except SpinnakerException:              # If no new frame - pass
   207    528.3 MiB   -435.9 MiB      455171               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    528.3 MiB   -391.2 MiB      455171               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.3 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    361.5 MiB     20.0 MiB           1           tmp_cam.init()
    44    360.9 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.1 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.9 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.5 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.5 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.6 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.6 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.1 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.1 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.1 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.4 MiB      0.3 MiB           1       img_proc_queue.put([im,0])
   151    364.1 MiB      0.6 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.3 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.3 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.3 MiB      0.0 MiB           1       rec_frames = 1
   158    364.3 MiB      0.0 MiB           1       e = 0
   159    364.3 MiB      0.0 MiB           1       n = 0
   160    364.3 MiB      0.0 MiB           1       n_else = 0
   161    364.3 MiB      0.0 MiB           1       t_start = time.time()
   162    364.3 MiB      0.0 MiB           1       avg_while = 0
   163    364.3 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.3 MiB      0.0 MiB           1       curr_FPS = []
   165    364.3 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.3 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.3 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    418.0 MiB  -1227.1 MiB      418074       while cam_recording_ready.is_set():
   171    418.0 MiB  -1227.1 MiB      418073           t_while_start = time.time()
   172    418.0 MiB  -1227.0 MiB      418073           try:
   173    418.0 MiB  -1200.9 MiB      418073               im = blackFly.get_array(False)
   174    418.0 MiB   -806.9 MiB      273121               t = time.time()
   175    418.0 MiB   -806.9 MiB      273121               rec_frames += 1
   176    418.0 MiB   -801.9 MiB      273121               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    418.0 MiB   -796.3 MiB      273121               t_while_end = time.time()
   197                                                     
   198                                         
   199    418.0 MiB   -806.9 MiB      273121               try:
   200    418.0 MiB   -807.0 MiB      273121                   img_show_queue.put_nowait([im,rec_frames, t])
   201    418.0 MiB   -777.9 MiB      262548               except queue.Full:
   202    418.0 MiB   -777.9 MiB      262548                   pass
   203                                         
   204    418.0 MiB   -805.1 MiB      273121               avg_while += t_while_end - t_while_start
   205    418.0 MiB   -807.3 MiB      273121               n += 1
   206    418.0 MiB   -416.9 MiB      144952           except SpinnakerException:              # If no new frame - pass
   207    418.0 MiB   -374.0 MiB      144952               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
   221    418.0 MiB   -361.1 MiB      144952               """
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.0 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.6 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      1.0 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.0 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.0 MiB      0.0 MiB           1       w_start = time.time()
   140    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.4 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.4 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.4 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.4 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.9 MiB           1       img_show_queue.put([im,0,time.time()])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162    364.2 MiB      0.0 MiB           1       avg_while = 0
   163    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   164    364.2 MiB      0.0 MiB           1       curr_FPS = []
   165    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   166    364.2 MiB      0.0 MiB           1       check_FPS_interval = 60
   167    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   168                                         
   169                                             # Record until user asks for restart or quit
   170    489.4 MiB -191540.3 MiB     1042355       while cam_recording_ready.is_set():
   171    489.4 MiB -191548.3 MiB     1042354           t_while_start = time.time()
   172    489.4 MiB -191548.3 MiB     1042354           try:
   173    489.4 MiB -191433.5 MiB     1042354               im = blackFly.get_array(False)
   174    489.4 MiB -129528.7 MiB      706510               t = time.time()
   175    489.4 MiB -129528.7 MiB      706510               rec_frames += 1
   176    489.4 MiB -129514.0 MiB      706510               img_proc_queue.put_nowait([im,rec_frames])
   177                                         
   178                                                     """
   179                                                     # These counters count number of triggers and exposures
   180                                                     # of the camera to make sure the FPS is around 500.
   181                                                     # However, introducing this reduces fps to about 400, so 
   182                                                     # only use for debugging.
   183                                         
   184                                                     blackFly.CounterSelector = 'Counter0' 
   185                                                     curr_count[0] = blackFly.CounterValue
   186                                                     
   187                                                     blackFly.CounterSelector = 'Counter1'
   188                                                     curr_count[1] = blackFly.CounterValue
   189                                                     
   190                                                     for i in [0,1]:
   191                                                         if curr_count[i] < counter[i]: 
   192                                                             tot_count[i] += 1
   193                                                         counter[i] = curr_count[i]
   194                                                     """
   195                                                     
   196    489.4 MiB -129531.7 MiB      706510               t_while_end = time.time()
   197                                                     
   198                                         
   199    489.4 MiB -129532.0 MiB      706510               try:
   200    489.4 MiB -129527.3 MiB      706510                   img_show_queue.put_nowait([im,rec_frames, t])
   201    489.4 MiB -125053.5 MiB      681000               except queue.Full:
   202    489.4 MiB -125053.6 MiB      681000                   pass
   203                                         
   204    489.4 MiB -129533.9 MiB      706510               avg_while += t_while_end - t_while_start
   205    489.4 MiB -129534.0 MiB      706510               n += 1
   206    489.4 MiB -62014.3 MiB      335844           except SpinnakerException:              # If no new frame - pass
   207    489.4 MiB -62006.2 MiB      335844               e += 1
   208                                                     """
   209                                                     else:
   210                                                         t_else_start = time.time()
   211                                                                             # Else we want to show the most recent frame
   212                                                         try:
   213                                                             _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   214                                                         except queue.Empty:                 # Unless it is already been showed
   215                                                             pass
   216                                                         finally:
   217                                                             try:
   218                                                                 img_show_queue.put_nowait([im,rec_frames, t])
   219                                                             except queue.Full:
   220                                                                 pass
