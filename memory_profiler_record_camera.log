Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   352    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   353                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   354                                             """
   355                                             Function for recording from BlackFly.
   356                                             Gets camera specs from cam_specs (user input in main).
   357                                         
   358                                             All calls starting with blackFly.something makes physical changes to setup,
   359                                             so they must be updated each time we run the camera.
   360                                         
   361                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   362                                             and is set in the getUserInput thread.
   363                                             """
   364    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
   365                                         
   366    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
   367                                             
   368    317.5 MiB      0.0 MiB           1       faulthandler.enable()
   369                                         
   370                                             # Clean up any previous attachments
   371    317.5 MiB      0.0 MiB           1       try:
   372    347.0 MiB     29.5 MiB           1           tmp_cam = Camera()
   373    367.1 MiB     20.1 MiB           1           tmp_cam.init()
   374    366.6 MiB     -0.5 MiB           1           tmp_cam.close()
   375                                         
   376    366.7 MiB      0.1 MiB           1           blackFly = Camera()
   377                                             except (NameError , CameraError):
   378                                                 print("Camera not connected!")
   379                                                 sys.exit()
   380                                         
   381    367.6 MiB      0.8 MiB           1       blackFly.init()
   382                                         
   383                                             # Enable parameter editing
   384    367.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   385    367.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   386    367.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   387    367.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   388                                         
   389                                             # Settings for hardware trigger - do not edit
   390    367.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   391    367.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   392    367.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   393    367.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   394    367.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   395    367.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   396    367.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   397    367.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   398    367.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   399                                         
   400                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   401    367.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   402    367.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   403    367.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   404    367.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   405                                         
   406                                         
   407                                             # Setup counters to count missed triggers
   408    367.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   409    367.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   410    367.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   411    367.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   412    367.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   413    367.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   414                                         
   415    367.6 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   416                                         
   417    367.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   418    367.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   419    367.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   420    367.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   421    367.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   422    367.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   423                                         
   424    367.6 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   425                                         
   426    367.6 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   427    367.6 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   428                                         
   429    367.6 MiB      0.0 MiB           1       tot_count = [0,0]
   430    367.6 MiB      0.0 MiB           1       counter = [0,0]
   431    367.6 MiB      0.0 MiB           1       curr_count = [0,0]
   432                                         
   433                                             # Setting dimensions of camera images
   434    367.6 MiB      0.0 MiB           1       try:
   435    367.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   436    367.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   437    367.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   438    367.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   439                                             except CameraError:
   440                                                 print("Could not set camera height. Current properties:")
   441                                                 print(F"Height: {blackFly.Height}")
   442                                                 print(F"Width: {blackFly.Width}")
   443                                                 print(F"OffsetX: {blackFly.OffsetX}")
   444                                                 print(F"OffsetY: {blackFly.OffsetY}")
   445                                         
   446                                             #Save camera specs for later use
   447    367.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   448                                             
   449                                             # Queue for processing images
   450    367.6 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   451                                         
   452                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   453    368.1 MiB      0.5 MiB           1       n_used_proc = os.cpu_count() - 1
   454    368.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   455                                         
   456    368.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   457                                         
   458    368.2 MiB      0.1 MiB           1       blackFly.start()
   459                                                 
   460    368.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   461    368.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   462    368.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   463    368.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   464    368.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   465    368.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   466                                         
   467    368.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   468    368.2 MiB      0.0 MiB           1       w_start = time.time()
   469    368.2 MiB      0.0 MiB           1       img_process_ready.wait()
   470    368.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   471    368.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   472    368.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   473                                         
   474    368.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   475    368.5 MiB      0.3 MiB           1       im = blackFly.get_array()
   476    368.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   477                                             
   478    368.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   479    368.8 MiB      0.3 MiB           1       img_proc_queue.put([im,0])
   480    369.5 MiB      0.7 MiB           1       img_show_queue.put([im,0])
   481    369.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   482                                         
   483                                         
   484    369.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   485                                             
   486    369.5 MiB      0.0 MiB           1       rec_frames = 1
   487    369.5 MiB      0.0 MiB           1       e = 0
   488    369.5 MiB      0.0 MiB           1       n = 0
   489    369.5 MiB      0.0 MiB           1       n_else = 0
   490    369.5 MiB      0.0 MiB           1       t_start = time.time()
   491                                         
   492    369.5 MiB      0.0 MiB           1       avg_while = 0
   493    369.5 MiB      0.0 MiB           1       t_else_avg = 0
   494                                         
   495    369.5 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   496                                         
   497                                             # Record until user asks for restart or quit
   498    370.7 MiB      0.0 MiB        6957       while cam_recording_ready.is_set():
   499    370.7 MiB      0.0 MiB        6956           t_while_start = time.time()
   500    370.7 MiB      0.0 MiB        6956           try:
   501    370.7 MiB      0.4 MiB        6956               im = blackFly.get_array(False)
   502    370.7 MiB      0.0 MiB        6956               t = time.time()
   503    370.7 MiB      0.0 MiB        6956               rec_frames += 1
   504    370.7 MiB      0.0 MiB        6956               img_proc_queue.put_nowait([im,rec_frames])
   505                                         
   506                                                     """
   507                                                     # These counters count number of triggers and exposures
   508                                                     # of the camera to make sure the FPS is around 500.
   509                                                     # However, introducing this reduces fps to about 400, so 
   510                                                     # only use for debugging.
   511                                         
   512                                                     blackFly.CounterSelector = 'Counter0' 
   513                                                     curr_count[0] = blackFly.CounterValue
   514                                                     
   515                                                     blackFly.CounterSelector = 'Counter1'
   516                                                     curr_count[1] = blackFly.CounterValue
   517                                                     
   518                                                     for i in [0,1]:
   519                                                         if curr_count[i] < counter[i]: 
   520                                                             tot_count[i] += 1
   521                                                         counter[i] = curr_count[i]
   522                                                     """
   523                                                     
   524    370.7 MiB      0.0 MiB        6956               t_while_end = time.time()
   525    370.7 MiB      0.0 MiB        6956               avg_while += t_while_end - t_while_start
   526    370.7 MiB      0.0 MiB        6956               n += 1
   527                                                     
   528                                                 except SpinnakerException:              # If no new frame - pass
   529                                                     e += 1
   530                                                     pass
   531                                                 else:
   532    370.7 MiB      0.0 MiB        6956               t_else_start = time.time()
   533                                                                         # Else we want to show the most recent frame
   534    370.7 MiB      0.0 MiB        6956               try:
   535    370.7 MiB      0.5 MiB        6956                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   536    370.7 MiB      0.0 MiB        5950                   pass
   537    370.7 MiB      0.0 MiB        1006               except queue.Empty:                 # Unless it is already been showed
   538    370.7 MiB      0.2 MiB        1006                   pass
   539                                                     finally:                            
   540    370.7 MiB      0.0 MiB        6956                   try:
   541    370.7 MiB      0.0 MiB        6956                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   542    370.7 MiB      0.0 MiB         419                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   543    370.7 MiB      0.0 MiB         419                       pass
   544                                                     
   545    370.7 MiB      0.0 MiB        6956               t_else_end = time.time()
   546                                         
   547    370.7 MiB      0.0 MiB        6956               t_else_avg += t_else_end - t_else_start
   548    370.7 MiB      0.0 MiB        6956               n_else += 1
   549                                         
   550                                             
   551    370.7 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   386    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   387                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   388                                             """
   389                                             Function for recording from BlackFly.
   390                                             Gets camera specs from cam_specs (user input in main).
   391                                         
   392                                             All calls starting with blackFly.something makes physical changes to setup,
   393                                             so they must be updated each time we run the camera.
   394                                         
   395                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   396                                             and is set in the getUserInput thread.
   397                                             """
   398    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
   399                                         
   400    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
   401                                             
   402    317.6 MiB      0.0 MiB           1       faulthandler.enable()
   403                                         
   404                                             # Clean up any previous attachments
   405    317.6 MiB      0.0 MiB           1       try:
   406    346.8 MiB     29.1 MiB           1           tmp_cam = Camera()
   407    367.2 MiB     20.4 MiB           1           tmp_cam.init()
   408    366.7 MiB     -0.5 MiB           1           tmp_cam.close()
   409                                         
   410    366.8 MiB      0.1 MiB           1           blackFly = Camera()
   411                                             except (NameError , CameraError):
   412                                                 print("Camera not connected!")
   413                                                 sys.exit()
   414                                         
   415    367.7 MiB      0.9 MiB           1       blackFly.init()
   416                                         
   417                                             # Enable parameter editing
   418    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   419    367.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   420    367.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   421    367.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   422                                         
   423                                             # Settings for hardware trigger - do not edit
   424    367.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   425    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   426    367.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   427    367.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   428    367.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   429    367.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   430    367.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   431    367.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   432    367.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   433                                         
   434                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   435    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   436    367.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   437    367.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   438    367.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   439                                         
   440                                         
   441                                             # Setup counters to count missed triggers
   442    367.7 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   443    367.7 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   444    367.7 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   445    367.7 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   446    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   447    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   448                                         
   449    367.7 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   450                                         
   451    367.7 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   452    367.7 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   453    367.7 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   454    367.7 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   455    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   456    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   457                                         
   458    367.7 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   459                                         
   460    367.7 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   461    367.7 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   462                                         
   463    367.7 MiB      0.0 MiB           1       tot_count = [0,0]
   464    367.7 MiB      0.0 MiB           1       counter = [0,0]
   465    367.7 MiB      0.0 MiB           1       curr_count = [0,0]
   466                                         
   467                                             # Setting dimensions of camera images
   468    367.7 MiB      0.0 MiB           1       try:
   469    367.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   470                                                 blackFly.Width = cam_specs['cam_width']
   471                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   472                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   473    367.7 MiB      0.0 MiB           1       except CameraError:
   474    367.7 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   475    367.7 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   476    367.7 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   477    367.7 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   478    367.7 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   479                                         
   480                                             #Save camera specs for later use
   481    367.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   482                                             
   483                                             # Queue for processing images
   484    368.2 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   485                                         
   486                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   487    368.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   488    368.3 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   489                                         
   490    368.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   491                                         
   492    368.5 MiB      0.2 MiB           1       blackFly.start()
   493                                                 
   494    368.5 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   495    368.5 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   496    368.5 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   497    368.5 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   498    368.5 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   499    368.5 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   500                                         
   501    368.5 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   502    368.5 MiB      0.0 MiB           1       w_start = time.time()
   503    368.5 MiB      0.0 MiB           1       img_process_ready.wait()
   504    368.5 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   505    368.5 MiB      0.0 MiB           1       cam_recording_ready.set()
   506    368.5 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   507                                         
   508    368.5 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   509    368.8 MiB      0.3 MiB           1       im = blackFly.get_array()
   510    368.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   511                                             
   512    368.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   513    369.5 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   514    369.8 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   515    369.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   516                                         
   517                                         
   518    369.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   519                                             
   520    369.8 MiB      0.0 MiB           1       rec_frames = 1
   521    369.8 MiB      0.0 MiB           1       e = 0
   522    369.8 MiB      0.0 MiB           1       n = 0
   523    369.8 MiB      0.0 MiB           1       n_else = 0
   524    369.8 MiB      0.0 MiB           1       t_start = time.time()
   525                                         
   526    369.8 MiB      0.0 MiB           1       avg_while = 0
   527    369.8 MiB      0.0 MiB           1       t_else_avg = 0
   528                                         
   529    370.1 MiB      0.3 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   530                                         
   531                                             # Record until user asks for restart or quit
   532    371.9 MiB      0.0 MiB       28178       while cam_recording_ready.is_set():
   533    371.9 MiB      0.0 MiB       28177           t_while_start = time.time()
   534    371.9 MiB      0.0 MiB       28177           try:
   535    371.9 MiB      0.6 MiB       28177               im = blackFly.get_array(False)
   536    371.9 MiB      0.0 MiB       28174               t = time.time()
   537    371.9 MiB      0.0 MiB       28174               rec_frames += 1
   538    371.9 MiB      0.0 MiB       28174               img_proc_queue.put_nowait([im,rec_frames])
   539                                         
   540                                                     """
   541                                                     # These counters count number of triggers and exposures
   542                                                     # of the camera to make sure the FPS is around 500.
   543                                                     # However, introducing this reduces fps to about 400, so 
   544                                                     # only use for debugging.
   545                                         
   546                                                     blackFly.CounterSelector = 'Counter0' 
   547                                                     curr_count[0] = blackFly.CounterValue
   548                                                     
   549                                                     blackFly.CounterSelector = 'Counter1'
   550                                                     curr_count[1] = blackFly.CounterValue
   551                                                     
   552                                                     for i in [0,1]:
   553                                                         if curr_count[i] < counter[i]: 
   554                                                             tot_count[i] += 1
   555                                                         counter[i] = curr_count[i]
   556                                                     """
   557                                                     
   558    371.9 MiB      0.0 MiB       28174               t_while_end = time.time()
   559    371.9 MiB      0.0 MiB       28174               avg_while += t_while_end - t_while_start
   560    371.9 MiB      0.0 MiB       28174               n += 1
   561                                                     
   562    371.9 MiB      0.0 MiB           3           except SpinnakerException:              # If no new frame - pass
   563    371.9 MiB      0.0 MiB           3               e += 1
   564    371.9 MiB      0.0 MiB           3               pass
   565                                                 else:
   566    371.9 MiB      0.0 MiB       28174               t_else_start = time.time()
   567                                                                         # Else we want to show the most recent frame
   568    371.9 MiB      0.0 MiB       28174               try:
   569    371.9 MiB      1.2 MiB       28174                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   570    371.9 MiB      0.0 MiB       23267                   pass
   571    371.9 MiB      0.0 MiB        4907               except queue.Empty:                 # Unless it is already been showed
   572    371.9 MiB      0.0 MiB        4907                   pass
   573                                                     finally:                            
   574    371.9 MiB      0.0 MiB       28174                   try:
   575    371.9 MiB      0.0 MiB       28174                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   576    371.9 MiB      0.0 MiB        2171                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   577    371.9 MiB      0.0 MiB        2171                       pass
   578                                                     
   579    371.9 MiB      0.1 MiB       28174               t_else_end = time.time()
   580                                         
   581    371.9 MiB      0.0 MiB       28174               t_else_avg += t_else_end - t_else_start
   582    371.9 MiB      0.0 MiB       28174               n_else += 1
   583                                         
   584                                             
   585    371.9 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   398    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
   399                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   400                                             """
   401                                             Function for recording from BlackFly.
   402                                             Gets camera specs from cam_specs (user input in main).
   403                                         
   404                                             All calls starting with blackFly.something makes physical changes to setup,
   405                                             so they must be updated each time we run the camera.
   406                                         
   407                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   408                                             and is set in the getUserInput thread.
   409                                             """
   410    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
   411                                         
   412    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
   413                                             
   414    317.5 MiB      0.0 MiB           1       faulthandler.enable()
   415                                         
   416                                             # Clean up any previous attachments
   417    317.5 MiB      0.0 MiB           1       try:
   418    346.9 MiB     29.4 MiB           1           tmp_cam = Camera()
   419    367.2 MiB     20.3 MiB           1           tmp_cam.init()
   420    366.8 MiB     -0.4 MiB           1           tmp_cam.close()
   421                                         
   422    366.9 MiB      0.1 MiB           1           blackFly = Camera()
   423                                             except (NameError , CameraError):
   424                                                 print("Camera not connected!")
   425                                                 sys.exit()
   426                                         
   427    367.7 MiB      0.8 MiB           1       blackFly.init()
   428                                         
   429                                             # Enable parameter editing
   430    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
   431    367.7 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   432    367.7 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   433    367.7 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   434                                         
   435                                             # Settings for hardware trigger - do not edit
   436    367.7 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
   437    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   438    367.7 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   439    367.7 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   440    367.7 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   441    367.7 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   442    367.7 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   443    367.7 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   444    367.7 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   445                                         
   446                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   447    367.7 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   448    367.7 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   449    367.7 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   450    367.7 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   451                                         
   452                                         
   453                                             # Setup counters to count missed triggers
   454    367.7 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
   455    367.7 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   456    367.7 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   457    367.7 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   458    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   459    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   460                                         
   461    367.7 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
   462                                         
   463    367.7 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
   464    367.7 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   465    367.7 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   466    367.7 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   467    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   468    367.7 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   469                                         
   470    367.7 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
   471                                         
   472    367.7 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
   473    367.7 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   474                                         
   475    367.7 MiB      0.0 MiB           1       tot_count = [0,0]
   476    367.7 MiB      0.0 MiB           1       counter = [0,0]
   477    367.7 MiB      0.0 MiB           1       curr_count = [0,0]
   478                                         
   479                                             # Setting dimensions of camera images
   480    367.7 MiB      0.0 MiB           1       try:
   481    367.7 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   482                                                 blackFly.Width = cam_specs['cam_width']
   483                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   484                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   485    367.7 MiB      0.0 MiB           1       except CameraError:
   486    367.7 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   487    367.7 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   488    367.7 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   489    367.7 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   490    367.7 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   491                                         
   492                                             #Save camera specs for later use
   493    367.7 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   494                                             
   495                                             # Queue for processing images
   496    368.2 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   497                                         
   498                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   499    368.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   500    368.3 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   501                                         
   502    368.3 MiB      0.0 MiB           1       print("Starting BlackFly")
   503                                         
   504    368.4 MiB      0.2 MiB           1       blackFly.start()
   505                                                 
   506    368.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   507    368.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   508    368.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   509    368.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   510    368.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   511    368.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   512                                         
   513    368.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   514    368.4 MiB      0.0 MiB           1       w_start = time.time()
   515    368.4 MiB      0.0 MiB           1       img_process_ready.wait()
   516    368.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   517    368.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   518    368.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   519                                         
   520    368.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   521    368.7 MiB      0.3 MiB           1       im = blackFly.get_array()
   522    368.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   523                                             
   524    368.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   525    369.4 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   526    369.4 MiB      0.0 MiB           1       img_show_queue.put([im,0])
   527    369.6 MiB      0.2 MiB           1       print("record_camera: put frame in queues")
   528                                         
   529                                         
   530    369.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   531                                             
   532    369.6 MiB      0.0 MiB           1       rec_frames = 1
   533    369.6 MiB      0.0 MiB           1       e = 0
   534    369.6 MiB      0.0 MiB           1       n = 0
   535    369.6 MiB      0.0 MiB           1       n_else = 0
   536    369.6 MiB      0.0 MiB           1       t_start = time.time()
   537                                         
   538    369.6 MiB      0.0 MiB           1       avg_while = 0
   539    369.6 MiB      0.0 MiB           1       t_else_avg = 0
   540                                         
   541    369.9 MiB      0.3 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   542                                         
   543                                             # Record until user asks for restart or quit
   544    374.9 MiB      0.0 MiB       37607       while cam_recording_ready.is_set():
   545    374.9 MiB      0.0 MiB       37606           t_while_start = time.time()
   546    374.9 MiB      0.0 MiB       37606           try:
   547    374.9 MiB      1.9 MiB       37606               im = blackFly.get_array(False)
   548    371.4 MiB      0.0 MiB       27529               t = time.time()
   549    371.4 MiB      0.0 MiB       27529               rec_frames += 1
   550    371.4 MiB      0.0 MiB       27529               img_proc_queue.put_nowait([im,rec_frames])
   551                                         
   552                                                     """
   553                                                     # These counters count number of triggers and exposures
   554                                                     # of the camera to make sure the FPS is around 500.
   555                                                     # However, introducing this reduces fps to about 400, so 
   556                                                     # only use for debugging.
   557                                         
   558                                                     blackFly.CounterSelector = 'Counter0' 
   559                                                     curr_count[0] = blackFly.CounterValue
   560                                                     
   561                                                     blackFly.CounterSelector = 'Counter1'
   562                                                     curr_count[1] = blackFly.CounterValue
   563                                                     
   564                                                     for i in [0,1]:
   565                                                         if curr_count[i] < counter[i]: 
   566                                                             tot_count[i] += 1
   567                                                         counter[i] = curr_count[i]
   568                                                     """
   569                                                     
   570    371.4 MiB      0.0 MiB       27529               t_while_end = time.time()
   571    371.4 MiB      0.0 MiB       27529               avg_while += t_while_end - t_while_start
   572    371.4 MiB      0.0 MiB       27529               n += 1
   573                                                     
   574    374.9 MiB     -9.2 MiB       10077           except SpinnakerException:              # If no new frame - pass
   575    374.9 MiB    -10.9 MiB       10077               e += 1
   576    374.9 MiB    -10.9 MiB       10077               pass
   577                                                 else:
   578    371.4 MiB      0.0 MiB       27529               t_else_start = time.time()
   579                                                                         # Else we want to show the most recent frame
   580    371.4 MiB      0.0 MiB       27529               try:
   581    371.4 MiB      1.3 MiB       27529                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   582    371.4 MiB      0.0 MiB       24283                   pass
   583    371.4 MiB      0.0 MiB        3246               except queue.Empty:                 # Unless it is already been showed
   584    371.4 MiB      0.0 MiB        3246                   pass
   585                                                     finally:                            
   586    371.4 MiB      0.0 MiB       27529                   try:
   587    371.4 MiB      0.0 MiB       27529                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   588    371.4 MiB      0.0 MiB        1198                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   589    371.4 MiB      0.0 MiB        1198                       pass
   590                                                     
   591    371.4 MiB      0.0 MiB       27529               t_else_end = time.time()
   592                                         
   593    371.4 MiB      0.0 MiB       27529               t_else_avg += t_else_end - t_else_start
   594    371.4 MiB      0.0 MiB       27529               n_else += 1
   595                                         
   596                                             
   597    374.9 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   398   3191.2 MiB   3191.2 MiB           1   def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
   399                                             """
   400                                             Function for recording from BlackFly.
   401                                             Gets camera specs from cam_specs (user input in main).
   402                                         
   403                                             All calls starting with blackFly.something makes physical changes to setup,
   404                                             so they must be updated each time we run the camera.
   405                                         
   406                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
   407                                             and is set in the getUserInput thread.
   408                                             """
   409                                             queue_check_interval = 10
   410   3191.2 MiB      0.0 MiB           1   
   411                                             img_process_ready = multiprocessing.Event()
   412   3191.5 MiB      0.3 MiB           1       
   413                                             faulthandler.enable()
   414   3191.5 MiB      0.0 MiB           1   
   415                                             # Clean up any previous attachments
   416                                             try:
   417   3191.5 MiB      0.0 MiB           1           tmp_cam = Camera()
   418   3218.8 MiB     27.3 MiB           1           tmp_cam.init()
   419   3224.7 MiB      6.0 MiB           1           tmp_cam.close()
   420   3224.1 MiB     -0.6 MiB           1   
   421                                                 blackFly = Camera()
   422   3224.3 MiB      0.1 MiB           1       except (NameError , CameraError):
   423                                                 print("Camera not connected!")
   424                                                 sys.exit()
   425                                         
   426                                             blackFly.init()
   427   3225.2 MiB      1.0 MiB           1   
   428                                             # Enable parameter editing
   429                                             blackFly.AcquisitionFrameRateEnable = True
   430   3225.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
   431   3225.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
   432   3225.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
   433   3225.2 MiB      0.0 MiB           1   
   434                                             # Settings for hardware trigger - do not edit
   435                                             blackFly.TriggerMode = 'On'
   436   3225.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
   437   3225.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
   438   3225.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
   439   3225.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
   440   3225.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
   441   3225.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
   442   3225.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
   443   3225.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
   444   3225.2 MiB      0.0 MiB           1   
   445                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
   446                                             blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
   447   3225.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
   448   3225.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
   449   3225.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
   450   3225.2 MiB      0.0 MiB           1   
   451                                         
   452                                             # Setup counters to count missed triggers
   453                                             blackFly.CounterSelector = 'Counter0'
   454   3225.2 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
   455   3225.2 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   456   3225.2 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   457   3225.2 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
   458   3225.2 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   459   3225.2 MiB      0.0 MiB           1   
   460                                             init_count_trigg = blackFly.CounterValue
   461   3225.2 MiB      0.0 MiB           1   
   462                                             blackFly.CounterSelector = 'Counter1'
   463   3225.2 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
   464   3225.2 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
   465   3225.2 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
   466   3225.2 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
   467   3225.2 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
   468   3225.2 MiB      0.0 MiB           1   
   469                                             init_count_exp = blackFly.CounterValue
   470   3225.2 MiB      0.0 MiB           1   
   471                                             print(f'Initial TriggerCounter: {init_count_trigg}')
   472   3225.2 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
   473   3225.2 MiB      0.0 MiB           1   
   474                                             tot_count = [0,0]
   475   3225.2 MiB      0.0 MiB           1       counter = [0,0]
   476   3225.2 MiB      0.0 MiB           1       curr_count = [0,0]
   477   3225.2 MiB      0.0 MiB           1   
   478                                             # Setting dimensions of camera images
   479                                             try:
   480   3225.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   481   3225.2 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   482   3225.2 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   483   3225.2 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   484   3225.2 MiB      0.0 MiB           1       except CameraError:
   485                                                 print("Could not set camera height. Current properties:")
   486                                                 print(F"Height: {blackFly.Height}")
   487                                                 print(F"Width: {blackFly.Width}")
   488                                                 print(F"OffsetX: {blackFly.OffsetX}")
   489                                                 print(F"OffsetY: {blackFly.OffsetY}")
   490                                         
   491                                             #Save camera specs for later use
   492                                             cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   493   3225.2 MiB      0.0 MiB           1       
   494                                             # Queue for processing images
   495                                             img_proc_queue = multiprocessing.Queue()
   496   3225.8 MiB      0.6 MiB           1   
   497                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   498                                             n_used_proc = os.cpu_count() - 1
   499   3225.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   500   3225.8 MiB      0.0 MiB           1   
   501                                             print("Starting BlackFly")
   502   3225.8 MiB      0.0 MiB           1   
   503                                             blackFly.start()
   504   3226.0 MiB      0.2 MiB           1           
   505                                             print(F"\n-- [VIDEO] SETTINGS --")
   506   3226.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   507   3226.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   508   3226.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   509   3226.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   510   3226.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   511   3226.0 MiB      0.0 MiB           1   
   512                                             print("record_camera: Waiting for img_process_ready to be set")
   513   3226.0 MiB      0.0 MiB           1       w_start = time.time()
   514   3226.0 MiB      0.0 MiB           1       img_process_ready.wait()
   515   3226.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   516   3226.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   517   3226.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   518   3226.0 MiB      0.0 MiB           1   
   519                                             print("-- [VIDEO] Waiting for external hardware trigger... --")
   520   3226.0 MiB      0.0 MiB           1       im = blackFly.get_array()
   521   3226.1 MiB      0.2 MiB           1       print("record_camera: got first array!")
   522   3226.1 MiB      0.0 MiB           1       
   523                                             print("record_camera: putting frame in queues!")
   524   3226.1 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   525   3226.4 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   526   3227.3 MiB      0.9 MiB           1       print("record_camera: put frame in queues")
   527   3227.3 MiB      0.0 MiB           1   
   528                                         
   529                                             print("\n-- [VIDEO] RECORDING --\n")
   530   3227.3 MiB      0.0 MiB           1       
   531                                             rec_frames = 1
   532   3227.3 MiB      0.0 MiB           1       e = 0
   533   3227.3 MiB      0.0 MiB           1       n = 0
   534   3227.3 MiB      0.0 MiB           1       n_else = 0
   535   3227.3 MiB      0.0 MiB           1       t_start = time.time()
   536   3227.3 MiB      0.0 MiB           1   
   537                                             avg_while = 0
   538   3227.3 MiB      0.0 MiB           1       t_else_avg = 0
   539   3227.3 MiB      0.0 MiB           1   
   540                                             prev_ram_use = psutil.virtual_memory().percent
   541   3227.3 MiB      0.0 MiB           1   
   542                                             # Record until user asks for restart or quit
   543                                             while cam_recording_ready.is_set():
   544   3228.0 MiB      0.0 MiB       24850           t_while_start = time.time()
   545   3228.0 MiB      0.0 MiB       24849           try:
   546   3228.0 MiB      0.0 MiB       24849               im = blackFly.get_array(False)
   547   3228.0 MiB      0.5 MiB       24849               t = time.time()
   548   3227.6 MiB      0.0 MiB       23867               rec_frames += 1
   549   3227.6 MiB      0.0 MiB       23867               img_proc_queue.put_nowait([im,rec_frames])
   550   3227.6 MiB      0.0 MiB       23867   
   551                                                     """
   552                                                     # These counters count number of triggers and exposures
   553                                                     # of the camera to make sure the FPS is around 500.
   554                                                     # However, introducing this reduces fps to about 400, so 
   555                                                     # only use for debugging.
   556                                         
   557                                                     blackFly.CounterSelector = 'Counter0' 
   558                                                     curr_count[0] = blackFly.CounterValue
   559                                                     
   560                                                     blackFly.CounterSelector = 'Counter1'
   561                                                     curr_count[1] = blackFly.CounterValue
   562                                                     
   563                                                     for i in [0,1]:
   564                                                         if curr_count[i] < counter[i]: 
   565                                                             tot_count[i] += 1
   566                                                         counter[i] = curr_count[i]
   567                                                     """
   568                                                     
   569                                                     t_while_end = time.time()
   570   3227.6 MiB      0.0 MiB       23867               avg_while += t_while_end - t_while_start
   571   3227.6 MiB      0.0 MiB       23867               n += 1
   572   3227.6 MiB      0.0 MiB       23867               
   573                                                 except SpinnakerException:              # If no new frame - pass
   574   3228.0 MiB      0.0 MiB         982               e += 1
   575   3228.0 MiB      0.0 MiB         982               pass
   576   3228.0 MiB      0.0 MiB         982           else:
   577                                                     t_else_start = time.time()
   578   3227.6 MiB      0.0 MiB       23867                                   # Else we want to show the most recent frame
   579                                                     try:
   580   3227.6 MiB      0.0 MiB       23867                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   581   3227.6 MiB      0.1 MiB       23867                   pass
   582   3227.6 MiB      0.0 MiB       21945               except queue.Empty:                 # Unless it is already been showed
   583   3227.6 MiB      0.0 MiB        1922                   pass
   584   3227.6 MiB      0.0 MiB        1922               finally:                            
   585                                                         try:
   586   3227.6 MiB      0.0 MiB       23867                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   587   3227.6 MiB      0.0 MiB       23867                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   588   3227.6 MiB      0.0 MiB        1415                       pass
   589   3227.6 MiB      0.0 MiB        1415               
   590                                                     t_else_end = time.time()
   591   3227.6 MiB      0.0 MiB       23867   
   592                                                     t_else_avg += t_else_end - t_else_start
   593   3227.6 MiB      0.0 MiB       23867               n_else += 1
   594   3227.6 MiB      0.0 MiB       23867   
   595                                             
   596                                             dur = time.time() - t_start
   597   3228.0 MiB      0.0 MiB           1   
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.4 MiB    317.4 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.4 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.3 MiB     23.7 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.6 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.4 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.9 MiB      0.5 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.9 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.9 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.9 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.9 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.9 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.9 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.9 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.9 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.9 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.9 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.9 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.9 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.9 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.9 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.9 MiB      0.0 MiB           1       counter = [0,0]
   101    362.9 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.9 MiB      0.0 MiB           1       try:
   105    362.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106                                                 blackFly.Width = cam_specs['cam_width']
   107                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   108                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   109    362.9 MiB      0.0 MiB           1       except CameraError:
   110    362.9 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   111    362.9 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   112    362.9 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   113    362.9 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   114    362.9 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    362.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    363.0 MiB      0.1 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.2 MiB      0.2 MiB           1       blackFly.start()
   129                                                 
   130    363.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.2 MiB      0.0 MiB           1       w_start = time.time()
   139    363.2 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.5 MiB      0.4 MiB           1       im = blackFly.get_array()
   146    363.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    364.2 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   150    364.4 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   151    364.4 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.4 MiB      0.0 MiB           1       rec_frames = 1
   157    364.4 MiB      0.0 MiB           1       e = 0
   158    364.4 MiB      0.0 MiB           1       n = 0
   159    364.4 MiB      0.0 MiB           1       n_else = 0
   160    364.4 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.7 MiB      0.3 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    367.2 MiB      0.0 MiB       15066       while cam_recording_ready.is_set():
   169    367.2 MiB      0.0 MiB       15065           t_while_start = time.time()
   170    367.2 MiB      0.0 MiB       15065           try:
   171    367.2 MiB      0.8 MiB       15065               im = blackFly.get_array(False)
   172    367.2 MiB      0.0 MiB       15065               t = time.time()
   173    367.2 MiB      0.0 MiB       15065               rec_frames += 1
   174    367.2 MiB      0.0 MiB       15065               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    367.2 MiB      0.0 MiB       15065               t_while_end = time.time()
   195    367.2 MiB      0.0 MiB       15065               avg_while += t_while_end - t_while_start
   196    367.2 MiB      0.0 MiB       15065               n += 1
   197                                                     
   198                                                 except SpinnakerException:              # If no new frame - pass
   199                                                     e += 1
   200                                                     pass
   201                                                 else:
   202    367.2 MiB      0.0 MiB       15065               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    367.2 MiB      0.0 MiB       15065               try:
   205    367.2 MiB      1.7 MiB       15065                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    367.2 MiB      0.0 MiB       13255                   pass
   207    367.2 MiB      0.0 MiB        1810               except queue.Empty:                 # Unless it is already been showed
   208    367.2 MiB      0.0 MiB        1810                   pass
   209                                                     finally:                            
   210    367.2 MiB      0.0 MiB       15065                   try:
   211    367.2 MiB      0.0 MiB       15065                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    367.2 MiB      0.0 MiB         676                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    367.2 MiB      0.0 MiB         676                       pass
   214                                                     
   215    367.2 MiB      0.0 MiB       15065               t_else_end = time.time()
   216                                         
   217    367.2 MiB      0.0 MiB       15065               t_else_avg += t_else_end - t_else_start
   218    367.2 MiB      0.0 MiB       15065               n_else += 1
   219                                         
   220                                             
   221    367.2 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.6 MiB    317.6 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.6 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.7 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    362.1 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.4 MiB           1           tmp_cam.close()
    45                                         
    46    361.8 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.5 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.5 MiB      0.2 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.5 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.5 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.5 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.5 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.5 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.5 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.5 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.5 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.5 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.5 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.5 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.5 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.5 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.5 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.5 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.5 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.5 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.5 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.5 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.5 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.5 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.5 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.5 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.5 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.5 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.5 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.5 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.5 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.5 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.5 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.5 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.5 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.5 MiB      0.0 MiB           1       counter = [0,0]
   101    362.5 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.5 MiB      0.0 MiB           1       try:
   105    362.5 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106                                                 blackFly.Width = cam_specs['cam_width']
   107                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   108                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   109    362.5 MiB      0.0 MiB           1       except CameraError:
   110    362.5 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   111    362.5 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   112    362.5 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   113    362.5 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   114    362.5 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.5 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    363.1 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    363.1 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    363.1 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.3 MiB      0.2 MiB           1       blackFly.start()
   129                                                 
   130    363.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.3 MiB      0.0 MiB           1       w_start = time.time()
   139    363.3 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.7 MiB      0.4 MiB           1       im = blackFly.get_array()
   146    363.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    364.3 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   150    364.6 MiB      0.3 MiB           1       img_show_queue.put([im,0])
   151    364.6 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.6 MiB      0.0 MiB           1       rec_frames = 1
   157    364.6 MiB      0.0 MiB           1       e = 0
   158    364.6 MiB      0.0 MiB           1       n = 0
   159    364.6 MiB      0.0 MiB           1       n_else = 0
   160    364.6 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.6 MiB      0.0 MiB           1       avg_while = 0
   163    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.6 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.7 MiB      0.0 MiB        8679       while cam_recording_ready.is_set():
   169    366.7 MiB      0.0 MiB        8678           t_while_start = time.time()
   170    366.7 MiB      0.0 MiB        8678           try:
   171    366.7 MiB      0.7 MiB        8678               im = blackFly.get_array(False)
   172    366.7 MiB      0.0 MiB        8678               t = time.time()
   173    366.7 MiB      0.0 MiB        8678               rec_frames += 1
   174    366.7 MiB      0.0 MiB        8678               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.7 MiB      0.3 MiB        8678               t_while_end = time.time()
   195    366.7 MiB      0.0 MiB        8678               avg_while += t_while_end - t_while_start
   196    366.7 MiB      0.0 MiB        8678               n += 1
   197                                                     
   198                                                 except SpinnakerException:              # If no new frame - pass
   199                                                     e += 1
   200                                                     pass
   201                                                 else:
   202    366.7 MiB      0.0 MiB        8678               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.7 MiB      0.0 MiB        8678               try:
   205    366.7 MiB      1.1 MiB        8678                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.7 MiB      0.0 MiB        8049                   pass
   207    366.7 MiB      0.0 MiB         629               except queue.Empty:                 # Unless it is already been showed
   208    366.7 MiB      0.0 MiB         629                   pass
   209                                                     finally:                            
   210    366.7 MiB      0.0 MiB        8678                   try:
   211    366.7 MiB      0.0 MiB        8678                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.7 MiB      0.0 MiB         255                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.7 MiB      0.0 MiB         255                       pass
   214                                                     
   215    366.7 MiB      0.0 MiB        8678               t_else_end = time.time()
   216                                         
   217    366.7 MiB      0.0 MiB        8678               t_else_avg += t_else_end - t_else_start
   218    366.7 MiB      0.0 MiB        8678               n_else += 1
   219                                         
   220                                             
   221    366.7 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.5 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.4 MiB           1           tmp_cam.close()
    45                                         
    46    361.7 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.6 MiB      0.3 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.6 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.6 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.6 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.6 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.6 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.6 MiB      0.0 MiB           1       counter = [0,0]
   101    362.6 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.6 MiB      0.0 MiB           1       try:
   105    362.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106                                                 blackFly.Width = cam_specs['cam_width']
   107                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   108                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   109    362.6 MiB      0.0 MiB           1       except CameraError:
   110    362.6 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   111    362.6 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   112    362.6 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   113    362.6 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   114    362.6 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    362.6 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    363.1 MiB      0.4 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    363.1 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.3 MiB      0.2 MiB           1       blackFly.start()
   129                                                 
   130    363.3 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.3 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.3 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.3 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.3 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.3 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.3 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.3 MiB      0.0 MiB           1       w_start = time.time()
   139    363.3 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.3 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.3 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.3 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.3 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.5 MiB      0.2 MiB           1       im = blackFly.get_array()
   146    363.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    364.5 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   150    364.5 MiB      0.0 MiB           1       img_show_queue.put([im,0])
   151    364.5 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.5 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.5 MiB      0.0 MiB           1       rec_frames = 1
   157    364.5 MiB      0.0 MiB           1       e = 0
   158    364.5 MiB      0.0 MiB           1       n = 0
   159    364.5 MiB      0.0 MiB           1       n_else = 0
   160    364.5 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.5 MiB      0.0 MiB           1       avg_while = 0
   163    364.5 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.5 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.5 MiB      0.1 MiB       15497       while cam_recording_ready.is_set():
   169    366.5 MiB      0.0 MiB       15496           t_while_start = time.time()
   170    366.5 MiB      0.2 MiB       15496           try:
   171    366.5 MiB      0.8 MiB       15496               im = blackFly.get_array(False)
   172    366.5 MiB      0.0 MiB       15492               t = time.time()
   173    366.5 MiB      0.0 MiB       15492               rec_frames += 1
   174    366.5 MiB      0.0 MiB       15492               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.5 MiB      0.0 MiB       15492               t_while_end = time.time()
   195    366.5 MiB      0.0 MiB       15492               avg_while += t_while_end - t_while_start
   196    366.5 MiB      0.0 MiB       15492               n += 1
   197                                                     
   198    364.8 MiB      0.0 MiB           4           except SpinnakerException:              # If no new frame - pass
   199    364.8 MiB      0.0 MiB           4               e += 1
   200    364.8 MiB      0.0 MiB           4               pass
   201                                                 else:
   202    366.5 MiB      0.0 MiB       15492               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.5 MiB      0.0 MiB       15492               try:
   205    366.5 MiB      0.9 MiB       15492                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.5 MiB      0.0 MiB       14421                   pass
   207    366.5 MiB      0.0 MiB        1071               except queue.Empty:                 # Unless it is already been showed
   208    366.5 MiB      0.0 MiB        1071                   pass
   209                                                     finally:                            
   210    366.5 MiB      0.0 MiB       15492                   try:
   211    366.5 MiB      0.0 MiB       15492                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.5 MiB      0.0 MiB         408                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.5 MiB      0.0 MiB         408                       pass
   214                                                     
   215    366.5 MiB      0.0 MiB       15492               t_else_end = time.time()
   216                                         
   217    366.5 MiB      0.0 MiB       15492               t_else_avg += t_else_end - t_else_start
   218    366.5 MiB      0.0 MiB       15492               n_else += 1
   219                                         
   220                                             
   221    366.5 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.7 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.9 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.7 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.3 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.3 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.3 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.9 MiB      0.6 MiB           1       blackFly.CounterDuration = 65520
    82    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.9 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.9 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.9 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.9 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.9 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.9 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.9 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.9 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.9 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.9 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.9 MiB      0.0 MiB           1       counter = [0,0]
   101    362.9 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.9 MiB      0.0 MiB           1       try:
   105    362.9 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106                                                 blackFly.Width = cam_specs['cam_width']
   107                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   108                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   109    362.9 MiB      0.0 MiB           1       except CameraError:
   110    362.9 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   111    362.9 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   112    362.9 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   113    362.9 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   114    362.9 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.9 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    362.9 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    362.9 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    362.9 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.0 MiB      0.1 MiB           1       blackFly.start()
   129                                                 
   130    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.0 MiB      0.0 MiB           1       w_start = time.time()
   139    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.7 MiB      0.7 MiB           1       im = blackFly.get_array()
   146    363.7 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.7 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    364.4 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   150    364.7 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   151    364.7 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.7 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.7 MiB      0.0 MiB           1       rec_frames = 1
   157    364.7 MiB      0.0 MiB           1       e = 0
   158    364.7 MiB      0.0 MiB           1       n = 0
   159    364.7 MiB      0.0 MiB           1       n_else = 0
   160    364.7 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.7 MiB      0.0 MiB           1       avg_while = 0
   163    364.7 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.7 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.9 MiB      0.0 MiB       19873       while cam_recording_ready.is_set():
   169    366.9 MiB      0.0 MiB       19872           t_while_start = time.time()
   170    366.9 MiB      0.0 MiB       19872           try:
   171    366.9 MiB      1.2 MiB       19872               im = blackFly.get_array(False)
   172    366.9 MiB      0.1 MiB       19870               t = time.time()
   173    366.9 MiB      0.0 MiB       19870               rec_frames += 1
   174    366.9 MiB      0.0 MiB       19870               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.9 MiB      0.0 MiB       19870               t_while_end = time.time()
   195    366.9 MiB      0.0 MiB       19870               avg_while += t_while_end - t_while_start
   196    366.9 MiB      0.0 MiB       19870               n += 1
   197                                                     
   198    364.7 MiB      0.0 MiB           2           except SpinnakerException:              # If no new frame - pass
   199    364.7 MiB      0.0 MiB           2               e += 1
   200    364.7 MiB      0.0 MiB           2               pass
   201                                                 else:
   202    366.9 MiB      0.0 MiB       19870               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.9 MiB      0.0 MiB       19870               try:
   205    366.9 MiB      0.9 MiB       19870                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.9 MiB      0.0 MiB       18234                   pass
   207    366.9 MiB      0.0 MiB        1636               except queue.Empty:                 # Unless it is already been showed
   208    366.9 MiB      0.0 MiB        1636                   pass
   209                                                     finally:                            
   210    366.9 MiB      0.0 MiB       19870                   try:
   211    366.9 MiB      0.0 MiB       19870                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.9 MiB      0.0 MiB         666                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.9 MiB      0.0 MiB         666                       pass
   214                                                     
   215    366.9 MiB      0.0 MiB       19870               t_else_end = time.time()
   216                                         
   217    366.9 MiB      0.0 MiB       19870               t_else_avg += t_else_end - t_else_start
   218    366.9 MiB      0.0 MiB       19870               n_else += 1
   219                                         
   220                                             
   221    366.9 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.6 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.6 MiB      0.0 MiB           1       try:
    42    341.4 MiB     23.8 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.5 MiB           1           tmp_cam.init()
    44    361.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.3 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.3 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.3 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.3 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.3 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.3 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.3 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.3 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.3 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.3 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.3 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.3 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.3 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.3 MiB      0.0 MiB           1       counter = [0,0]
   101    362.3 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.3 MiB      0.0 MiB           1       try:
   105    362.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106    362.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   107    362.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   108    362.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   109                                             except CameraError:
   110                                                 print("Could not set camera height. Current properties:")
   111                                                 print(F"Height: {blackFly.Height}")
   112                                                 print(F"Width: {blackFly.Width}")
   113                                                 print(F"OffsetX: {blackFly.OffsetX}")
   114                                                 print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    362.8 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    362.8 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    362.8 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    362.8 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.0 MiB      0.2 MiB           1       blackFly.start()
   129                                                 
   130    363.0 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.0 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.0 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.0 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.0 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.0 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.0 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.0 MiB      0.0 MiB           1       w_start = time.time()
   139    363.0 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.0 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.0 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.0 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.0 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.3 MiB      0.3 MiB           1       im = blackFly.get_array()
   146    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    363.3 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   150    364.1 MiB      0.8 MiB           1       img_show_queue.put([im,0])
   151    364.4 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.4 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.4 MiB      0.0 MiB           1       rec_frames = 1
   157    364.4 MiB      0.0 MiB           1       e = 0
   158    364.4 MiB      0.0 MiB           1       n = 0
   159    364.4 MiB      0.0 MiB           1       n_else = 0
   160    364.4 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.4 MiB      0.0 MiB           1       avg_while = 0
   163    364.4 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.4 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.7 MiB      0.0 MiB       73036       while cam_recording_ready.is_set():
   169    366.7 MiB      0.0 MiB       73035           t_while_start = time.time()
   170    366.7 MiB      0.0 MiB       73035           try:
   171    366.7 MiB      1.4 MiB       73035               im = blackFly.get_array(False)
   172    366.7 MiB      0.0 MiB       73032               t = time.time()
   173    366.7 MiB      0.0 MiB       73032               rec_frames += 1
   174    366.7 MiB      0.0 MiB       73032               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.7 MiB      0.0 MiB       73032               t_while_end = time.time()
   195    366.7 MiB      0.0 MiB       73032               avg_while += t_while_end - t_while_start
   196    366.7 MiB      0.0 MiB       73032               n += 1
   197                                                     
   198    365.5 MiB      0.0 MiB           3           except SpinnakerException:              # If no new frame - pass
   199    365.5 MiB      0.0 MiB           3               e += 1
   200    365.5 MiB      0.0 MiB           3               pass
   201                                                 else:
   202    366.7 MiB      0.0 MiB       73032               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.7 MiB      0.0 MiB       73032               try:
   205    366.7 MiB      0.7 MiB       73032                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.7 MiB      0.0 MiB       66881                   pass
   207    366.7 MiB      0.1 MiB        6151               except queue.Empty:                 # Unless it is already been showed
   208    366.7 MiB      0.0 MiB        6151                   pass
   209                                                     finally:                            
   210    366.7 MiB      0.0 MiB       73032                   try:
   211    366.7 MiB      0.0 MiB       73032                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.7 MiB      0.0 MiB        3177                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.7 MiB      0.0 MiB        3177                       pass
   214                                                     
   215    366.7 MiB      0.1 MiB       73032               t_else_end = time.time()
   216                                         
   217    366.7 MiB      0.0 MiB       73032               t_else_avg += t_else_end - t_else_start
   218    366.7 MiB      0.0 MiB       73032               n_else += 1
   219                                         
   220                                             
   221    366.7 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.2 MiB    317.2 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.2 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.4 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.4 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.4 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.4 MiB           1           tmp_cam.close()
    45                                         
    46    361.9 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.6 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.6 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.6 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.6 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.6 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.6 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.6 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.6 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.6 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.6 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.6 MiB      0.0 MiB           1       counter = [0,0]
   101    362.6 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.6 MiB      0.0 MiB           1       try:
   105    362.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106    362.6 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   107    362.6 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   108    362.6 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   109                                             except CameraError:
   110                                                 print("Could not set camera height. Current properties:")
   111                                                 print(F"Height: {blackFly.Height}")
   112                                                 print(F"Width: {blackFly.Width}")
   113                                                 print(F"OffsetX: {blackFly.OffsetX}")
   114                                                 print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.6 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    363.2 MiB      0.5 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    363.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    363.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    363.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.2 MiB      0.0 MiB           1       blackFly.start()
   129                                                 
   130    363.2 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.2 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.2 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.2 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.2 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.2 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.2 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.2 MiB      0.0 MiB           1       w_start = time.time()
   139    363.2 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.2 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.2 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.2 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.2 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.6 MiB      0.4 MiB           1       im = blackFly.get_array()
   146    363.6 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.6 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    364.6 MiB      1.0 MiB           1       img_proc_queue.put([im,0])
   150    364.9 MiB      0.3 MiB           1       img_show_queue.put([im,0])
   151    364.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.9 MiB      0.0 MiB           1       rec_frames = 1
   157    364.9 MiB      0.0 MiB           1       e = 0
   158    364.9 MiB      0.0 MiB           1       n = 0
   159    364.9 MiB      0.0 MiB           1       n_else = 0
   160    364.9 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.9 MiB      0.0 MiB           1       avg_while = 0
   163    364.9 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.9 MiB      0.0 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    367.3 MiB      0.0 MiB      513526       while cam_recording_ready.is_set():
   169    367.3 MiB      0.0 MiB      513525           t_while_start = time.time()
   170    367.3 MiB      0.0 MiB      513525           try:
   171    367.3 MiB      1.2 MiB      513525               im = blackFly.get_array(False)
   172    367.3 MiB      0.0 MiB      513411               t = time.time()
   173    367.3 MiB      0.0 MiB      513411               rec_frames += 1
   174    367.3 MiB      0.0 MiB      513411               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    367.3 MiB      0.0 MiB      513411               t_while_end = time.time()
   195    367.3 MiB      0.0 MiB      513411               avg_while += t_while_end - t_while_start
   196    367.3 MiB      0.0 MiB      513411               n += 1
   197                                                     
   198    367.3 MiB      0.0 MiB         114           except SpinnakerException:              # If no new frame - pass
   199    367.3 MiB      0.0 MiB         114               e += 1
   200    367.3 MiB      0.0 MiB         114               pass
   201                                                 else:
   202    367.3 MiB      0.0 MiB      513411               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    367.3 MiB      0.0 MiB      513411               try:
   205    367.3 MiB      1.3 MiB      513411                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    367.3 MiB      0.0 MiB      472160                   pass
   207    367.3 MiB      0.0 MiB       41251               except queue.Empty:                 # Unless it is already been showed
   208    367.3 MiB      0.0 MiB       41251                   pass
   209                                                     finally:                            
   210    367.3 MiB      0.0 MiB      513411                   try:
   211    367.3 MiB      0.0 MiB      513411                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    367.3 MiB      0.0 MiB       25745                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    367.3 MiB      0.0 MiB       25745                       pass
   214                                                     
   215    367.3 MiB      0.0 MiB      513411               t_else_end = time.time()
   216                                         
   217    367.3 MiB      0.0 MiB      513411               t_else_avg += t_else_end - t_else_start
   218    367.3 MiB      0.0 MiB      513411               n_else += 1
   219                                         
   220                                             
   221    367.3 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.7 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.7 MiB      0.0 MiB           1       try:
    42    341.6 MiB     23.9 MiB           1           tmp_cam = Camera()
    43    362.0 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.5 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.6 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.4 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.4 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.4 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.4 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.4 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.4 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.4 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.4 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.4 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.4 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.4 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.4 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.4 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.4 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.4 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.4 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.4 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.4 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.4 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.4 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.4 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.4 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.4 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.4 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.4 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.4 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.4 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.4 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.4 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.4 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.4 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.4 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.4 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.4 MiB      0.0 MiB           1       counter = [0,0]
   101    362.4 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.4 MiB      0.0 MiB           1       try:
   105    362.4 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106                                                 blackFly.Width = cam_specs['cam_width']
   107                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   108                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   109    362.4 MiB      0.0 MiB           1       except CameraError:
   110    362.4 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   111    362.4 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   112    362.4 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   113    362.4 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   114    362.4 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.4 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    363.0 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    363.0 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    363.0 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    363.0 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    363.1 MiB      0.0 MiB           1       blackFly.start()
   129                                                 
   130    363.1 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    363.1 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    363.1 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    363.1 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    363.1 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    363.1 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    363.1 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    363.1 MiB      0.0 MiB           1       w_start = time.time()
   139    363.1 MiB      0.0 MiB           1       img_process_ready.wait()
   140    363.1 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    363.1 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    363.1 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    363.1 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.5 MiB      0.5 MiB           1       im = blackFly.get_array()
   146    363.5 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.5 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    363.5 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   150    364.3 MiB      0.8 MiB           1       img_show_queue.put([im,0])
   151    364.6 MiB      0.3 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    364.6 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    364.6 MiB      0.0 MiB           1       rec_frames = 1
   157    364.6 MiB      0.0 MiB           1       e = 0
   158    364.6 MiB      0.0 MiB           1       n = 0
   159    364.6 MiB      0.0 MiB           1       n_else = 0
   160    364.6 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    364.6 MiB      0.0 MiB           1       avg_while = 0
   163    364.6 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.7 MiB      0.1 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.7 MiB      0.0 MiB       59277       while cam_recording_ready.is_set():
   169    366.7 MiB      0.0 MiB       59276           t_while_start = time.time()
   170    366.7 MiB      0.0 MiB       59276           try:
   171    366.7 MiB      0.4 MiB       59276               im = blackFly.get_array(False)
   172    366.7 MiB      0.0 MiB       59182               t = time.time()
   173    366.7 MiB      0.0 MiB       59182               rec_frames += 1
   174    366.7 MiB      0.0 MiB       59182               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.7 MiB      0.0 MiB       59182               t_while_end = time.time()
   195    366.7 MiB      0.0 MiB       59182               avg_while += t_while_end - t_while_start
   196    366.7 MiB      0.0 MiB       59182               n += 1
   197                                                     
   198    366.7 MiB      0.0 MiB          94           except SpinnakerException:              # If no new frame - pass
   199    366.7 MiB      0.0 MiB          94               e += 1
   200    366.7 MiB      0.0 MiB          94               pass
   201                                                 else:
   202    366.7 MiB      0.0 MiB       59182               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.7 MiB      0.0 MiB       59182               try:
   205    366.7 MiB      1.5 MiB       59182                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.7 MiB      0.0 MiB       55287                   pass
   207    366.7 MiB      0.0 MiB        3895               except queue.Empty:                 # Unless it is already been showed
   208    366.7 MiB      0.0 MiB        3895                   pass
   209                                                     finally:                            
   210    366.7 MiB      0.0 MiB       59182                   try:
   211    366.7 MiB      0.0 MiB       59182                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.7 MiB      0.0 MiB        1087                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.7 MiB      0.0 MiB        1087                       pass
   214                                                     
   215    366.7 MiB      0.0 MiB       59182               t_else_end = time.time()
   216                                         
   217    366.7 MiB      0.0 MiB       59182               t_else_avg += t_else_end - t_else_start
   218    366.7 MiB      0.0 MiB       59182               n_else += 1
   219                                         
   220                                             
   221    366.7 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.4 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.1 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    361.8 MiB     20.4 MiB           1           tmp_cam.init()
    44    361.4 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.5 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.3 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.3 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.3 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.3 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.3 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.3 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.3 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.3 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.3 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.3 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.3 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.3 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.3 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.3 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.3 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.3 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                         
    77                                             # Setup counters to count missed triggers
    78    362.3 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter0'
    79    362.3 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'Line0'
    80    362.3 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    81    362.3 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    82    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'Line0'
    83    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85    362.3 MiB      0.0 MiB           1       init_count_trigg = blackFly.CounterValue
    86                                         
    87    362.3 MiB      0.0 MiB           1       blackFly.CounterSelector = 'Counter1'
    88    362.3 MiB      0.0 MiB           1       blackFly.CounterEventSource = 'ExposureStart'
    89    362.3 MiB      0.0 MiB           1       blackFly.CounterEventActivation = 'RisingEdge'
    90    362.3 MiB      0.0 MiB           1       blackFly.CounterDuration = 65520
    91    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerSource = 'ExposureStart'
    92    362.3 MiB      0.0 MiB           1       blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94    362.3 MiB      0.0 MiB           1       init_count_exp = blackFly.CounterValue
    95                                         
    96    362.3 MiB      0.0 MiB           1       print(f'Initial TriggerCounter: {init_count_trigg}')
    97    362.3 MiB      0.0 MiB           1       print(f'Initial ExposureCounter: {init_count_exp}')
    98                                         
    99    362.3 MiB      0.0 MiB           1       tot_count = [0,0]
   100    362.3 MiB      0.0 MiB           1       counter = [0,0]
   101    362.3 MiB      0.0 MiB           1       curr_count = [0,0]
   102                                         
   103                                             # Setting dimensions of camera images
   104    362.3 MiB      0.0 MiB           1       try:
   105    362.3 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   106    362.3 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   107    362.3 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   108    362.3 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   109                                             except CameraError:
   110                                                 print("Could not set camera height. Current properties:")
   111                                                 print(F"Height: {blackFly.Height}")
   112                                                 print(F"Width: {blackFly.Width}")
   113                                                 print(F"OffsetX: {blackFly.OffsetX}")
   114                                                 print(F"OffsetY: {blackFly.OffsetY}")
   115                                         
   116                                             #Save camera specs for later use
   117    362.3 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   118                                             
   119                                             # Queue for processing images
   120    362.9 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   121                                         
   122                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   123    362.9 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   124    362.9 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   125                                         
   126    362.9 MiB      0.0 MiB           1       print("Starting BlackFly")
   127                                         
   128    362.9 MiB      0.0 MiB           1       blackFly.start()
   129                                                 
   130    362.9 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   131    362.9 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   132    362.9 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   133    362.9 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   134    362.9 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   135    362.9 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   136                                         
   137    362.9 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   138    362.9 MiB      0.0 MiB           1       w_start = time.time()
   139    362.9 MiB      0.0 MiB           1       img_process_ready.wait()
   140    362.9 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   141    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   142    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   143                                         
   144    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   145    363.2 MiB      0.2 MiB           1       im = blackFly.get_array()
   146    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   147                                             
   148    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   149    363.2 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   150    363.8 MiB      0.7 MiB           1       img_show_queue.put([im,0])
   151    363.8 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   152                                         
   153                                         
   154    363.8 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   155                                             
   156    363.8 MiB      0.0 MiB           1       rec_frames = 1
   157    363.8 MiB      0.0 MiB           1       e = 0
   158    363.8 MiB      0.0 MiB           1       n = 0
   159    363.8 MiB      0.0 MiB           1       n_else = 0
   160    363.8 MiB      0.0 MiB           1       t_start = time.time()
   161                                         
   162    363.8 MiB      0.0 MiB           1       avg_while = 0
   163    363.8 MiB      0.0 MiB           1       t_else_avg = 0
   164                                         
   165    364.1 MiB      0.3 MiB           1       prev_ram_use = psutil.virtual_memory().percent
   166                                         
   167                                             # Record until user asks for restart or quit
   168    366.1 MiB      0.0 MiB      101250       while cam_recording_ready.is_set():
   169    366.1 MiB      0.0 MiB      101249           t_while_start = time.time()
   170    366.1 MiB      0.0 MiB      101249           try:
   171    366.1 MiB      1.7 MiB      101249               im = blackFly.get_array(False)
   172    366.1 MiB      0.0 MiB      101249               t = time.time()
   173    366.1 MiB      0.0 MiB      101249               rec_frames += 1
   174    366.1 MiB      0.0 MiB      101249               img_proc_queue.put_nowait([im,rec_frames])
   175                                         
   176                                                     """
   177                                                     # These counters count number of triggers and exposures
   178                                                     # of the camera to make sure the FPS is around 500.
   179                                                     # However, introducing this reduces fps to about 400, so 
   180                                                     # only use for debugging.
   181                                         
   182                                                     blackFly.CounterSelector = 'Counter0' 
   183                                                     curr_count[0] = blackFly.CounterValue
   184                                                     
   185                                                     blackFly.CounterSelector = 'Counter1'
   186                                                     curr_count[1] = blackFly.CounterValue
   187                                                     
   188                                                     for i in [0,1]:
   189                                                         if curr_count[i] < counter[i]: 
   190                                                             tot_count[i] += 1
   191                                                         counter[i] = curr_count[i]
   192                                                     """
   193                                                     
   194    366.1 MiB      0.0 MiB      101249               t_while_end = time.time()
   195    366.1 MiB      0.0 MiB      101249               avg_while += t_while_end - t_while_start
   196    366.1 MiB      0.0 MiB      101249               n += 1
   197                                                     
   198                                                 except SpinnakerException:              # If no new frame - pass
   199                                                     e += 1
   200                                                     pass
   201                                                 else:
   202    366.1 MiB      0.0 MiB      101249               t_else_start = time.time()
   203                                                                         # Else we want to show the most recent frame
   204    366.1 MiB      0.0 MiB      101249               try:
   205    366.1 MiB      0.3 MiB      101249                   _ = img_show_queue.get_nowait() # Pop previous most recent frame
   206    366.1 MiB      0.0 MiB       91965                   pass
   207    366.1 MiB      0.0 MiB        9284               except queue.Empty:                 # Unless it is already been showed
   208    366.1 MiB      0.0 MiB        9284                   pass
   209                                                     finally:                            
   210    366.1 MiB      0.0 MiB      101249                   try:
   211    366.1 MiB      0.0 MiB      101249                       img_show_queue.put_nowait([im,rec_frames, t])  # Finally put new frame into queue
   212    366.1 MiB      0.0 MiB        2932                   except queue.Full:              # Happens when queue is locked by other process (I believe)
   213    366.1 MiB      0.0 MiB        2932                       pass
   214                                                     
   215    366.1 MiB      0.0 MiB      101249               t_else_end = time.time()
   216                                         
   217    366.1 MiB      0.0 MiB      101249               t_else_avg += t_else_end - t_else_start
   218    366.1 MiB      0.0 MiB      101249               n_else += 1
   219                                         
   220                                             
   221    366.1 MiB      0.0 MiB           1       dur = time.time() - t_start
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.5 MiB      0.2 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.5 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.5 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    361.7 MiB     20.2 MiB           1           tmp_cam.init()
    44    361.2 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.3 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.2 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.2 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.2 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.2 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.2 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.2 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.2 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.2 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.2 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.2 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.2 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.2 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.2 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.2 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.2 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.2 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.2 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.2 MiB      0.0 MiB           1       counter = [0,0]
   102    362.2 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.2 MiB      0.0 MiB           1       try:
   106    362.2 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.2 MiB      0.0 MiB           1       except CameraError:
   111    362.2 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    362.2 MiB      0.0 MiB           1           print(F"Height: {blackFly.Height}")
   113    362.2 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    362.2 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    362.2 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.7 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.7 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.9 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.9 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.9 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.9 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.9 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.9 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.9 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.9 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.9 MiB      0.0 MiB           1       w_start = time.time()
   140    362.9 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.9 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.9 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.9 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.9 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.3 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.3 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.3 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    364.0 MiB      0.6 MiB           1       img_proc_queue.put([im,0])
   151    364.2 MiB      0.2 MiB           1       img_show_queue.put([im,0])
   152    364.2 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.2 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.2 MiB      0.0 MiB           1       rec_frames = 1
   158    364.2 MiB      0.0 MiB           1       e = 0
   159    364.2 MiB      0.0 MiB           1       n = 0
   160    364.2 MiB      0.0 MiB           1       n_else = 0
   161    364.2 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    364.2 MiB      0.0 MiB           1       avg_while = 0
   164    364.2 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    364.2 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    364.2 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    364.2 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    364.2 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    365.6 MiB      0.0 MiB       75842       while cam_recording_ready.is_set():
   176    365.6 MiB      0.0 MiB       75841           t_while_start = time.time()
   177    365.6 MiB      0.0 MiB       75841           try:
   178    365.6 MiB      0.5 MiB       75841               im = blackFly.get_array(False)
   179    365.6 MiB      0.0 MiB       75841               t = time.time()
   180    365.6 MiB      0.0 MiB       75841               rec_frames += 1
   181    365.6 MiB      0.0 MiB       75841               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    365.6 MiB      0.0 MiB       75841               t_while_end = time.time()
   202    365.6 MiB      0.0 MiB       75841               avg_while += t_while_end - t_while_start
   203    365.6 MiB      0.0 MiB       75841               n += 1
   204                                                 except SpinnakerException:              # If no new frame - pass
   205                                                     e += 1
   206                                                     pass
   207                                                 else:
   208    365.6 MiB      0.0 MiB       75841               t_else_start = time.time()
   209                                                                         # Else we want to show the most recent frame
   210    365.6 MiB      0.0 MiB       75841               try:
   211    365.6 MiB      0.8 MiB       75841                   _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   212    365.6 MiB      0.0 MiB        6366               except queue.Empty:                 # Unless it is already been showed
   213    365.6 MiB      0.0 MiB        6366                   pass
   214                                                     finally:
   215    365.6 MiB      0.0 MiB       75841                   try:
   216    365.6 MiB      0.0 MiB       75841                       img_show_queue.put_nowait([im,rec_frames, t])
   217    365.6 MiB      0.0 MiB        3220                   except queue.Full:
   218    365.6 MiB      0.0 MiB        3220                       pass
   219                                         
   220    365.6 MiB      0.0 MiB       75841               t_else_end = time.time()
   221                                         
   222    365.6 MiB      0.0 MiB       75841               t_else_avg += t_else_end - t_else_start
   223    365.6 MiB      0.0 MiB       75841               n_else += 1
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.3 MiB    317.3 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.3 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.3 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.3 MiB      0.0 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.3 MiB      0.0 MiB           1       try:
    42    341.5 MiB     24.1 MiB           1           tmp_cam = Camera()
    43    361.6 MiB     20.1 MiB           1           tmp_cam.init()
    44    361.1 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.2 MiB      0.1 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.0 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.0 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.0 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.0 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.0 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.0 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.0 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.0 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.0 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.0 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.0 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.0 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.0 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.0 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.0 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.0 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.0 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.0 MiB      0.0 MiB           1       counter = [0,0]
   102    362.0 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.0 MiB      0.0 MiB           1       try:
   106    362.0 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107    362.0 MiB      0.0 MiB           1           blackFly.Width = cam_specs['cam_width']
   108    362.0 MiB      0.0 MiB           1           blackFly.OffsetX = cam_specs['cam_offsetX']
   109    362.0 MiB      0.0 MiB           1           blackFly.OffsetY = cam_specs['cam_offsetY']
   110                                             except CameraError:
   111                                                 print("Could not set camera height. Current properties:")
   112                                                 print(F"Height: {blackFly.Height}")
   113                                                 print(F"Width: {blackFly.Width}")
   114                                                 print(F"OffsetX: {blackFly.OffsetX}")
   115                                                 print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    362.0 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    362.6 MiB      0.6 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    362.6 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    362.7 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    362.7 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    362.8 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    362.8 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    362.8 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    362.8 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    362.8 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    362.8 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    362.8 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    362.8 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    362.8 MiB      0.0 MiB           1       w_start = time.time()
   140    362.8 MiB      0.0 MiB           1       img_process_ready.wait()
   141    362.8 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    362.8 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    362.8 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    362.8 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.2 MiB      0.3 MiB           1       im = blackFly.get_array()
   147    363.2 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.2 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.9 MiB      0.7 MiB           1       img_proc_queue.put([im,0])
   151    363.9 MiB      0.0 MiB           1       img_show_queue.put([im,0])
   152    363.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    363.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    363.9 MiB      0.0 MiB           1       rec_frames = 1
   158    363.9 MiB      0.0 MiB           1       e = 0
   159    363.9 MiB      0.0 MiB           1       n = 0
   160    363.9 MiB      0.0 MiB           1       n_else = 0
   161    363.9 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    363.9 MiB      0.0 MiB           1       avg_while = 0
   164    363.9 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    363.9 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    363.9 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    363.9 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    363.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    365.4 MiB      0.0 MiB       82083       while cam_recording_ready.is_set():
   176    365.4 MiB      0.0 MiB       82082           t_while_start = time.time()
   177    365.4 MiB      0.0 MiB       82082           try:
   178    365.4 MiB      0.3 MiB       82082               im = blackFly.get_array(False)
   179    365.4 MiB      0.0 MiB       82082               t = time.time()
   180    365.4 MiB      0.0 MiB       82082               rec_frames += 1
   181    365.4 MiB      0.3 MiB       82082               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    365.4 MiB      0.0 MiB       82082               t_while_end = time.time()
   202    365.4 MiB      0.0 MiB       82082               avg_while += t_while_end - t_while_start
   203    365.4 MiB      0.0 MiB       82082               n += 1
   204                                                 except SpinnakerException:              # If no new frame - pass
   205                                                     e += 1
   206                                                     pass
   207                                                 else:
   208    365.4 MiB      0.0 MiB       82082               t_else_start = time.time()
   209                                                                         # Else we want to show the most recent frame
   210    365.4 MiB      0.0 MiB       82082               try:
   211    365.4 MiB      0.8 MiB       82082                   _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   212    365.4 MiB      0.0 MiB        6303               except queue.Empty:                 # Unless it is already been showed
   213    365.4 MiB      0.0 MiB        6303                   pass
   214                                                     finally:
   215    365.4 MiB      0.0 MiB       82082                   try:
   216    365.4 MiB      0.0 MiB       82082                       img_show_queue.put_nowait([im,rec_frames, t])
   217    365.4 MiB      0.0 MiB        2940                   except queue.Full:
   218    365.4 MiB      0.0 MiB        2940                       pass
   219                                         
   220    365.4 MiB      0.0 MiB       82082               t_else_end = time.time()
   221                                         
   222    365.4 MiB      0.0 MiB       82082               t_else_avg += t_else_end - t_else_start
   223    365.4 MiB      0.0 MiB       82082               n_else += 1
Filename: /home/titan/KI2020/Code/src/camera_thread_mp.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22    317.5 MiB    317.5 MiB           1   @profile(stream=open(f'memory_profiler_record_camera.log','a+'))
    23                                         def record_camera(img_show_queue,cam_recording_ready,video_name,csv_name,cam_specs):
    24                                             """
    25                                             Function for recording from BlackFly.
    26                                             Gets camera specs from cam_specs (user input in main).
    27                                         
    28                                             All calls starting with blackFly.something makes physical changes to setup,
    29                                             so they must be updated each time we run the camera.
    30                                         
    31                                             Start and stop is triggered by main_event_cam which is shared across multiple threads
    32                                             and is set in the getUserInput thread.
    33                                             """
    34    317.5 MiB      0.0 MiB           1       queue_check_interval = 10
    35                                         
    36    317.6 MiB      0.1 MiB           1       img_process_ready = multiprocessing.Event()
    37                                             
    38    317.8 MiB      0.2 MiB           1       faulthandler.enable()
    39                                         
    40                                             # Clean up any previous attachments
    41    317.8 MiB      0.0 MiB           1       try:
    42    341.8 MiB     24.0 MiB           1           tmp_cam = Camera()
    43    362.1 MiB     20.3 MiB           1           tmp_cam.init()
    44    361.6 MiB     -0.5 MiB           1           tmp_cam.close()
    45                                         
    46    361.8 MiB      0.2 MiB           1           blackFly = Camera()
    47                                             except (NameError , CameraError):
    48                                                 print("Camera not connected!")
    49                                                 sys.exit()
    50                                         
    51    362.6 MiB      0.8 MiB           1       blackFly.init()
    52                                         
    53                                             # Enable parameter editing
    54    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRateEnable = True
    55    362.6 MiB      0.0 MiB           1       blackFly.ExposureAuto = 'Off'
    56    362.6 MiB      0.0 MiB           1       blackFly.GainAuto = 'Off'
    57    362.6 MiB      0.0 MiB           1       blackFly.GammaEnable = True
    58                                         
    59                                             # Settings for hardware trigger - do not edit
    60    362.6 MiB      0.0 MiB           1       blackFly.TriggerMode = 'On'
    61    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionMode = 'Continuous'     
    62    362.6 MiB      0.0 MiB           1       blackFly.TriggerSelector = 'FrameStart'
    63    362.6 MiB      0.0 MiB           1       blackFly.TriggerSource = 'Line0'
    64    362.6 MiB      0.0 MiB           1       blackFly.TriggerActivation = 'RisingEdge'
    65    362.6 MiB      0.0 MiB           1       blackFly.TriggerOverlap = 'ReadOut'
    66    362.6 MiB      0.0 MiB           1       blackFly.TriggerDelay = 9.
    67    362.6 MiB      0.0 MiB           1       blackFly.LineSelector = 'Line0'
    68    362.6 MiB      0.0 MiB           1       blackFly.LineMode = 'Input'
    69                                         
    70                                             # Set FPS to max possible. Acquired framerate will not always be as high as this value.
    71    362.6 MiB      0.0 MiB           1       blackFly.AcquisitionFrameRate = blackFly.get_info('AcquisitionFrameRate')['max']
    72    362.6 MiB      0.0 MiB           1       blackFly.ExposureTime = cam_specs['exposure_time']       # us
    73    362.6 MiB      0.0 MiB           1       blackFly.Gain = cam_specs['gain']                        # db
    74    362.6 MiB      0.0 MiB           1       blackFly.Gamma = cam_specs['gamma']
    75                                         
    76                                             """
    77                                             # Setup counters to count missed triggers
    78                                             blackFly.CounterSelector = 'Counter0'
    79                                             blackFly.CounterEventSource = 'Line0'
    80                                             blackFly.CounterEventActivation = 'RisingEdge'
    81                                             blackFly.CounterDuration = 65520
    82                                             blackFly.CounterTriggerSource = 'Line0'
    83                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    84                                         
    85                                             init_count_trigg = blackFly.CounterValue
    86                                         
    87                                             blackFly.CounterSelector = 'Counter1'
    88                                             blackFly.CounterEventSource = 'ExposureStart'
    89                                             blackFly.CounterEventActivation = 'RisingEdge'
    90                                             blackFly.CounterDuration = 65520
    91                                             blackFly.CounterTriggerSource = 'ExposureStart'
    92                                             blackFly.CounterTriggerActivation = 'RisingEdge'
    93                                         
    94                                             init_count_exp = blackFly.CounterValue
    95                                         
    96                                             print(f'Initial TriggerCounter: {init_count_trigg}')
    97                                             print(f'Initial ExposureCounter: {init_count_exp}')
    98                                             """
    99                                         
   100    362.6 MiB      0.0 MiB           1       tot_count = [0,0]
   101    362.6 MiB      0.0 MiB           1       counter = [0,0]
   102    362.6 MiB      0.0 MiB           1       curr_count = [0,0]
   103                                         
   104                                             # Setting dimensions of camera images
   105    362.6 MiB      0.0 MiB           1       try:
   106    362.6 MiB      0.0 MiB           1           blackFly.Height = cam_specs['cam_height']
   107                                                 blackFly.Width = cam_specs['cam_width']
   108                                                 blackFly.OffsetX = cam_specs['cam_offsetX']
   109                                                 blackFly.OffsetY = cam_specs['cam_offsetY']
   110    362.6 MiB      0.0 MiB           1       except CameraError:
   111    362.6 MiB      0.0 MiB           1           print("Could not set camera height. Current properties:")
   112    363.2 MiB      0.6 MiB           1           print(F"Height: {blackFly.Height}")
   113    363.2 MiB      0.0 MiB           1           print(F"Width: {blackFly.Width}")
   114    363.2 MiB      0.0 MiB           1           print(F"OffsetX: {blackFly.OffsetX}")
   115    363.2 MiB      0.0 MiB           1           print(F"OffsetY: {blackFly.OffsetY}")
   116                                         
   117                                             #Save camera specs for later use
   118    363.2 MiB      0.0 MiB           1       cam_specs['cam_fps'] = blackFly.AcquisitionResultingFrameRate
   119                                             
   120                                             # Queue for processing images
   121    363.2 MiB      0.0 MiB           1       img_proc_queue = multiprocessing.Queue()
   122                                         
   123                                             # Starts a process which will be fed frames from current process and there they are saved to a video.
   124    363.2 MiB      0.0 MiB           1       n_used_proc = os.cpu_count() - 1
   125    363.2 MiB      0.0 MiB           1       img_proc_pool = multiprocessing.Pool(n_used_proc, process_imgs, (img_proc_queue, img_process_ready,video_name,csv_name,cam_specs))
   126                                         
   127    363.2 MiB      0.0 MiB           1       print("Starting BlackFly")
   128                                         
   129    363.4 MiB      0.2 MiB           1       blackFly.start()
   130                                                 
   131    363.4 MiB      0.0 MiB           1       print(F"\n-- [VIDEO] SETTINGS --")
   132    363.4 MiB      0.0 MiB           1       print(F"FPS:\t\t {blackFly.AcquisitionFrameRate}")
   133    363.4 MiB      0.0 MiB           1       print(F"Processed FPS: {blackFly.AcquisitionResultingFrameRate}")
   134    363.4 MiB      0.0 MiB           1       print(F"Exposure time:\t{blackFly.ExposureTime}")
   135    363.4 MiB      0.0 MiB           1       print(F"Gain:\t\t{blackFly.Gain}")
   136    363.4 MiB      0.0 MiB           1       print(F"Gamma:\t\t{blackFly.Gamma}")
   137                                         
   138    363.4 MiB      0.0 MiB           1       print("record_camera: Waiting for img_process_ready to be set")
   139    363.4 MiB      0.0 MiB           1       w_start = time.time()
   140    363.4 MiB      0.0 MiB           1       img_process_ready.wait()
   141    363.4 MiB      0.0 MiB           1       print(F"record_camera: got img_process_ready, waited {(time.time() - w_start)*1000} ms!")
   142    363.4 MiB      0.0 MiB           1       cam_recording_ready.set()
   143    363.4 MiB      0.0 MiB           1       print("record_camera: cam_recording_ready set!")
   144                                         
   145    363.4 MiB      0.0 MiB           1       print("-- [VIDEO] Waiting for external hardware trigger... --")
   146    363.8 MiB      0.4 MiB           1       im = blackFly.get_array()
   147    363.8 MiB      0.0 MiB           1       print("record_camera: got first array!")
   148                                             
   149    363.8 MiB      0.0 MiB           1       print("record_camera: putting frame in queues!")
   150    363.8 MiB      0.0 MiB           1       img_proc_queue.put([im,0])
   151    364.9 MiB      1.1 MiB           1       img_show_queue.put([im,0])
   152    364.9 MiB      0.0 MiB           1       print("record_camera: put frame in queues")
   153                                         
   154                                         
   155    364.9 MiB      0.0 MiB           1       print("\n-- [VIDEO] RECORDING --\n")
   156                                             
   157    364.9 MiB      0.0 MiB           1       rec_frames = 1
   158    364.9 MiB      0.0 MiB           1       e = 0
   159    364.9 MiB      0.0 MiB           1       n = 0
   160    364.9 MiB      0.0 MiB           1       n_else = 0
   161    364.9 MiB      0.0 MiB           1       t_start = time.time()
   162                                         
   163    364.9 MiB      0.0 MiB           1       avg_while = 0
   164    364.9 MiB      0.0 MiB           1       t_else_avg = 0
   165                                         
   166    364.9 MiB      0.0 MiB           1       curr_FPS = []
   167                                         
   168    364.9 MiB      0.0 MiB           1       curr_img_count = 0
   169                                         
   170    364.9 MiB      0.0 MiB           1       check_FPS_interval = 10
   171                                         
   172    364.9 MiB      0.0 MiB           1       check_FPS_t = time.time()
   173                                         
   174                                             # Record until user asks for restart or quit
   175    366.8 MiB      0.0 MiB      191911       while cam_recording_ready.is_set():
   176    366.8 MiB      0.0 MiB      191910           t_while_start = time.time()
   177    366.8 MiB      0.0 MiB      191910           try:
   178    366.8 MiB      0.5 MiB      191910               im = blackFly.get_array(False)
   179    366.8 MiB      0.0 MiB      191906               t = time.time()
   180    366.8 MiB      0.0 MiB      191906               rec_frames += 1
   181    366.8 MiB      0.0 MiB      191906               img_proc_queue.put_nowait([im,rec_frames])
   182                                         
   183                                                     """
   184                                                     # These counters count number of triggers and exposures
   185                                                     # of the camera to make sure the FPS is around 500.
   186                                                     # However, introducing this reduces fps to about 400, so 
   187                                                     # only use for debugging.
   188                                         
   189                                                     blackFly.CounterSelector = 'Counter0' 
   190                                                     curr_count[0] = blackFly.CounterValue
   191                                                     
   192                                                     blackFly.CounterSelector = 'Counter1'
   193                                                     curr_count[1] = blackFly.CounterValue
   194                                                     
   195                                                     for i in [0,1]:
   196                                                         if curr_count[i] < counter[i]: 
   197                                                             tot_count[i] += 1
   198                                                         counter[i] = curr_count[i]
   199                                                     """
   200                                                     
   201    366.8 MiB      0.0 MiB      191906               t_while_end = time.time()
   202    366.8 MiB      0.0 MiB      191906               avg_while += t_while_end - t_while_start
   203    366.8 MiB      0.0 MiB      191906               n += 1
   204    366.8 MiB      0.0 MiB           4           except SpinnakerException:              # If no new frame - pass
   205    366.8 MiB      0.0 MiB           4               e += 1
   206    366.8 MiB      0.0 MiB           4               pass
   207                                                 else:
   208    366.8 MiB      0.0 MiB      191906               t_else_start = time.time()
   209                                                                         # Else we want to show the most recent frame
   210    366.8 MiB      0.0 MiB      191906               try:
   211    366.8 MiB      1.3 MiB      191906                   _ = img_show_queue.get_nowait() # Pop previous most recent frame and put new frame into queue    
   212    366.8 MiB      0.0 MiB       14880               except queue.Empty:                 # Unless it is already been showed
   213    366.8 MiB      0.0 MiB       14880                   pass
   214                                                     finally:
   215    366.8 MiB      0.0 MiB      191906                   try:
   216    366.8 MiB      0.0 MiB      191906                       img_show_queue.put_nowait([im,rec_frames, t])
   217    366.8 MiB      0.0 MiB        8173                   except queue.Full:
   218    366.8 MiB      0.0 MiB        8173                       pass
   219                                         
   220    366.8 MiB      0.0 MiB      191906               t_else_end = time.time()
   221                                         
   222    366.8 MiB      0.0 MiB      191906               t_else_avg += t_else_end - t_else_start
   223    366.8 MiB      0.0 MiB      191906               n_else += 1
